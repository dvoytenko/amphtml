{
  "version": 3,
  "sources": ["../../src/src/assert.js", "../../src/src/internal-version.js", "../../src/src/url-try-decode-uri-component.js", "../../src/src/url-parse-query-string.js", "../../src/src/mode.js", "../../src/src/types.js", "../../src/src/config.js", "../../src/src/log.js", "../../src/src/action-constants.js", "../../src/src/resolved-promise.js", "../../node_modules/preact/src/constants.js", "../../node_modules/preact/src/options.js", "../../node_modules/preact/src/create-element.js", "../../node_modules/preact/src/component.js", "../../node_modules/preact/src/render.js", "../../node_modules/preact/src/create-context.js", "../../node_modules/preact/src/util.js", "../../node_modules/preact/src/diff/children.js", "../../node_modules/preact/src/diff/props.js", "../../node_modules/preact/src/diff/index.js", "../../node_modules/preact/src/clone-element.js", "../../node_modules/preact/src/diff/catch-error.js", "../../node_modules/preact/hooks/src/index.js", "../../src/preact/src/preact/index.js", "../../src/utils/src/utils/math.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/dimensions.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/base-carousel.jss.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/arrow.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/carousel-context.js", "../../node_modules/preact/compat/src/util.js", "../../node_modules/preact/compat/src/PureComponent.js", "../../node_modules/preact/compat/src/memo.js", "../../node_modules/preact/compat/src/forwardRef.js", "../../node_modules/preact/compat/src/Children.js", "../../node_modules/preact/compat/src/suspense.js", "../../node_modules/preact/compat/src/suspense-list.js", "../../node_modules/preact/compat/src/portals.js", "../../node_modules/preact/compat/src/render.js", "../../node_modules/preact/compat/src/events.js", "../../node_modules/preact/compat/src/index.js", "../../src/preact/src/preact/compat.js", "../../src/preact/component/src/preact/component/contain.js", "../../src/preact/component/src/preact/component/wrapper.js", "../../src/preact/component/src/preact/component/value-ref.js", "../../extensions/amp-lightbox-gallery/1.0/extensions/amp-lightbox-gallery/1.0/context.js", "../../src/utils/src/utils/rate-limit.js", "../../src/utils/src/utils/object.js", "../../src/src/style.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/scroller.js", "../../src/src/loading.js", "../../src/preact/src/preact/context.js", "../../extensions/amp-lightbox/1.0/extensions/amp-lightbox/1.0/component.jss.js", "../../extensions/amp-lightbox/1.0/extensions/amp-lightbox/1.0/component.js", "../../src/utils/src/utils/id-generator.js", "../../extensions/amp-lightbox-gallery/1.0/extensions/amp-lightbox-gallery/1.0/consumer.js", "../../src/utils/src/utils/promise.js", "../../third_party/css-escape/third_party/css-escape/css-escape.js", "../../src/src/css.js", "../../src/src/string.js", "../../src/src/dom.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/base-carousel.js", "../../build/build/amp-base-carousel-1.0.css.js", "../../src/context/src/context/scan.js", "../../src/utils/src/utils/array.js", "../../src/context/src/context/scheduler.js", "../../src/context/src/context/values.js", "../../src/context/src/context/node.js", "../../src/context/src/context/prop.js", "../../src/context/src/context/component-meta.js", "../../src/context/src/context/component-hooks.js", "../../src/context/src/context/component.js", "../../src/context/src/context/component-install.js", "../../src/context/src/context/index.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/carousel-props.js", "../../src/src/amp-events.js", "../../src/contextprops/src/contextprops/index.js", "../../src/src/service.js", "../../src/src/url.js", "../../src/src/experiments.js", "../../src/src/layout.js", "../../src/utils/src/utils/media-query-props.js", "../../src/preact/src/preact/slot.js", "../../src/src/element-service.js", "../../src/src/services.js", "../../src/src/event-helper.js", "../../src/src/error.js", "../../src/utils/src/utils/date.js", "../../third_party/webcomponentsjs/third_party/webcomponentsjs/ShadowCSS.js", "../../src/src/shadow-embed.js", "../../src/preact/src/preact/base-element.js", "../../extensions/amp-base-carousel/1.0/extensions/amp-base-carousel/1.0/amp-base-carousel.js"],
  "sourcesContent": ["/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @fileoverview Dependency-free assertion helpers for use in Preact. */\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n/**\n * User error class for use in Preact. Use of sentinel string instead of a\n * boolean to check user errors because errors could be rethrown by some native\n * code as a new error, and only a message would survive. Mirrors errors\n * produced by `user().error()` in src/log.js.\n * @final\n * @public\n */\nexport class UserError extends Error {\n  /**\n   * Builds the error, adding the user sentinel if not present.\n   * @param {string} message\n   */\n  constructor(message) {\n    if (!message) {\n      message = USER_ERROR_SENTINEL;\n    } else if (message.indexOf(USER_ERROR_SENTINEL) == -1) {\n      message += USER_ERROR_SENTINEL;\n    }\n\n    super(message);\n  }\n}\n\n/**\n * Throws a provided error if the second argument isn't trueish.\n * @param {Object} errorCls\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {...*} var_args Arguments substituted into %s in the message\n * @return {T}\n * @throws {Error} when shouldBeTruthy is not truthy.\n */\nfunction assertion(errorCls, shouldBeTruthy, opt_message, var_args) {\n  if (shouldBeTruthy) {\n    return shouldBeTruthy;\n  }\n\n  // Substitute provided values into format string in message\n  const message = Array.prototype.slice\n    // Skip the first 3 arguments to isolate format params\n    .call(arguments, 3)\n    .reduce(\n      (msg, subValue) => msg.replace('%s', subValue),\n      opt_message || 'Assertion failed'\n    );\n\n  throw new errorCls(message);\n}\n\n/**\n * Throws a user error if the first argument isn't trueish. Mirrors userAssert\n * in src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @throws {UserError} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function pureUserAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertion(\n    UserError,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish. Mirrors devAssert in\n * src/log.js.\n * @param {T} shouldBeTruthy\n * @param {string} opt_message\n * @param {*=} opt_1 Optional argument (var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T}\n * @throws {Error} when shouldBeTruthy is not truthy.\n * @closurePrimitive {asserts.truthy}\n */\nexport function pureDevAssert(\n  shouldBeTruthy,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return assertion(\n    Error,\n    shouldBeTruthy,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the internal AMP runtime version. Note that this is not the RTV,\n * which is a prefix and the runtime version.\n *\n * The call sites for this function are replaced with a compile time constant\n * string.\n *\n * @return {string}\n */\nexport function internalRuntimeVersion() {\n  return '$internalRuntimeVersion$';\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * DO NOT import the function from this file. Instead, import\n * tryDecodeUriComponent from `src/url.js`.\n *\n * @param {string} component\n * @param {string=} fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent_(component, fallback = '') {\n  try {\n    return decodeURIComponent(component);\n  } catch (e) {\n    return fallback;\n  }\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = tryDecodeUriComponent_(match[1], match[1]);\n    const value = match[2]\n      ? tryDecodeUriComponent_(match[2].replace(/\\+/g, ' '), match[2])\n      : '';\n    params[name] = value;\n  }\n  return params;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalRuntimeVersion} from './internal-version';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n *   runtime: (null|string|undefined),\n *   a4aId: (null|string|undefined),\n *   esm: (boolean|undefined)\n * }}\n */\nexport let ModeDef;\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.__AMP_MODE) {\n    return win.__AMP_MODE;\n  }\n  return (win.__AMP_MODE = getMode_(win));\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // TODO(erwinmombay): simplify the logic here\n  const AMP_CONFIG = self.AMP_CONFIG || {};\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when `gulp dist` is called without the\n  // --fortesting flag.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n\n  const runningTests =\n    IS_DEV && !!(AMP_CONFIG.test || win.__AMP_TEST || win.__karma__);\n  const isLocalDev = IS_DEV && (!!AMP_CONFIG.localDev || runningTests);\n  const hashQuery = parseQueryString_(\n    // location.originalHash is set by the viewer when it removes the fragment\n    // from the URL.\n    win.location.originalHash || win.location.hash\n  );\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation or enable pub level logging. Validation can be\n    // bypassed via #validate=0.\n    // Note that AMP_DEV_MODE flag is used for testing purposes.\n    // Use Array.indexOf instead of Array.includes because of #24219\n    development: !!(\n      ['1', 'actions', 'amp', 'amp4ads', 'amp4email'].indexOf(\n        hashQuery['development']\n      ) >= 0 || win.AMP_DEV_MODE\n    ),\n    examiner: hashQuery['development'] == '2',\n    esm: IS_ESM,\n    // amp-geo override\n    geoOverride: hashQuery['amp-geo'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: runningTests,\n    log: hashQuery['log'],\n    version: internalRuntimeVersion(),\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @return {string}\n */\nfunction getRtvVersion(win) {\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `internalRuntimeVersion` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether internalRuntimeVersion should contain\n  // minor version.\n  return `01${internalRuntimeVersion()}`;\n}\n\n/**\n * @param {!Window} win\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win) {\n  return getRtvVersion(win);\n}\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  return arrayLike ? Array.prototype.slice.call(arrayLike) : [];\n}\n\n/**\n * If the specified argument is an array, it's returned as is. If it's a\n * single item, the array containing this item is created and returned.\n * @param {!Array<T>|T} arrayOrSingleItem\n * @return {!Array<T>}\n * @template T\n */\nexport function arrayOrSingleItemToArray(arrayOrSingleItem) {\n  return isArray(arrayOrSingleItem)\n    ? /** @type {!Array<T>} */ (arrayOrSingleItem)\n    : [arrayOrSingleItem];\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Externs declare that access `defaultView` from `document` or\n * `ownerDocument` is of type `(Window|null)` but most of our parameter types\n * assume that it is never null. This is OK in practice as we ever only get\n * null on disconnected documents or old IE.\n * This helper function casts it into just a simple Window return type.\n *\n * @param {!Window|null} winOrNull\n * @return {!Window}\n */\nexport function toWin(winOrNull) {\n  return /** @type {!Window} */ (winOrNull);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex =\n  (typeof env['thirdPartyFrameRegex'] == 'string'\n    ? new RegExp(env['thirdPartyFrameRegex'])\n    : env['thirdPartyFrameRegex']) || /^d-\\d+\\.ampproject\\.net$/;\n\nconst cdnProxyRegex =\n  (typeof env['cdnProxyRegex'] == 'string'\n    ? new RegExp(env['cdnProxyRegex'])\n    : env['cdnProxyRegex']) ||\n  /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org$/;\n\n/**\n * Check for a custom URL definition in special <meta> tags. Note that this does\n * not allow for distinct custom URLs in AmpDocShadow instances. The shell is\n * allowed to define one set of custom URLs via AMP_CONFIG (recommended) or by\n * including <meta> tags in the shell <head>. Those custom URLs then apply to\n * all AMP documents loaded in the shell.\n * @param {string} name\n * @return {?string}\n * @private\n */\nfunction getMetaUrl(name) {\n  // Avoid exceptions in unit tests\n  if (!self.document || !self.document.head) {\n    return null;\n  }\n\n  // Disallow on proxy origins\n  if (self.location && cdnProxyRegex.test(self.location.origin)) {\n    return null;\n  }\n\n  const metaEl = self.document.head./*OK*/ querySelector(\n    `meta[name=\"${name}\"]`\n  );\n  return (metaEl && metaEl.getAttribute('content')) || null;\n}\n\n/** @type {!Object<string, string|boolean|RegExp|Array<RegExp>>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex,\n  cdn:\n    env['cdnUrl'] || getMetaUrl('runtime-host') || 'https://cdn.ampproject.org',\n  /* Note that cdnProxyRegex is only ever checked against origins\n   * (proto://host[:port]) so does not need to consider path\n   */\n  cdnProxyRegex,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting:\n    env['errorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r',\n  betaErrorReporting:\n    env['betaErrorReportingUrl'] ||\n    'https://us-central1-amp-error-reporting.cloudfunctions.net/r-beta',\n  localDev: env['localDev'] || false,\n  /**\n   * These domains are trusted with more sensitive viewer operations such as\n   * propagating the referrer. If you believe your domain should be here,\n   * file the issue on GitHub to discuss. The process will be similar\n   * (but somewhat more stringent) to the one described in the [3p/README.md](\n   * https://github.com/ampproject/amphtml/blob/master/3p/README.md)\n   *\n   * {!Array<!RegExp>}\n   */\n  trustedViewerHosts: [\n    /(^|\\.)google\\.(com?|[a-z]{2}|com?\\.[a-z]{2}|cat)$/,\n    /(^|\\.)gmail\\.(com|dev)$/,\n  ],\n  // Optional fallback API if amp-geo is left unpatched\n  geoApi: env['geoApiUrl'] || getMetaUrl('amp-geo-api'),\n};\n\nexport const config = {\n  urls,\n};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {USER_ERROR_SENTINEL} from './assert';\nimport {getMode} from './mode';\nimport {internalRuntimeVersion} from './internal-version';\nimport {isArray, isEnumValue} from './types';\nimport {once} from './utils/function';\nimport {urls} from './config';\n\nconst noop = () => {};\n\nexport {USER_ERROR_SENTINEL};\n\n/**\n * Four zero width space.\n *\n * @const {string}\n */\nexport const USER_ERROR_EMBED_SENTINEL = '\\u200B\\u200B\\u200B\\u200B';\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n/**\n * @param {string} message\n * @return {string} The new message without USER_ERROR_SENTINEL\n */\nexport function stripUserError(message) {\n  return message.replace(USER_ERROR_SENTINEL, '');\n}\n\n/**\n * @param {string} message\n * @return {boolean} Whether this message was a a user error from an iframe embed.\n */\nexport function isUserErrorEmbed(message) {\n  return message.indexOf(USER_ERROR_EMBED_SENTINEL) >= 0;\n}\n\n/**\n * @enum {number}\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.__AMP_REPORT_ERROR = fn;\n}\n\n/**\n * @type {!LogLevel|undefined}\n * @private\n */\nlet levelOverride_ = undefined;\n\n/**\n * @param {!LogLevel} level\n */\nexport function overrideLogLevel(level) {\n  levelOverride_ = level;\n}\n\n/**\n * Prefixes `internalRuntimeVersion` with the `01` channel signifier (for prod.) for\n * extracted message URLs.\n * (Specific channel is irrelevant: message tables are invariant on internal version.)\n * @return {string}\n */\nconst messageUrlRtv = () => `01${internalRuntimeVersion()}`;\n\n/**\n * Gets a URL to display a message on amp.dev.\n * @param {string} id\n * @param {!Array} interpolatedParts\n * @return {string}\n */\nconst externalMessageUrl = (id, interpolatedParts) =>\n  interpolatedParts.reduce(\n    (prefix, arg) => `${prefix}&s[]=${messageArgToEncodedComponent(arg)}`,\n    `https://log.amp.dev/?v=${messageUrlRtv()}&id=${encodeURIComponent(id)}`\n  );\n\n/**\n * URL to simple log messages table JSON file, which contains an Object<string, string>\n * which maps message id to full message template.\n * @return {string}\n */\nconst externalMessagesSimpleTableUrl = () =>\n  `${urls.cdn}/rtv/${messageUrlRtv()}/log-messages.simple.json`;\n\n/**\n * @param {*} arg\n * @return {string}\n */\nconst messageArgToEncodedComponent = (arg) =>\n  encodeURIComponent(String(elementStringOrPassthru(arg)));\n\n/**\n * Logging class. Use of sentinel string instead of a boolean to check user/dev\n * errors because errors could be rethrown by some native code as a new error,\n * and only a message would survive. Also, some browser don\u2019t support a 5th\n * error object argument in window.onerror. List of supporting browser can be\n * found here:\n * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * opt_suffix will be appended to error message to identify the type of the\n   * error message. We can't rely on the error object to pass along the type\n   * because some browsers do not have this param in its window.onerror API.\n   * See:\n   * https://blog.sentry.io/2016/01/04/client-javascript-reporting-window-onerror.html\n   *\n   * @param {!Window} win\n   * @param {function(number, boolean):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix = '') {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = getMode().test && win.__AMP_TEST_IFRAME ? win.parent : win;\n\n    /** @private @const {function(number, boolean):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.defaultLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix;\n\n    /** @private {?JsonObject} */\n    this.messages_ = null;\n\n    this.fetchExternalMessagesOnce_ = once(() => {\n      win\n        .fetch(externalMessagesSimpleTableUrl())\n        .then((response) => response.json(), noop)\n        .then((opt_messages) => {\n          if (opt_messages) {\n            this.messages_ = /** @type {!JsonObject} */ (opt_messages);\n          }\n        });\n    });\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  getLevel_() {\n    return levelOverride_ !== undefined ? levelOverride_ : this.level_;\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    return this.defaultLevelWithFunc_();\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  defaultLevelWithFunc_() {\n    // Delegate to the specific resolver.\n    return this.levelFunc_(parseInt(getMode().log, 10), getMode().development);\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.getLevel_() != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      const args = this.maybeExpandMessageArgs_(messages);\n      // Prefix console message with \"[tag]\".\n      const prefix = `[${tag}]`;\n      if (typeof args[0] === 'string') {\n        // Prepend string to avoid breaking string substitutions e.g. %s.\n        args[0] = prefix + ' ' + args[0];\n      } else {\n        args.unshift(prefix);\n      }\n      fn.apply(this.win.console, args);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.getLevel_() != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.getLevel_() >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(\n        null,\n        Array.prototype.slice.call(arguments, 1)\n      );\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  error(tag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.name = tag || error.name;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {!Array|string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @throws {!Error} When `value` is falsey.\n   * @template T\n   * @closurePrimitive {asserts.truthy}\n   */\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (isArray(opt_message)) {\n      return this.assert.apply(\n        this,\n        [shouldBeTrueish].concat(\n          this.expandMessageArgs_(/** @type {!Array} */ (opt_message))\n        )\n      );\n    }\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      let i = 2;\n      pushIfNonEmpty(messageArray, first);\n      while (splitMessage.length > 0) {\n        const nextConstant = splitMessage.shift();\n        const val = arguments[i++];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += stringOrElementString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // __AMP_REPORT_ERROR is installed globally per window in the entry point.\n      self.__AMP_REPORT_ERROR(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assertType_(\n      shouldBeElement,\n      shouldBeTrueish,\n      'Element expected',\n      opt_message\n    );\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertString(shouldBeString, opt_message) {\n    this.assertType_(\n      shouldBeString,\n      typeof shouldBeString == 'string',\n      'String expected',\n      opt_message\n    );\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assertType_(\n      shouldBeNumber,\n      typeof shouldBeNumber == 'number',\n      'Number expected',\n      opt_message\n    );\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Throws an error if the first argument is not an array.\n   * The array can be empty.\n   *\n   * @param {*} shouldBeArray\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {!Array} The array value\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertArray(shouldBeArray, opt_message) {\n    this.assertType_(\n      shouldBeArray,\n      isArray(shouldBeArray),\n      'Array expected',\n      opt_message\n    );\n    return /** @type {!Array} */ (shouldBeArray);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a boolean.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeBoolean\n   * @param {!Array|string=} opt_message The assertion message\n   * @return {boolean} The boolean value.\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertBoolean(shouldBeBoolean, opt_message) {\n    this.assertType_(\n      shouldBeBoolean,\n      !!shouldBeBoolean === shouldBeBoolean,\n      'Boolean expected',\n      opt_message\n    );\n    return /** @type {boolean} */ (shouldBeBoolean);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a\n   * value, the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return {T}\n   * @template T\n   * @closurePrimitive {asserts.matchesReturn}\n   */\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false, 'Unknown %s value: \"%s\"', opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n\n  /**\n   * @param {!Array} args\n   * @return {!Array}\n   * @private\n   */\n  maybeExpandMessageArgs_(args) {\n    if (isArray(args[0])) {\n      return this.expandMessageArgs_(/** @type {!Array} */ (args[0]));\n    }\n    return args;\n  }\n\n  /**\n   * Either redirects a pair of (errorId, ...args) to a URL where the full\n   * message is displayed, or displays it from a fetched table.\n   *\n   * This method is used by the output of the `transform-log-methods` babel\n   * plugin. It should not be used directly. Use the (*error|assert*|info|warn)\n   * methods instead.\n   *\n   * @param {!Array} parts\n   * @return {!Array}\n   * @private\n   */\n  expandMessageArgs_(parts) {\n    // First value should exist.\n    const id = parts.shift();\n    // Best effort fetch of message template table.\n    // Since this is async, the first few logs might be indirected to a URL even\n    // if in development mode. Message table is ~small so this should be a short\n    // gap.\n    if (getMode(this.win).development) {\n      this.fetchExternalMessagesOnce_();\n    }\n    if (this.messages_ && id in this.messages_) {\n      return [this.messages_[id]].concat(parts);\n    }\n    return [`More info at ${externalMessageUrl(id, parts)}`];\n  }\n\n  /**\n   * Asserts types, backbone of `assertNumber`, `assertString`, etc.\n   *\n   * It understands array-based \"id\"-contracted messages.\n   *\n   * Otherwise creates a sprintf syntax string containing the optional message or the\n   * default. An interpolation token is added at the end to include the `subject`.\n   * @param {*} subject\n   * @param {*} assertion\n   * @param {string} defaultMessage\n   * @param {!Array|string=} opt_message\n   * @private\n   */\n  assertType_(subject, assertion, defaultMessage, opt_message) {\n    if (isArray(opt_message)) {\n      this.assert(assertion, opt_message.concat(subject));\n    } else {\n      this.assert(assertion, `${opt_message || defaultMessage}: %s`, subject);\n    }\n  }\n}\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nconst stringOrElementString = (val) =>\n  /** @type {string} */ (elementStringOrPassthru(val));\n\n/**\n * @param {*} val\n * @return {*}\n */\nfunction elementStringOrPassthru(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return val;\n}\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const messageProperty = Object.getOwnPropertyDescriptor(error, 'message');\n  if (messageProperty && messageProperty.writable) {\n    return error;\n  }\n\n  const {message, stack} = error;\n  const e = new Error(message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @visibleForTesting\n */\nexport function createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.__AMP_REPORT_ERROR(error);\n    throw error;\n  });\n}\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log, userForEmbed: ?Log}}\n */\nself.__AMP_LOG = self.__AMP_LOG || {\n  user: null,\n  dev: null,\n  userForEmbed: null,\n};\n\nconst logs = self.__AMP_LOG;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?typeof Log}\n */\nlet logConstructor = null;\n\n/**\n * Initializes log constructor.\n */\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier than\n  // the binary that does call `initLogConstructor` (amp.js), the extension will\n  // throw an error as that extension will never be able to initialize the log\n  // instances and we also don't want it to call `initLogConstructor` either\n  // (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are ready\n  // for use (stored globally) after the main binary calls `initLogConstructor`.\n  dev();\n  user();\n}\n\n/**\n * Resets log constructor for testing.\n */\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *  3. AMP.setLogLevel(D) is called, where D >= 1.\n *\n * @param {!Element=} opt_element\n * @return {!Log}\n */\nexport function user(opt_element) {\n  if (!logs.user) {\n    logs.user = getUserLogger(USER_ERROR_SENTINEL);\n  }\n  if (!isFromEmbed(logs.user.win, opt_element)) {\n    return logs.user;\n  } else {\n    if (logs.userForEmbed) {\n      return logs.userForEmbed;\n    }\n    return (logs.userForEmbed = getUserLogger(USER_ERROR_EMBED_SENTINEL));\n  }\n}\n\n/**\n * Getter for user logger\n * @param {string=} suffix\n * @return {!Log}\n */\nfunction getUserLogger(suffix) {\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return new logConstructor(\n    self,\n    (logNum, development) => {\n      if (development || logNum >= 1) {\n        return LogLevel.FINE;\n      }\n      return LogLevel.WARN;\n    },\n    suffix\n  );\n}\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped\n * in the PROD binary. However, `devLog().assert` result is preserved in either\n * case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *  3. AMP.setLogLevel(D) is called, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return (logs.dev = new logConstructor(self, (logNum) => {\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  }));\n}\n\n/**\n * @param {!Window} win\n * @param {!Element=} opt_element\n * @return {boolean} isEmbed\n */\nexport function isFromEmbed(win, opt_element) {\n  if (!opt_element) {\n    return false;\n  }\n  return opt_element.ownerDocument.defaultView != win;\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function devAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  if (getMode().minified) {\n    return shouldBeTrueish;\n  }\n  return dev()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n\n/**\n * Throws an error if the first argument isn't trueish.\n *\n * Supports argument substitution into the message via %s placeholders.\n *\n * Throws an error object that has two extra properties:\n * - associatedElement: This is the first element provided in the var args.\n *   It can be used for improved display of error messages.\n * - messageArray: The elements of the substituted message as non-stringified\n *   elements in an array. When e.g. passed to console.error this yields\n *   native displays of things like HTML elements.\n *\n * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n *     not evaluate to true.\n * @param {!Array|string=} opt_message The assertion message\n * @param {*=} opt_1 Optional argument (Var arg as individual params for better\n * @param {*=} opt_2 Optional argument inlining)\n * @param {*=} opt_3 Optional argument\n * @param {*=} opt_4 Optional argument\n * @param {*=} opt_5 Optional argument\n * @param {*=} opt_6 Optional argument\n * @param {*=} opt_7 Optional argument\n * @param {*=} opt_8 Optional argument\n * @param {*=} opt_9 Optional argument\n * @return {T} The value of shouldBeTrueish.\n * @throws {!Error} When `shouldBeTrueish` is falsey.\n * @template T\n * @closurePrimitive {asserts.truthy}\n */\nexport function userAssert(\n  shouldBeTrueish,\n  opt_message,\n  opt_1,\n  opt_2,\n  opt_3,\n  opt_4,\n  opt_5,\n  opt_6,\n  opt_7,\n  opt_8,\n  opt_9\n) {\n  return user()./*Orig call*/ assert(\n    shouldBeTrueish,\n    opt_message,\n    opt_1,\n    opt_2,\n    opt_3,\n    opt_4,\n    opt_5,\n    opt_6,\n    opt_7,\n    opt_8,\n    opt_9\n  );\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from './log';\n\n/**\n * Key string in an action arguments map for an unparsed object literal string.\n *\n * E.g. for the action in <p on=\"tap:AMP.setState({foo: 'bar'})\",\n * then `args[RAW_OBJECT_ARGS_KEY]` is the string \"{foo: 'bar'}\".\n *\n * The action service delegates parsing of object literals to the corresponding\n * extension (in the example above, amp-bind).\n *\n * @see ./service/action-impl.ActionInfoDef\n * @const {string}\n */\nexport const RAW_OBJECT_ARGS_KEY = '__AMP_OBJECT_STRING__';\n\n/**\n * Identifier for an element's default action.\n *\n * @const {string}\n */\nexport const DEFAULT_ACTION = 'activate';\n\n/**\n * Corresponds to degree of user intent, i.e. events triggered with strong\n * user intent have high trust.\n *\n * @enum {number}\n */\nexport const ActionTrust = {\n  /**\n   * Events that are triggered without a user gesture, or triggered by a user\n   * gesture with weak intent (e.g. scroll) are \"low trust\".\n   *\n   * Actions that have low impact on the page's visual state should require\n   * \"low trust\" (e.g. pausing a video).\n   */\n  LOW: 1,\n  /**\n   * Events that are triggered nearly immediately (up to a few seconds) after\n   * a user gesture with strong intent (e.g. tap or swipe) are \"default trust\".\n   *\n   * Actions that can modify the page's visual state (e.g. content jumping)\n   * should require \"default trust\". This is the default required trust level\n   * for actions.\n   */\n  DEFAULT: 2,\n  /**\n   * Events that are triggered immediately after a user gesture with\n   * strong intent (e.g. tap or swipe) are \"high trust\".\n   *\n   * There are no actions yet that require high trust.\n   */\n  HIGH: 3,\n};\n\n/**\n * @param {!ActionTrust} actionTrust\n * @return {string}\n */\nexport function actionTrustToString(actionTrust) {\n  switch (actionTrust) {\n    case ActionTrust.LOW:\n      return 'low';\n    case ActionTrust.HIGH:\n      return 'high';\n    default:\n      devAssert(actionTrust === ActionTrust.DEFAULT);\n      return 'default';\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet resolved;\n\n/**\n * Returns a cached resolved promise.\n * Use this instead of directly calling Promise.resolve().\n * @return {!Promise<undefined>}\n */\nexport function resolvedPromise() {\n  if (resolved) {\n    return resolved;\n  }\n\n  // It's important that we call with `undefined` here, to prevent a transform\n  // recursion. If we didn't pass an arg, then the transformer would replace\n  // this callsite with a call to `resolvedPromise()`.\n  resolved = Promise.resolve(undefined);\n  return resolved;\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n", "import { _catchError } from './diff/catch-error';\n\n/** @type {import('./internal').Options}  */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\ti;\n\tfor (i in props) {\n\t\tif (i !== 'key' && i !== 'ref') normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type === 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(\n\t\ttype,\n\t\tnormalizedProps,\n\t\tprops && props.key,\n\t\tprops && props.ref\n\t);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\tupdate = update(s, this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tthis._force = false;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\tassign({}, vnode),\n\t\t\tcomponent._context,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tnull,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p = q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\tnewParentVNode,\n\toldParentVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti = 0;\n\tnewParentVNode._children = toChildArray(\n\t\tnewParentVNode._children,\n\t\tchildVNode => {\n\t\t\tif (childVNode != null) {\n\t\t\t\tchildVNode._parent = newParentVNode;\n\t\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t\t// (holes).\n\t\t\t\toldVNode = oldChildren[i];\n\n\t\t\t\tif (\n\t\t\t\t\toldVNode === null ||\n\t\t\t\t\t(oldVNode &&\n\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t\t\t) {\n\t\t\t\t\toldChildren[i] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\toldVNode &&\n\t\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toldVNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\t\tnewDom = diff(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\tcontext,\n\t\t\t\t\tisSvg,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tcommitQueue,\n\t\t\t\t\toldDom,\n\t\t\t\t\tisHydrating\n\t\t\t\t);\n\n\t\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t\tif (!refs) refs = [];\n\t\t\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t\t\t}\n\n\t\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\t\tif (newDom != null) {\n\t\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\texcessDomChildren == oldVNode ||\n\t\t\t\t\t\tnewDom != oldDom ||\n\t\t\t\t\t\tnewDom.parentNode == null\n\t\t\t\t\t) {\n\t\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tsibDom = oldDom, j = 0;\n\t\t\t\t\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildrenLength;\n\t\t\t\t\t\t\t\tj += 2\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t\t// updated properly.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t\t// only a single DOM node\n\t\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t\treturn childVNode;\n\t\t}\n\t);\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type !== 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children == null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t} else if (Array.isArray(children)) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t} else if (!callback) {\n\t\tflattened.push(children);\n\t} else if (typeof children === 'string' || typeof children === 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null)));\n\t} else if (children._dom != null || children._component != null) {\n\t\tflattened.push(\n\t\t\tcallback(createVNode(children.type, children.props, children.key, null))\n\t\t);\n\t} else {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (\n\t\ttypeof value === 'number' &&\n\t\tIS_NON_DIMENSIONAL.test(key) === false\n\t) {\n\t\tstyle[key] = value + 'px';\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else {\n\t\tstyle[key] = value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tif (isSvg) {\n\t\tif (name === 'className') {\n\t\t\tname = 'class';\n\t\t}\n\t} else if (name === 'class') {\n\t\tname = 'className';\n\t}\n\n\tif (name === 'key' || name === 'children') {\n\t} else if (name === 'style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value === 'string') {\n\t\t\ts.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue === 'string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tlet useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t} else {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (\n\t\ttypeof value !== 'function' &&\n\t\tname !== 'dangerouslySetInnerHTML'\n\t) {\n\t\tif (name !== (name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (value == null || value === false) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType === 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\tc.shouldComponentUpdate(newProps, c._nextState, cctx) === false\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) {\n\t\t\t\t\t\t\tnewVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = toChildArray(\n\t\t\t\tisTopLevelFragment ? tmp.props.children : tmp\n\t\t\t);\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = null;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (dom == null && excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t(newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type === null) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\t}\n\n\t\tif (oldProps !== newProps && dom.data != newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else if (newVNode !== oldVNode) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\tnewProps.value !== undefined &&\n\t\t\t\tnewProps.value !== dom.value\n\t\t\t) {\n\t\t\t\tdom.value = newProps.value == null ? '' : newProps.value;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\tnewProps.checked !== undefined &&\n\t\t\t\tnewProps.checked !== dom.checked\n\t\t\t) {\n\t\t\t\tdom.checked = newProps.checked;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length > 2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(\n\t\tvnode.type,\n\t\tprops,\n\t\tprops.key || vnode.key,\n\t\tprops.ref || vnode.ref\n\t);\n}\n", "import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, hasCaught;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tcomponent.constructor &&\n\t\t\t\t\tcomponent.constructor.getDerivedStateFromError != null\n\t\t\t\t) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.setState(\n\t\t\t\t\t\tcomponent.constructor.getDerivedStateFromError(error)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\n\t\t\t\tif (hasCaught)\n\t\t\t\t\treturn enqueueRender((component._pendingError = component));\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tif (currentComponent.__hooks) {\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\tcurrentComponent.__hooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\tif (hooks._pendingEffects.length) {\n\t\t\tafterPaint(afterPaintEffects.push(c));\n\t\t}\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t);\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\thooks._list.forEach(hook => hook._cleanup && hook._cleanup());\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index) {\n\tif (options._hook) options._hook(currentComponent);\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = { _list: [], _pendingEffects: [] });\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++);\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value[0] = nextValue;\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref === 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\tif (!provider) return context._defaultValue;\n\tconst state = getHookState(currentIndex++);\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (typeof window !== 'undefined') {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\n\t\t/* istanbul ignore next */\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (hook._cleanup) hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\tconst result = hook._value();\n\tif (typeof result === 'function') hook._cleanup = result;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f === 'function' ? f(arg) : f;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as hooks from /*OK*/ 'preact/hooks';\nimport * as preact from /*OK*/ 'preact';\n\n// Defines the type interfaces for the approved Preact APIs.\n// TODO: isValidElement, Component\n\n/**\n * @param {!PreactDef.FunctionalComponent|string} unusedType\n * @param {?Object=} unusedProps\n * @param {...*} var_args\n * @return {!PreactDef.VNode}\n */\nexport function createElement(unusedType, unusedProps, var_args) {\n  return preact.createElement.apply(undefined, arguments);\n}\n\n/**\n * @param {!PreactDef.VNode} unusedElement\n * @param {?Object=} unusedProps\n * @param {...PreactDef.Renderable} unusedChildren\n * @return {!PreactDef.VNode}\n */\nexport function cloneElement(unusedElement, unusedProps, unusedChildren) {\n  return preact.cloneElement.apply(undefined, arguments);\n}\n\n/**\n * @param {?PreactDef.VNode} vnode\n * @param {Node} container\n * @param {?Node=} opt_replaceNode\n */\nexport function render(vnode, container, opt_replaceNode) {\n  preact.render(vnode, container, opt_replaceNode);\n}\n\n/**\n * @param {!PreactDef.VNode} vnode\n * @param {Node} container\n */\nexport function hydrate(vnode, container) {\n  preact.hydrate(vnode, container);\n}\n\n/**\n * @param {?Object=} props\n * @return {PreactDef.Renderable}\n */\nexport function Fragment(props) {\n  return preact.Fragment(props);\n}\n\n/**\n * @return {{current: (T|null)}}\n * @template T\n */\nexport function createRef() {\n  return preact.createRef();\n}\n\n/**\n * @param {T} value\n * @return {!PreactDef.Context<T>}\n * @template T\n */\nexport function createContext(value) {\n  return preact.createContext(value);\n}\n\n// Defines the type interfaces for the approved Preact Hooks APIs.\n// TODO: useReducer, useDebugValue, useErrorBoundary\n\n/**\n * @param {S|function():S} initial\n * @return {{0: S, 1: function((S|function(S):S)):undefined}}\n * @template S\n */\nexport function useState(initial) {\n  return hooks.useState(initial);\n}\n\n/**\n * @param {T|null} initial\n * @return {{current: (T|null)}}\n * @template T\n */\nexport function useRef(initial) {\n  return hooks.useRef(initial);\n}\n\n/**\n * @param {function():(function():undefined|undefined)} effect\n * @param {!Array<*>=} opt_deps\n */\nexport function useEffect(effect, opt_deps) {\n  hooks.useEffect(effect, opt_deps);\n}\n\n/**\n * @param {function():(function():undefined|undefined)} effect\n * @param {!Array<*>=} opt_deps\n */\nexport function useLayoutEffect(effect, opt_deps) {\n  hooks.useLayoutEffect(effect, opt_deps);\n}\n\n/**\n * @param {PreactDef.Context<T>} context\n * @return {T}\n * @template T\n */\nexport function useContext(context) {\n  return hooks.useContext(context);\n}\n\n/**\n * @param {function():T} cb\n * @param {!Array<*>=} opt_deps\n * @return {T}\n * @template T\n */\nexport function useMemo(cb, opt_deps) {\n  return hooks.useMemo(cb, opt_deps);\n}\n\n/**\n * @param {T} cb\n * @param {!Array<*>=} opt_deps\n * @return {T}\n * @template T\n */\nexport function useCallback(cb, opt_deps) {\n  return hooks.useCallback(cb, opt_deps);\n}\n\n/**\n * @param {{current: (T|null)}} ref\n * @param {function():T} create\n * @param {!Array<*>=} opt_deps\n * @return {undefined}\n * @template T\n */\nexport function useImperativeHandle(ref, create, opt_deps) {\n  return hooks.useImperativeHandle(ref, create, opt_deps);\n}\n\n/**\n * @param {!PreactDef.Renderable} unusedChildren\n * @return {!Array<PreactDef.Renderable>}\n */\nexport function toChildArray(unusedChildren) {\n  return preact.toChildArray.apply(undefined, arguments);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../log';\n\n/**\n * Maps a value in a first range to its equivalent in a second range\n * Ex.: 5 in the range [0,10] gives 60 in the range[40,80]\n *\n * NOTE: lower/upper bounds on the source range are detected automatically,\n * however the bounds on the target range are not altered (thus the target\n * range could be decreasing).\n * Ex1: 8 in the range [0, 10] gives 2 in the range [10, 0]\n * Ex2: also, 8 in the range [10, 0] gives 2 in the range [10, 0]\n *\n * NOTE: Input value is enforced to be bounded inside the source range\n * Ex1: -2 in the range [0, 10] is interpreted as 0 and thus gives 40 in [40,80]\n * Ex2: 19 in the range [0, 5] is interpreted as 5 and thus gives 80 in [40,80]\n *\n * @param {number} val the value in the source range\n * @param {number} min1 the lower bound of the source range\n * @param {number} max1 the upper bound of the source range\n * @param {number} min2 the lower bound of the target range\n * @param {number} max2 the upper bound of the target range\n * @return {number} the equivalent value in the target range\n */\nexport function mapRange(val, min1, max1, min2, max2) {\n  let max1Bound = max1;\n  let min1Bound = min1;\n  if (min1 > max1) {\n    max1Bound = min1;\n    min1Bound = max1;\n  }\n\n  if (val < min1Bound) {\n    val = min1Bound;\n  } else if (val > max1Bound) {\n    val = max1Bound;\n  }\n\n  return ((val - min1) * (max2 - min2)) / (max1 - min1) + min2;\n}\n\n/**\n * Computes the modulus of values `a` and `b`.\n *\n * This is needed because the % operator in JavaScript doesn't implement\n * modulus behavior as can be seen by the spec here:\n * http://www.ecma-international.org/ecma-262/5.1/#sec-11.5.3.\n * It instead is used to obtain the remainder of a division.\n * This function uses the remainder (%) operator to determine the modulus.\n * Derived from here:\n * https://stackoverflow.com/questions/25726760/javascript-modular-arithmetic/47354356#47354356\n *\n * @param {number} a\n * @param {number} b\n * @return {number} returns the modulus of the two numbers.\n * @example\n *\n * _.min(10, 5);\n * // => 0\n *\n * _.mod(-1, 5);\n * // => 4\n */\nexport function mod(a, b) {\n  return a > 0 && b > 0 ? a % b : ((a % b) + b) % b;\n}\n\n/**\n * Restricts a number to be in the given min/max range. The minimum value must\n * be less than or equal to the maximum value.\n *\n * Examples:\n * clamp(0.5, 0, 1) -> 0.5\n * clamp(1.5, 0, 1) -> 1\n * clamp(-0.5, 0, 1) -> 0\n *\n * @param {number} val the value to clamp.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound.\n * @return {number} the clamped value.\n */\nexport function clamp(val, min, max) {\n  devAssert(min <= max, 'Minimum value is greater than the maximum.');\n  return Math.min(Math.max(val, min), max);\n}\n\n/**\n * Returns value bound to min and max values +/- extent. The lower bound must\n * be less than or equal to the upper bound.\n * @param {number} val the value to bound.\n * @param {number} min the lower bound.\n * @param {number} max the upper bound\n * @param {number} extent the allowed extent beyond the bounds.\n * @return {number} the bounded value.\n */\nexport function boundValue(val, min, max, extent) {\n  devAssert(min <= max, 'Lower bound is greater than the upper bound.');\n  return clamp(val, min - extent, max + extent);\n}\n\n/**\n * Returns the length of a vector given in X- and Y-coordinates.\n * @param {number} deltaX distance in the X direction.\n * @param {number} deltaY distance in the Y direction.\n * @return {number} the magnitude of the vector.\n */\nexport function magnitude(deltaX, deltaY) {\n  return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\n/**\n * Returns the distance between two points.\n * @param {number} x1 X-coordinate of the first point.\n * @param {number} y1 Y-coordinate of the first point.\n * @param {number} x2 X-coordinate of the second point.\n * @param {number} y2 Y-coordinate of the second point.\n * @return {number} the distance between the two points.\n */\nexport function distance(x1, y1, x2, y2) {\n  return magnitude(x2 - x1, y2 - y1);\n}\n\n/**\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} angleInDegrees\n * @return {{\n *  x: number,\n *  y: number,\n * }}\n */\nexport function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  };\n}\n\n/**\n * Sums up the values of the given array and returns the result\n * @param {Array<number>} values\n * @return {number}\n */\nexport function sum(values) {\n  return values.reduce(function (a, b) {\n    return a + b;\n  });\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {mod} from '../../../src/utils/math';\n\n/**\n * @enum {number}\n */\nexport const Axis = {\n  X: 0,\n  Y: 1,\n};\n\n/**\n * @enum {string}\n */\nexport const Alignment = {\n  START: 'start',\n  CENTER: 'center',\n};\n\n/**\n * @enum {string}\n */\nexport const Orientation = {\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n};\n\n/**\n * @typedef {{\n *   start: number,\n *   end: number,\n *   length: number,\n * }}\n */\nlet BaseCarouselDimensionDef;\n\n/**\n * @param {!Axis} axis The Axis to get the Dimension for.\n * @param {*} el The Element to get the Dimension For.\n * @return {!BaseCarouselDimensionDef} The dimension for the Element along the given Axis.\n */\nexport function getDimension(axis, el) {\n  const {\n    top,\n    bottom,\n    height,\n    left,\n    right,\n    width,\n  } = el./*OK*/ getBoundingClientRect();\n\n  return {\n    start: Math.round(axis == Axis.X ? left : top),\n    end: Math.round(axis == Axis.X ? right : bottom),\n    length: Math.round(axis == Axis.X ? width : height),\n  };\n}\n\n/**\n * @param {!Axis} axis The axis to get the center point for.\n * @param {!Element} el The Element to get the center point for.\n * @return {number} The center point.\n */\nexport function getCenter(axis, el) {\n  const {start, end} = getDimension(axis, el);\n  return (start + end) / 2;\n}\n\n/**\n * @param {!Axis} axis The axis to get the start point for.\n * @param {!Element} el The Element to get the start point for.\n * @return {number} The start point.\n */\nexport function getStart(axis, el) {\n  const {start} = getDimension(axis, el);\n  return start;\n}\n\n/**\n * @param {!Axis} axis The Axis to get the position for.\n * @param {!Alignment} alignment The Alignment to get the position for.\n * @param {!Element} el The Element to get the position for.\n * @return {number} The position for the given Element along the given axis for\n *    the given alignment.\n */\nexport function getPosition(axis, alignment, el) {\n  return alignment == Alignment.START\n    ? getStart(axis, el)\n    : getCenter(axis, el);\n}\n\n/**\n * @param {!Axis} axis The axis to check for overlap.\n * @param {!Element} el The Element to check for overlap.\n * @param {number} position A position to check.\n * @return {boolean} If the element overlaps the position along the given axis.\n */\nexport function overlaps(axis, el, position) {\n  const {start, end} = getDimension(axis, el);\n  // Ignore the end point, since that is shared with the adjacent Element.\n  return start <= position && position < end;\n}\n\n/**\n * @param {!Axis} axis The axis to align on.\n * @param {!Alignment} alignment The desired alignment.\n * @param {!Element} container The container to align against.\n * @param {!Element} el The Element get the offset for.\n * @return {number} How far el is from alignment, as a percentage of its length.\n */\nexport function getPercentageOffsetFromAlignment(\n  axis,\n  alignment,\n  container,\n  el\n) {\n  const elPos = getPosition(axis, alignment, el);\n  const containerPos = getPosition(axis, alignment, container);\n  const {length: elLength} = getDimension(axis, el);\n  return (elPos - containerPos) / elLength;\n}\n\n/**\n * Finds the index of a child that overlaps a point within the parent,\n * determined by an axis and alignment. A startIndex is used to look at the\n * children that are more likely to overlap first.\n * @param {!Axis} axis The axis to look along.\n * @param {!Alignment} alignment The alignment to look for within the parent\n *    container.\n * @param {!Element} container  The parent container to look in.\n * @param {!HTMLCollection} children The children to look among.\n * @param {number} startIndex The index to start looking at.\n * @return {number|undefined} The overlapping index, if one exists.\n */\nexport function findOverlappingIndex(\n  axis,\n  alignment,\n  container,\n  children,\n  startIndex\n) {\n  const pos = getPosition(axis, alignment, container);\n\n  // First look at the start index, since is the most likely to overlap.\n  if (overlaps(axis, children[startIndex], pos)) {\n    return startIndex;\n  }\n\n  // Move outwards, since the closer indicies are more likely to overlap.\n  for (let i = 1; i <= children.length / 2; i++) {\n    const nextIndex = mod(startIndex + i, children.length);\n    const prevIndex = mod(startIndex - i, children.length);\n\n    if (overlaps(axis, children[nextIndex], pos)) {\n      return nextIndex;\n    }\n\n    if (overlaps(axis, children[prevIndex], pos)) {\n      return prevIndex;\n    }\n  }\n}\n\n/**\n * Gets the current scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to get the scroll position for.\n * @param {!Element} el The Element to get the scroll position for.\n * @return {number} The scroll position.\n */\nexport function getScrollPosition(axis, el) {\n  if (axis == Axis.X) {\n    return el./*OK*/ scrollLeft;\n  }\n\n  return el./*OK*/ scrollTop;\n}\n\n/**\n * Gets the scroll capacity for an element along a given axis.\n * @param {!Axis} axis The axis to get the scroll capacity for.\n * @param {!Element} el The Element to get the scroll capacity for.\n * @return {number} The scroll capacity.\n */\nexport function getScrollEnd(axis, el) {\n  if (axis == Axis.X) {\n    return el./*OK*/ scrollWidth;\n  }\n\n  return el./*OK*/ scrollHeight;\n}\n\n/**\n * Gets the offset position for an element along a given axis.\n * @param {!Axis} axis The axis to get the offset position for.\n * @param {!Element} el The Element to get the offset position for.\n * @return {number} The offset position.\n */\nexport function getOffsetPosition(axis, el) {\n  if (axis == Axis.X) {\n    return el./*OK*/ offsetLeft;\n  }\n\n  return el./*OK*/ offetTop;\n}\n\n/**\n * Sets the scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to set the scroll position for.\n * @param {!Element} el The Element to set the scroll position for.\n * @param {number} position The scroll position.\n */\nexport function setScrollPosition(axis, el, position) {\n  if (axis == Axis.X) {\n    el./*OK*/ scrollLeft = position;\n  } else {\n    el./*OK*/ scrollTop = position;\n  }\n}\n\n/**\n * Updates the scroll position for an element along a given axis.\n * @param {!Axis} axis The axis to set the scroll position for.\n * @param {!Element} el The Element to set the scroll position for.\n * @param {number} delta The scroll delta.\n */\nexport function updateScrollPosition(axis, el, delta) {\n  setScrollPosition(axis, el, getScrollPosition(axis, el) + delta);\n}\n\n/**\n * Scrolls the position within a scrolling container to an Element. Unlike\n * `scrollIntoView`, this function does not scroll the container itself into\n * view.\n * @param {!Axis} axis The axis to scroll along.\n * @param {!Alignment} alignment How to align the element within the container.\n * @param {!Element} container The scrolling container.\n * @param {!Element} el The Element to scroll to.\n * @param {number} offset A percentage offset within the element to scroll to.\n * @return {boolean} Whether not scrolling was performed.\n */\nexport function scrollContainerToElement(\n  axis,\n  alignment,\n  container,\n  el,\n  offset = 0\n) {\n  const startAligned = alignment == Alignment.START;\n  const {length} = getDimension(axis, el);\n  const snapOffset = startAligned ? getStart(axis, el) : getCenter(axis, el);\n  const scrollOffset = startAligned\n    ? getStart(axis, container)\n    : getCenter(axis, container);\n  const delta = Math.round(snapOffset - scrollOffset - offset * length);\n  updateScrollPosition(axis, container, delta);\n\n  const {length: containerLength} = getDimension(axis, container);\n  const canScroll =\n    containerLength + getScrollPosition(axis, container) + delta <\n    getScrollEnd(axis, container);\n  return !!delta && canScroll;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {createUseStyles} from 'react-jss';\n\nconst carousel = {\n  overscrollBehavior: 'contain',\n};\n\nconst scrollContainer = {\n  position: 'relative',\n  boxSizing: 'content-box !important',\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n\n  display: 'flex',\n  flexWrap: 'nowrap',\n  flexGrow: 1,\n\n  scrollBehavior: 'smooth',\n  WebkitOverflowScrolling: 'touch',\n};\n\nconst horizontalScroll = {\n  flexDirection: 'row',\n  scrollSnapTypeX: 'mandatory', // Firefox/IE\n  scrollSnapType: 'x mandatory',\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  touchAction: 'pan-x pinch-zoom',\n  // Hide scrollbar.\n  '&$hideScrollbar': {\n    paddingBottom: '20px',\n  },\n};\n\nconst verticalScroll = {\n  flexDirection: 'column',\n  scrollSnapTypeY: 'mandatory', // Firefox/IE\n  scrollSnapType: 'y mandatory',\n  overflowX: 'hidden',\n  touchAction: 'pan-y pinch-zoom',\n};\n\n/*\n * Styles to hide scrollbars, with three different methods:\n *\n * 1. scrollbar-width\n *  - Note: this is actually scrollbar *thickness* and applies to horizontal\n *    scrollbars as well\n * 2. ::-webkit-scrollbar\n * 3. Using padding to push scrollbar outside of the overflow\n *\n * The last method has side-effect of having the bottom of the slides being\n * cut-off, since the height (or width) of the scrollbar is included when\n * calculating the 100% height (or width) of the slide.\n */\nconst hideScrollbar = {\n  // Firefox.\n  scrollbarWidth: 'none',\n\n  boxSizing: '',\n\n  // Chrome, Safari\n  '&::-webkit-scrollbar': {\n    display: 'none',\n    boxSizing: 'content-box !important',\n  },\n};\n\nconst slideElement = {\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nconst startAlign = {};\n\nconst centerAlign = {};\n\nconst enableSnap = {\n  scrollSnapStop: 'always',\n  '&$startAlign': {\n    scrollSnapAlign: 'start',\n  },\n  '&$centerAlign': {\n    scrollSnapAlign: 'center',\n  },\n};\n\nconst disableSnap = {\n  scrollSnapStop: 'none',\n  scrollSnapAlign: 'none',\n  scrollSnapCoordinate: 'none',\n};\n\n/** Slides only have one child */\nconst slideSizing = {\n  '& > :first-child, & > ::slotted(*)': {\n    boxSizing: 'border-box !important',\n    margin: '0 !important',\n    flexShrink: '0 !important',\n    maxHeight: '100%',\n    maxWidth: '100%',\n  },\n  '& > ::slotted(*)': {\n    width: '100%',\n  },\n  '&$thumbnails': {\n    padding: '0px 4px',\n  },\n};\n\nconst thumbnails = {};\n\nconst arrow = {\n  zIndex: 1,\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  // Center the button vertically.\n  top: '50%',\n  alignItems: 'center',\n  pointerEvents: 'auto',\n  '&$ltr': {\n    transform: 'translateY(-50%)',\n  },\n  '&$rtl': {\n    transform: 'scaleX(-1) translateY(-50%)',\n  },\n  '&$arrowPrev$ltr, &$arrowNext$rtl': {\n    left: 0,\n  },\n  '&$arrowNext$ltr, &$arrowPrev$rtl': {\n    right: 0,\n  },\n};\n\nconst rtl = {};\n\nconst ltr = {};\n\nconst arrowPrev = {};\n\nconst arrowNext = {};\n\nconst arrowDisabled = {\n  pointerEvents: 'none',\n  '&$insetArrow': {\n    opacity: 0,\n  },\n  '&$outsetArrow': {\n    opacity: 0.5,\n  },\n};\n\nconst insetArrow = {\n  position: 'absolute',\n  padding: '12px',\n};\n\nconst outsetArrow = {\n  position: 'relative',\n  flexShrink: 0,\n  height: '100%',\n  borderRadius: '50%',\n  backgroundSize: '24px 24px',\n  // Center the button vertically.\n  top: '50%',\n  transform: 'translateY(-50%)',\n  alignItems: 'center',\n  pointerEvents: 'auto',\n  '&$arrowPrev': {\n    marginInlineStart: '4px',\n    marginInlineEnd: '10px',\n  },\n  '&$arrowNext': {\n    marginInlineStart: '10px',\n    marginInlineEnd: '4px',\n  },\n};\n\nconst defaultArrowButton = {\n  position: 'relative',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '36px',\n  height: '36px',\n  padding: 0,\n  backgroundColor: 'transparent',\n  border: 'none',\n  outline: 'none',\n  stroke: 'currentColor',\n  transition: '200ms stroke',\n  color: '#FFF',\n  '&:hover:not([disabled])': {\n    color: '#222',\n  },\n  '&:active:not([disabled])': {\n    transitionDuration: '0ms',\n  },\n  '&:hover:not([disabled]) $arrowBackground': {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n  },\n  '&:active:not([disabled]) $arrowBackground': {\n    backgroundColor: 'rgba(255, 255, 255, 1.0)',\n    transitionDuration: '0ms',\n  },\n  '&:focus': {\n    border: '1px black solid',\n    borderRadius: '50%',\n    boxShadow: '0 0 0 1pt white',\n  },\n};\n\nconst arrowBaseStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  borderRadius: '50%',\n};\n\nconst arrowFrosting = {\n  backdropFilter: 'blur(3px)',\n};\n\nconst arrowBackdrop = {\n  backdropFilter: 'blur(12px) invert(1) grayscale(0.6) brightness(0.8)',\n  opacity: 0.5,\n};\n\nconst arrowBackground = {\n  boxShadow: `0 0 0px 1px rgba(0, 0, 0, 0.08) inset,\n      0 1px 4px 1px rgba(0, 0, 0, 0.2)`,\n  transition: '200ms background-color',\n  backgroundColor: 'rgba(0, 0, 0, 0.3)',\n};\n\nconst arrowIcon = {\n  position: 'relative',\n  width: '24px',\n  height: '24px',\n};\n\nconst JSS = {\n  carousel,\n  scrollContainer,\n  hideScrollbar,\n  horizontalScroll,\n  verticalScroll,\n  slideElement,\n  thumbnails,\n  startAlign,\n  centerAlign,\n  enableSnap,\n  disableSnap,\n  slideSizing,\n  arrow,\n  ltr,\n  rtl,\n  arrowPrev,\n  arrowNext,\n  arrowDisabled,\n  insetArrow,\n  outsetArrow,\n  defaultArrowButton,\n  arrowBaseStyle,\n  arrowFrosting,\n  arrowBackdrop,\n  arrowBackground,\n  arrowIcon,\n};\n\n// useStyles gets replaced for AMP builds via `babel-plugin-transform-jss`.\n// eslint-disable-next-line local/no-export-side-effect\nexport const useStyles = createUseStyles(JSS);\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../../../src/preact';\nimport {useStyles} from './base-carousel.jss';\n\n/**\n * @param {!BaseCarouselDef.ArrowProps} props\n * @return {PreactDef.Renderable}\n */\nexport function Arrow({\n  advance,\n  by,\n  customArrow = <DefaultArrow by={by} />,\n  disabled,\n  outsetArrows,\n  rtl,\n}) {\n  const {\n    'disabled': customDisabled,\n    'onClick': onCustomClick,\n  } = customArrow.props;\n  const isDisabled = disabled || customDisabled;\n  const onClick = (e) => {\n    if (isDisabled) {\n      return;\n    }\n    if (onCustomClick) {\n      onCustomClick(e);\n    }\n    advance();\n  };\n  const classes = useStyles();\n  const classNames = `${classes.arrow} ${\n    by < 0 ? classes.arrowPrev : classes.arrowNext\n  } ${isDisabled ? classes.arrowDisabled : ''} ${\n    outsetArrows ? classes.outsetArrow : classes.insetArrow\n  } ${rtl ? classes.rtl : classes.ltr}`;\n\n  return (\n    <div class={classNames}>\n      {Preact.cloneElement(customArrow, {\n        'onClick': onClick,\n        'disabled': isDisabled,\n        'aria-disabled': String(!!isDisabled),\n      })}\n    </div>\n  );\n}\n\n/**\n * @param {!BaseCarouselDef.ArrowProps} props\n * @return {PreactDef.Renderable}\n */\nfunction DefaultArrow({by, ...rest}) {\n  const classes = useStyles();\n  return (\n    <button\n      class={classes.defaultArrowButton}\n      aria-label={\n        by < 0 ? 'Previous item in carousel' : 'Next item in carousel'\n      }\n      {...rest}\n    >\n      <div class={`${classes.arrowBaseStyle} ${classes.arrowFrosting}`}></div>\n      <div class={`${classes.arrowBaseStyle} ${classes.arrowBackdrop}`}></div>\n      <div class={`${classes.arrowBaseStyle} ${classes.arrowBackground}`}></div>\n      <svg class={classes.arrowIcon} viewBox=\"0 0 24 24\">\n        <path\n          d={by < 0 ? 'M14,7.4 L9.4,12 L14,16.6' : 'M10,7.4 L14.6,12 L10,16.6'}\n          fill=\"none\"\n          stroke-width=\"2px\"\n          stroke-linejoin=\"round\"\n          stroke-linecap=\"round\"\n        />\n      </svg>\n    </button>\n  );\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {createContext} from '../../../src/preact';\n\nconst CarouselContext = createContext(\n  /** @type {BaseCarouselDef.ContextProps} */ ({\n    slides: [],\n    setSlides: (unusedSlides) => {},\n  })\n);\nexport {CarouselContext};\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport class PureComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Some third-party libraries check if this property is present\n\t\tthis.isPureReactComponent = true;\n\t}\n\n\tshouldComponentUpdate(props, state) {\n\t\treturn (\n\t\t\tshallowDiffers(this.props, props) || shallowDiffers(this.state, state)\n\t\t);\n\t}\n}\n", "import { createElement } from 'preact';\nimport { shallowDiffers, assign } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionalComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionalComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, assign({}, props));\n\t}\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionalComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref);\n\t}\n\tForwarded.prototype.isReactComponent = true;\n\tForwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (!children) return null;\n\treturn toChildArray(children).map(fn);\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tchildren = toChildArray(children);\n\t\tif (children.length !== 1) {\n\t\t\tthrow new Error('Children.only() expects only one child.');\n\t\t}\n\t\treturn children[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode._component);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nfunction detachedClone(vnode) {\n\tif (vnode) {\n\t\tvnode = assign({}, vnode);\n\t\tvnode._component = null;\n\t\tvnode._children = vnode._children && vnode._children.map(detachedClone);\n\t}\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense(props) {\n\t// we do not call super here to golf some bytes...\n\tthis._suspensions = 0;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @param {Promise} promise The thrown promise\n * @param {Component<any, any>} suspendingComponent The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingComponent) {\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._suspendedComponentWillUnmount =\n\t\tsuspendingComponent.componentWillUnmount;\n\tsuspendingComponent.componentWillUnmount = () => {\n\t\tonResolved();\n\n\t\tif (suspendingComponent._suspendedComponentWillUnmount) {\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount();\n\t\t}\n\t};\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._suspensions) {\n\t\t\tc._vnode._children[0] = c.state._suspended;\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\t\t}\n\t};\n\n\tif (!c._suspensions++) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\tthis._vnode._children[0] = detachedClone(this._detachOnNextRender);\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\treturn [\n\t\tcreateElement(Component, null, state._suspended ? null : props.children),\n\t\tstate._suspended && props.fallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('../src/internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tconst list = this;\n\tlist._map.forEach((node, child) => {\n\t\tresolve(list, child, node);\n\t});\n};\n", "import { createElement, hydrate, render, _unmount } from 'preact';\n\nclass ContextProvider {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender(props) {\n\t\treturn props.children;\n\t}\n}\n\n/**\n * Portal component\n * @param {object | null | undefined} props\n */\nfunction Portal(props) {\n\tlet _this = this;\n\tlet container = props.container;\n\tlet wrap = createElement(\n\t\tContextProvider,\n\t\t{ context: _this.context },\n\t\tprops.vnode\n\t);\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t\t_this._hasMounted = false;\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props.vnode) {\n\t\tif (!_this._hasMounted) {\n\t\t\t// Create a placeholder that we can use to insert into.\n\t\t\t_this._temp = document.createTextNode('');\n\t\t\t// Hydrate existing nodes to keep the dom intact, when rendering\n\t\t\t// wrap into the container.\n\t\t\thydrate('', container);\n\t\t\t// Append to the container (this matches React's behavior)\n\t\t\tcontainer.appendChild(_this._temp);\n\t\t\t// At this point we have mounted and should set our container.\n\t\t\t_this._hasMounted = true;\n\t\t\t_this._container = container;\n\t\t\t// Render our wrapping element into temp.\n\t\t\trender(wrap, container, _this._temp);\n\t\t\t_this._children = this._temp._children;\n\t\t} else {\n\t\t\t// When we have mounted and the vnode is present it means the\n\t\t\t// props have changed or a parent is triggering a rerender.\n\t\t\t// This implies we only need to call render. But we need to keep\n\t\t\t// the old tree around, otherwise will treat the vnodes as new and\n\t\t\t// will wrongly call `componentDidMount` on them\n\t\t\tcontainer._children = _this._children;\n\t\t\trender(wrap, container);\n\t\t\t_this._children = container._children;\n\t\t}\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._hasMounted) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t}\n\t// Set the wrapping element for future unmounting.\n\t_this._wrap = wrap;\n\n\t_this.componentWillUnmount = () => {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t};\n\n\treturn null;\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { vnode, container });\n}\n", "import {\n\trender as preactRender,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport { applyEventNormalization } from './events';\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n/* istanbul ignore next */\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol !== 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.element')) ||\n\t0xeac7;\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\twhile (parent.firstChild) {\n\t\t\tparent.removeChild(parent.firstChild);\n\t\t}\n\t}\n\n\treturn hydrate(vnode, parent, callback);\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactRender(vnode, parent);\n\tif (typeof callback === 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = () => {};\n\treturn (e.nativeEvent = e);\n};\n\n// Patch in `UNSAFE_*` lifecycle hooks\nfunction setSafeDescriptor(proto, key) {\n\tif (proto['UNSAFE_' + key] && !proto[key]) {\n\t\tObject.defineProperty(proto, key, {\n\t\t\tconfigurable: false,\n\t\t\tget() {\n\t\t\t\treturn this['UNSAFE_' + key];\n\t\t\t},\n\t\t\t// This `set` is only used if a user sets a lifecycle like cWU\n\t\t\t// after setting a lifecycle like UNSAFE_cWU. I doubt anyone\n\t\t\t// actually does this in practice so not testing it\n\t\t\t/* istanbul ignore next */\n\t\t\tset(v) {\n\t\t\t\tthis['UNSAFE_' + key] = v;\n\t\t\t}\n\t\t});\n\t}\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\n\t// Apply DOM VNode compat\n\tif (typeof type != 'function') {\n\t\t// Apply defaultValue to value\n\t\tif (props.defaultValue) {\n\t\t\tif (!props.value && props.value !== 0) {\n\t\t\t\tprops.value = props.defaultValue;\n\t\t\t}\n\t\t\tdelete props.defaultValue;\n\t\t}\n\n\t\t// Add support for array select values: <select value={[]} />\n\t\tif (Array.isArray(props.value) && props.multiple && type === 'select') {\n\t\t\ttoChildArray(props.children).forEach(child => {\n\t\t\t\tif (props.value.indexOf(child.props.value) != -1) {\n\t\t\t\t\tchild.props.selected = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tdelete props.value;\n\t\t}\n\n\t\t// Normalize DOM vnode properties.\n\t\tlet shouldSanitize, attrs, i;\n\t\tfor (i in props) if ((shouldSanitize = CAMEL_PROPS.test(i))) break;\n\t\tif (shouldSanitize) {\n\t\t\tattrs = vnode.props = {};\n\t\t\tfor (i in props) {\n\t\t\t\tattrs[\n\t\t\t\t\tCAMEL_PROPS.test(i) ? i.replace(/([A-Z0-9])/, '-$1').toLowerCase() : i\n\t\t\t\t] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t// Alias `class` prop to `className` if available\n\tif (props.class || props.className) {\n\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\tif (props.className) props.class = props.className;\n\t\tObject.defineProperty(props, 'className', classNameDescriptor);\n\t}\n\n\t// Events\n\tapplyEventNormalization(vnode);\n\n\t// Component base class compat\n\t// We can't just patch the base component class, because components that use\n\t// inheritance and are transpiled down to ES5 will overwrite our patched\n\t// getters and setters. See #1941\n\tif (\n\t\ttypeof type === 'function' &&\n\t\t!type._patchedLifecycles &&\n\t\ttype.prototype\n\t) {\n\t\tsetSafeDescriptor(type.prototype, 'componentWillMount');\n\t\tsetSafeDescriptor(type.prototype, 'componentWillReceiveProps');\n\t\tsetSafeDescriptor(type.prototype, 'componentWillUpdate');\n\t\ttype._patchedLifecycles = true;\n\t}\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n", "/**\n * Normalize event handlers like react does. Most famously it uses `onChange` for any input element.\n * @param {import('./internal').VNode} vnode The vnode to normalize events on\n */\nexport function applyEventNormalization({ type, props }) {\n\tif (!props || typeof type != 'string') return;\n\tlet newProps = {};\n\n\tfor (let i in props) {\n\t\tif (/^on(Ani|Tra|Tou)/.test(i)) {\n\t\t\tprops[i.toLowerCase()] = props[i];\n\t\t\tdelete props[i];\n\t\t}\n\t\tnewProps[i.toLowerCase()] = i;\n\t}\n\tif (newProps.ondoubleclick) {\n\t\tprops.ondblclick = props[newProps.ondoubleclick];\n\t\tdelete props[newProps.ondoubleclick];\n\t}\n\tif (newProps.onbeforeinput) {\n\t\tprops.onbeforeinput = props[newProps.onbeforeinput];\n\t\tdelete props[newProps.onbeforeinput];\n\t}\n\t// for *textual inputs* (incl textarea), normalize `onChange` -> `onInput`:\n\tif (\n\t\tnewProps.onchange &&\n\t\t(type === 'textarea' ||\n\t\t\t(type.toLowerCase() === 'input' && !/^fil|che|ra/i.test(props.type)))\n\t) {\n\t\tlet normalized = newProps.oninput || 'oninput';\n\t\tif (!props[normalized]) {\n\t\t\tprops[normalized] = props[newProps.onchange];\n\t\t\tdelete props[newProps.onchange];\n\t\t}\n\t}\n}\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { hydrate, render, REACT_ELEMENT_TYPE } from './render';\n\nconst version = '16.8.0'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tSuspense,\n\tSuspenseList,\n\tlazy\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate: render,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tunstable_batchedUpdates,\n\tSuspense,\n\tSuspenseList,\n\tlazy\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as compat from /*OK*/ 'preact/compat';\n\n/**\n * @param {function(T, {current: (R|null)}):PreactDef.Renderable} fn\n * @return {function(T):PreactDef.Renderable}\n * @template T, R\n */\nexport function forwardRef(fn) {\n  return compat.forwardRef(fn);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../';\nimport {forwardRef} from '../compat';\n\nconst CONTAIN = [\n  null, // 0: none\n  'paint', // 1: paint\n  'layout', // 2: layout\n  'content', // 3: content = layout + paint\n  'size', // 4: size\n  'size paint', // 5: size + paint\n  'size layout', // 6: size + layout\n  'strict', // 7: strict = size + layout + paint\n];\n\nconst SIZE_CONTENT_STYLE = {\n  'position': 'relative',\n  'width': '100%',\n  'height': '100%',\n};\n\n/**\n * The wrapper component that implements different \"contain\" parameters. This\n * most often indicates that the element's size doesn't depend on its children\n * (e.g. `contain:size`), but there might be other variances as well.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/contain\n *\n * Contain parameters:\n * - size: the element's size does not depend on its content.\n * - layout: nothing outside the element may affect its internal layout and\n * vice versa.\n * - paint: the element's content doesn't display outside the element's bounds.\n * @param {!ContainWrapperComponentProps} props\n * @param {{current: ?Element}} ref\n * @return {PreactDef.Renderable}\n */\nfunction ContainWrapperWithRef(\n  {\n    as: Comp = 'div',\n    size = false,\n    layout = false,\n    paint = false,\n    wrapperClassName,\n    wrapperStyle,\n    contentAs: ContentComp = 'div',\n    contentRef,\n    contentClassName,\n    contentProps,\n    contentStyle,\n    children,\n    'className': className,\n    'style': style,\n    ...rest\n  },\n  ref\n) {\n  // The formula: `size << 2 | layout << 1 | paint`.\n  const containIndex = (size ? 4 : 0) + (layout ? 2 : 0) + (paint ? 1 : 0);\n  return (\n    <Comp\n      {...rest}\n      ref={ref}\n      className={`${className || ''} ${wrapperClassName || ''}`.trim() || null}\n      style={{\n        ...style,\n        ...wrapperStyle,\n        contain: CONTAIN[containIndex],\n      }}\n    >\n      <ContentComp\n        {...contentProps}\n        ref={contentRef}\n        className={contentClassName}\n        style={{\n          ...(size && SIZE_CONTENT_STYLE),\n          'overflow': paint ? 'hidden' : 'visible',\n          ...contentStyle,\n        }}\n      >\n        {children}\n      </ContentComp>\n    </Comp>\n  );\n}\n\nconst ContainWrapper = forwardRef(ContainWrapperWithRef);\n\nexport {ContainWrapper};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../';\nimport {forwardRef} from '../compat';\n\n/**\n * The wrapper component provides the canonical wrapper for components whose\n * size depends on the children. This is often the opposite of the\n * `ContainWrapper`.\n * @param {!WrapperComponentProps} props\n * @param {{current: ?Element}} ref\n * @return {PreactDef.Renderable}\n */\nfunction WrapperWithRef(\n  {\n    as: Comp = 'div',\n    wrapperClassName,\n    wrapperStyle,\n    children,\n    'className': className,\n    'style': style,\n    ...rest\n  },\n  ref\n) {\n  return (\n    <Comp\n      {...rest}\n      ref={ref}\n      className={`${className || ''} ${wrapperClassName || ''}`.trim() || null}\n      style={{...style, ...wrapperStyle}}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nconst Wrapper = forwardRef(WrapperWithRef);\n\nexport {Wrapper};\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {useRef} from '../';\n\n/**\n * @param {T} current\n * @return {{current: T}}\n * @template T\n */\nexport function useValueRef(current) {\n  const valueRef = useRef(null);\n  valueRef.current = current;\n  return valueRef;\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {createContext} from '../../../src/preact';\n\nconst LightboxGalleryContext = createContext(\n  /** @type {LightboxGalleryDef.ContextProps} */ ({\n    deregister: () => {},\n    register: () => {},\n    open: () => {},\n  })\n);\nexport {LightboxGalleryContext};\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Wraps a given callback and applies a rate limit.\n * It throttles the calls so that no consequent calls have time interval\n * smaller than the given minimal interval.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function throttle(win, callback, minInterval) {\n  let locker = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {!Object} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    // Lock the fire for minInterval milliseconds\n    locker = win.setTimeout(waiter, minInterval);\n\n    callback.apply(null, args);\n  }\n\n  /**\n   * Waiter function\n   */\n  function waiter() {\n    locker = 0;\n    // If during the period there're invocations queued up, fire once.\n    if (nextCallArgs) {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    if (locker) {\n      nextCallArgs = args;\n    } else {\n      fire(args);\n    }\n  };\n}\n\n/**\n * Wraps a given callback and applies a wait timer, so that minInterval\n * milliseconds must pass since the last call before the callback is actually\n * invoked.\n *\n * @param {!Window} win\n * @param {function(...T):R} callback\n * @param {number} minInterval the minimum time interval in millisecond\n * @return {function(...T)}\n * @template T\n * @template R\n */\nexport function debounce(win, callback, minInterval) {\n  let locker = 0;\n  let timestamp = 0;\n  let nextCallArgs = null;\n\n  /**\n   * @param {?Array} args\n   */\n  function fire(args) {\n    nextCallArgs = null;\n    callback.apply(null, args);\n  }\n\n  /**\n   * Wait function for debounce\n   */\n  function waiter() {\n    locker = 0;\n    const remaining = minInterval - (win.Date.now() - timestamp);\n    if (remaining > 0) {\n      locker = win.setTimeout(waiter, remaining);\n    } else {\n      fire(nextCallArgs);\n    }\n  }\n\n  return function (...args) {\n    timestamp = win.Date.now();\n    nextCallArgs = args;\n    if (!locker) {\n      locker = win.setTimeout(waiter, minInterval);\n    }\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Return an empty JsonObject or makes the passed in object literal\n * an JsonObject.\n * The JsonObject type is just a simple object that is at-dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * The linter enforces that the argument is, in fact, at-dict like.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  // We do not copy. The linter enforces that the passed in object is a literal\n  // and thus the caller cannot have a reference to it.\n  return /** @type {!JsonObject} */ (opt_initial || {});\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Deep merges source into target.\n *\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} depth The maximum merge depth. If exceeded, Object.assign\n *                       will be used instead.\n * @return {!Object}\n * @throws {Error} If source contains a circular reference.\n * Note: Only nested objects are deep-merged, primitives and arrays are not.\n */\nexport function deepMerge(target, source, depth = 10) {\n  // Keep track of seen objects to detect recursive references.\n  const seen = [];\n\n  /** @type {!Array<{t: !Object, s: !Object, d: number}>} */\n  const queue = [];\n  queue.push({t: target, s: source, d: 0});\n\n  // BFS to ensure objects don't have recursive references at shallower depths.\n  while (queue.length > 0) {\n    const {t, s, d} = queue.shift();\n    if (seen.includes(s)) {\n      throw new Error('Source object has a circular reference.');\n    }\n    seen.push(s);\n    if (t === s) {\n      continue;\n    }\n    if (d > depth) {\n      Object.assign(t, s);\n      continue;\n    }\n    Object.keys(s).forEach((key) => {\n      const newValue = s[key];\n      // Perform a deep merge IFF both target and source have the same key\n      // whose corresponding values are objects.\n      if (hasOwn(t, key)) {\n        const oldValue = t[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({t: oldValue, s: newValue, d: d + 1});\n          return;\n        }\n      }\n      t[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * @param {!Object} o An object to remove properties from\n * @param {!Array<string>} props A list of properties to remove from the Object\n * @return {!Object} An object with the given properties removed\n */\nexport function omit(o, props) {\n  return Object.keys(o).reduce((acc, key) => {\n    if (!props.includes(key)) {\n      acc[key] = o[key];\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * @param {!Object|null|undefined} o1\n * @param {!Object|null|undefined} o2\n * @return {boolean}\n */\nexport function objectsEqualShallow(o1, o2) {\n  if (o1 == null || o2 == null) {\n    // Null is only equal to null, and undefined to undefined.\n    return o1 === o2;\n  }\n\n  for (const k in o1) {\n    if (o1[k] !== o2[k]) {\n      return false;\n    }\n  }\n  for (const k in o2) {\n    if (o2[k] !== o1[k]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @param {T} obj\n * @param {string} prop\n * @param {function(T, string):R} factory\n * @return {R}\n * @template T,R\n */\nexport function memo(obj, prop, factory) {\n  let result = /** @type {?R} */ (obj[prop]);\n  if (result === undefined) {\n    result = factory(obj, prop);\n    obj[prop] = result;\n  }\n  return result;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {dev, devAssert} from './log';\nimport {map} from './utils/object.js';\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n/**\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n  Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (isVar(camelCase)) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n/**\n * Sets the CSS styles of the specified element with !important. The styles\n * are specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setImportantStyles(element, styles) {\n  const {style} = element;\n  for (const k in styles) {\n    style.setProperty(\n      getVendorJsPropertyName(style, k),\n      styles[k].toString(),\n      'important'\n    );\n  }\n}\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {?Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return;\n  }\n  const styleValue = /** @type {string} */ (opt_units\n    ? value + opt_units\n    : value);\n  if (isVar(propertyName)) {\n    element.style.setProperty(propertyName, styleValue);\n  } else {\n    element.style[propertyName] = styleValue;\n  }\n}\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(\n    element.style,\n    property,\n    opt_bypassCache\n  );\n  if (!propertyName) {\n    return undefined;\n  }\n  if (isVar(propertyName)) {\n    return element.style.getPropertyValue(propertyName);\n  }\n  return element.style[propertyName];\n}\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n/**\n * Asserts that the style is not the `display` style.\n * This is the only possible way to pass a dynamic style to setStyle.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {string} style\n * @return {string}\n */\nexport function assertNotDisplay(style) {\n  if (style === 'display') {\n    dev().error(\n      'STYLE',\n      '`display` style detected. You must use toggle instead.'\n    );\n  }\n  return style;\n}\n\n/**\n * Asserts that the styles does not contain the `display` style.\n * This is the only possible way to pass a dynamic styles object to setStyles\n * and setImportantStyles.\n *\n * If you wish to set `display`, use the `toggle` helper instead. This is so\n * changes to display can trigger necessary updates. See #17475.\n *\n * @param {!Object<string, *>} styles\n * @return {!Object<string, *>}\n */\nexport function assertDoesNotContainDisplay(styles) {\n  if ('display' in styles) {\n    dev().error(\n      'STYLE',\n      '`display` style detected in styles. You must use toggle instead.'\n    );\n  }\n  return styles;\n}\n\n/**\n * Sets the initial display style of an element. This is a last resort. If you\n * can set the initial display using CSS, YOU MUST.\n * DO NOT USE THIS TO ARBITRARILY SET THE DISPLAY STYLE AFTER INITIAL SETUP.\n *\n * @param {!Element} el\n * @param {string} value\n */\nexport function setInitialDisplay(el, value) {\n  const {style} = el;\n  devAssert(\n    value !== '' && value !== 'none',\n    'Initial display value must not be \"none\". Use toggle instead.'\n  );\n  devAssert(\n    !style['display'],\n    'setInitialDisplay MUST NOT be used for ' +\n      'resetting the display style. If you are looking for display:none ' +\n      'toggling, use toggle instead.'\n  );\n  style['display'] = value;\n}\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = element.hasAttribute('hidden');\n  }\n  if (opt_display) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', '');\n  }\n}\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return `${value}px`;\n}\n\n/**\n * Returns a degree value.\n * @param {number} value\n * @return {string}\n */\nexport function deg(value) {\n  return `${value}deg`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x}, ${opt_y})`;\n}\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Returns a \"rotate\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function rotate(value) {\n  if (typeof value == 'number') {\n    value = deg(value);\n  }\n  return `rotate(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n    /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g,\n    '($1,$2,$3, 1)'\n  );\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */ (win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */ (style) || map();\n}\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  for (let i = 0; i < properties.length; i++) {\n    setStyle(element, properties[i], null);\n  }\n}\n\n/**\n * Propagates the object-fit/position element attributes as styles.\n * @param {!Element} fromEl ie: amp-img\n * @param {!Element} toEl ie: the img within amp-img\n */\nexport function propagateObjectFitStyles(fromEl, toEl) {\n  if (fromEl.hasAttribute('object-fit')) {\n    setStyle(toEl, 'object-fit', fromEl.getAttribute('object-fit'));\n  }\n\n  if (fromEl.hasAttribute('object-position')) {\n    setStyle(toEl, 'object-position', fromEl.getAttribute('object-position'));\n  }\n}\n\n/**\n * @param {string} property\n * @return {boolean}\n */\nfunction isVar(property) {\n  return property.startsWith('--');\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as Preact from '../../../src/preact';\nimport {\n  Alignment,\n  Axis,\n  findOverlappingIndex,\n  getPercentageOffsetFromAlignment,\n  scrollContainerToElement,\n} from './dimensions';\nimport {LightboxGalleryContext} from '../../amp-lightbox-gallery/1.0/context';\nimport {debounce} from '../../../src/utils/rate-limit';\nimport {forwardRef} from '../../../src/preact/compat';\nimport {mod} from '../../../src/utils/math';\nimport {setStyle} from '../../../src/style';\nimport {toWin} from '../../../src/types';\nimport {\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from '../../../src/preact';\nimport {useStyles} from './base-carousel.jss';\n\n/**\n * How long to wait prior to resetting the scrolling position after the last\n * scroll event. Ideally this should be low, so that once the user stops\n * scrolling, things are immediately centered again. Since there can be some\n * delay between scroll events, and we do not want to interrupt a scroll with a\n * render, it cannot be too small. 200ms seems to be around the lower limit for\n * this value on Android / iOS.\n */\nconst RESET_SCROLL_REFERENCE_POINT_WAIT_MS = 200;\n\n/**\n * @param {!BaseCarouselDef.ScrollerProps} props\n * @param {{current: (T|null)}} ref\n * @return {PreactDef.Renderable}\n * @template T\n */\nfunction ScrollerWithRef(\n  {\n    advanceCount,\n    alignment,\n    autoAdvanceCount,\n    axis,\n    children,\n    lightbox,\n    loop,\n    mixedLength,\n    restingIndex,\n    setRestingIndex,\n    snap,\n    snapBy = 1,\n    visibleCount,\n    _thumbnails,\n    ...rest\n  },\n  ref\n) {\n  // We still need our own ref that we can always rely on to be there.\n  const containerRef = useRef(null);\n\n  /**\n   * The number of slides we want to place before the reference or resting index.\n   * Normalized to == restingIndex if loop=false.\n   */\n  const pivotIndex = loop ? Math.floor(children.length / 2) : restingIndex;\n\n  /**\n   * Whether to early exit from the scroll handler.\n   * This is useful on each render where the container is scrolled to the active\n   * slide at a non-integer pixel position. This is likely to happen\n   * with responsive containers or non-integer `visibleCount`.\n   */\n  const ignoreProgrammaticScrollRef = useRef(false);\n\n  const advance = useCallback(\n    (by) => {\n      const container = containerRef.current;\n      if (!container) {\n        return;\n      }\n      // Smooth scrolling is preferred to `setRestingIndex` whenever possible.\n      // Note: `setRestingIndex` will still be called on debounce by scroll handler.\n      currentIndex.current = mod(currentIndex.current + by, children.length);\n      scrollOffset.current = 0;\n      const didScroll = scrollContainerToElement(\n        axis,\n        alignment,\n        container,\n        container.children[mod(pivotIndex + by, container.children.length)],\n        scrollOffset.current\n      );\n      if (!didScroll) {\n        setRestingIndex(currentIndex.current);\n      }\n    },\n    [alignment, axis, children.length, pivotIndex, setRestingIndex]\n  );\n  useImperativeHandle(\n    ref,\n    () => ({\n      advance,\n      next: () => advance(advanceCount),\n      prev: () => advance(-advanceCount),\n      get node() {\n        return containerRef.current;\n      },\n    }),\n    [advance, advanceCount]\n  );\n  const classes = useStyles();\n\n  /**\n   * The dynamic position that the slide at the resting index\n   * is with respect to its scrolling order. Only needed if loop=true.\n   */\n  const offsetRef = useRef(restingIndex);\n\n  /**\n   * The partial scroll position as a percentage of the current visible slide.\n   * Only modified if snap=false.\n   */\n  const scrollOffset = useRef(0);\n\n  const {open: openLightbox} = useContext(LightboxGalleryContext);\n  const slides = renderSlides(\n    {\n      alignment,\n      children,\n      loop,\n      mixedLength,\n      offsetRef,\n      openLightbox: lightbox && openLightbox,\n      pivotIndex,\n      restingIndex,\n      snap,\n      snapBy,\n      visibleCount,\n      _thumbnails,\n    },\n    classes\n  );\n  const currentIndex = useRef(restingIndex);\n\n  const scrollToActiveSlide = useCallback(() => {\n    if (!containerRef.current || !containerRef.current.children.length) {\n      return;\n    }\n    const container = containerRef.current;\n    setStyle(container, 'scrollBehavior', 'auto');\n    ignoreProgrammaticScrollRef.current = true;\n    scrollContainerToElement(\n      axis,\n      alignment,\n      container,\n      container.children[pivotIndex],\n      scrollOffset.current\n    );\n    setStyle(container, 'scrollBehavior', 'smooth');\n  }, [alignment, axis, pivotIndex]);\n\n  // useLayoutEffect to avoid FOUC while scrolling for looping layouts.\n  useLayoutEffect(() => {\n    if (!containerRef.current || !loop) {\n      return;\n    }\n    const container = containerRef.current;\n    if (!container.children.length) {\n      return;\n    }\n    scrollToActiveSlide();\n  }, [loop, restingIndex, scrollToActiveSlide]);\n\n  // Adjust slide position when container size changes.\n  useLayoutEffect(() => {\n    if (!containerRef.current) {\n      return;\n    }\n    const node = containerRef.current;\n    if (!node) {\n      return;\n    }\n    // Use local window.\n    const win = toWin(node.ownerDocument.defaultView);\n    if (!win) {\n      return undefined;\n    }\n    const observer = new win.ResizeObserver(scrollToActiveSlide);\n    observer.observe(node);\n    return () => observer.disconnect();\n  }, [scrollToActiveSlide]);\n\n  // Trigger render by setting the resting index to the current scroll state.\n  const debouncedResetScrollReferencePoint = useMemo(() => {\n    // Use local window if possible.\n    const win = containerRef.current\n      ? toWin(containerRef.current.ownerDocument.defaultView)\n      : window;\n    return debounce(\n      win,\n      () => {\n        // Check if the resting index we are centered around is the same as where\n        // we stopped scrolling. If so, we do not need to move anything.\n        if (\n          currentIndex.current === null ||\n          currentIndex.current === restingIndex\n        ) {\n          return;\n        }\n        setRestingIndex(currentIndex.current);\n      },\n      RESET_SCROLL_REFERENCE_POINT_WAIT_MS\n    );\n  }, [restingIndex, setRestingIndex]);\n\n  // Track current slide without forcing render.\n  // This is necessary for smooth scrolling because\n  // intermediary renders will interupt scroll and cause jank.\n  const updateCurrentIndex = () => {\n    const container = containerRef.current;\n    if (!container) {\n      return;\n    }\n    const overlappingIndex = findOverlappingIndex(\n      axis,\n      alignment,\n      container,\n      container.children,\n      pivotIndex\n    );\n    if (!snap) {\n      scrollOffset.current = getPercentageOffsetFromAlignment(\n        axis,\n        alignment,\n        container,\n        container.children[overlappingIndex]\n      );\n    }\n    currentIndex.current = mod(\n      overlappingIndex - offsetRef.current,\n      children.length\n    );\n  };\n\n  const handleScroll = () => {\n    if (ignoreProgrammaticScrollRef.current) {\n      ignoreProgrammaticScrollRef.current = false;\n      return;\n    }\n    updateCurrentIndex();\n    debouncedResetScrollReferencePoint();\n  };\n\n  const incrementCount = Math.max(advanceCount, autoAdvanceCount);\n  const needMoreSlidesToScroll =\n    loop &&\n    incrementCount > 1 &&\n    children.length - pivotIndex - visibleCount < incrementCount;\n  return (\n    <div\n      ref={containerRef}\n      onScroll={handleScroll}\n      class={`${classes.scrollContainer} ${classes.hideScrollbar} ${\n        axis === Axis.X ? classes.horizontalScroll : classes.verticalScroll\n      }`}\n      tabindex={0}\n      {...rest}\n    >\n      {slides}\n      {needMoreSlidesToScroll && slides}\n    </div>\n  );\n}\n\nconst Scroller = forwardRef(ScrollerWithRef);\nScroller.displayName = 'Scroller'; // Make findable for tests.\nexport {Scroller};\n\n/**\n * How the slides are ordered when looping:\n *\n * We want to make sure that the user can scroll all the way to the opposite\n * end (either forwards or backwards) of the carousel, but no further (no\n * looping back past where you started). We render elements dynamically\n * for a desirable scrolling order to allow the browser to scroll as well as\n * providing targets for the browser to snap on. This is important as these\n * targets need to be present before the scroll starts for things to work\n * correctly.\n *\n * The elements are ordered depending on the reference point, called\n * the restingIndex to allow full movement forwards and backwards. You can\n * imagine the DOM structure looks like the following if you have 5 slides:\n *\n * [1][2][3][4][5]\n *\n * When the restingIndex is the first index, we should translate slides as follows:\n *\n * [4][5][1][2][3]\n *\n * This ensures that if you move left or right, there is a slide to show.\n *\n * When the user stops scrolling, we update the restingIndex and show/hide the\n * appropriate spacers. For example, if the user started at slide '1' and moved\n * left to slide '4', the UI would eventually stop because there is\n * nothing more to the left of slide '4'.\n *\n * [4][5][1][2][3]\n *\n * Once scrolling stops, however, the reference point would be reset and this would\n * update to the following with the next render:\n *\n * [2][3][4][5][1]\n *\n * Ordering slides:\n *\n * Slides are ordered to be before or after the current slide and do not rearrange\n * dynamically as the user scrolls. Only once the scrolling has ended do they rearrange.\n * Currently, half the slides are ordered before and half the slides are ordered after.\n * This could be a bit smarter and only place as many as are necessary on either side of\n * the reference point to have a sufficient amount of buffer.\n *\n * Initial index:\n *\n * The initial index can be specified, which will make the carousel scroll to\n * the desired index when it first renders.\n *\n * @param {!BaseCarouselDef.SlideProps} props\n * @param {!Object} classes\n * @return {PreactDef.Renderable}\n */\nfunction renderSlides(\n  {\n    alignment,\n    children,\n    loop,\n    mixedLength,\n    restingIndex,\n    offsetRef,\n    openLightbox,\n    pivotIndex,\n    snap,\n    snapBy,\n    visibleCount,\n    _thumbnails,\n  },\n  classes\n) {\n  const {length} = children;\n  const lightboxProps = openLightbox && {\n    role: 'button',\n    tabindex: '0',\n    onClick: () => openLightbox(),\n  };\n  const slides = children.map((child, index) => {\n    const key = `slide-${child.key || index}`;\n    return (\n      <div\n        key={key}\n        data-slide={index}\n        class={`${classes.slideSizing} ${classes.slideElement} ${\n          snap && mod(index, snapBy) === 0\n            ? classes.enableSnap\n            : classes.disableSnap\n        } ${\n          alignment === Alignment.CENTER\n            ? classes.centerAlign\n            : classes.startAlign\n        } ${_thumbnails ? classes.thumbnails : ''} `}\n        part=\"slide\"\n        style={{\n          flex: mixedLength ? '0 0 auto' : `0 0 ${100 / visibleCount}%`,\n        }}\n        {...lightboxProps}\n      >\n        {child}\n      </div>\n    );\n  });\n\n  if (!loop) {\n    return slides;\n  }\n\n  const before = [];\n  const after = [];\n  const shift = mod(length - restingIndex + pivotIndex, length);\n  if (restingIndex <= pivotIndex) {\n    for (let i = 0; i < shift; i++) {\n      before.unshift(slides.pop());\n    }\n  } else {\n    for (let i = 0; i < length - shift; i++) {\n      after.push(slides.shift());\n    }\n  }\n\n  offsetRef.current = before.length ? before.length : -after.length;\n  return (\n    <>\n      {before}\n      {slides}\n      {after}\n    </>\n  );\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An expanded set of loading instructions based on\n * https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading.\n *\n * Only `UNLOAD` is not defined by the \"Lazy loading\" spec at this time. It's\n * added here because it supersedes all other loading instructions in AMP.\n *\n * @enum {string}\n */\nexport const Loading = {\n  /**\n   * If parent is available, fallback to its loading strategy (e.g. based on\n   * whether the document is visible or not).\n   * If parent is not available, proceed with loading at your own discretion.\n   */\n  AUTO: 'auto',\n\n  /**\n   * Do not load independently. Wait for the caller to start loading manually.\n   */\n  LAZY: 'lazy',\n\n  /**\n   * Proceed with loading at the earliest convenience.\n   */\n  EAGER: 'eager',\n\n  /**\n   * Force unload if possible.\n   */\n  UNLOAD: 'unload',\n};\n\n/** @const {!Array<!Loading>} */\nconst ORDER = [Loading.AUTO, Loading.LAZY, Loading.EAGER, Loading.UNLOAD];\n\n/** @const {!Object<string, number>} */\nconst MAP = {\n  [Loading.AUTO]: 0,\n  [Loading.LAZY]: 1,\n  [Loading.EAGER]: 2,\n  [Loading.UNLOAD]: 3,\n};\n\n/**\n * Returns the loading instruction with a higher priority. The priority\n * order is auto -> lazy -> eager -> unload.\n *\n * @param {!Loading|string} v1\n * @param {!Loading|string} v2\n * @return {!Loading}\n */\nexport function reducer(v1, v2) {\n  const ordinal1 = MAP[v1] || 0;\n  const ordinal2 = MAP[v2] || 0;\n  const ordinal = Math.max(ordinal1, ordinal2);\n  return ORDER[ordinal];\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {Loading, reducer as loadingReducer} from '../loading';\nimport {createContext, useContext, useMemo, useRef} from './index';\n\n/** @type {PreactDef.Context} */\nlet context;\n\n/**\n * The external context given to React components to control whether they can\n * render/play/etc.\n *\n * - renderable: whether this vDOM area is renderable. Analogous to\n *   `display-locking` CSS.\n * - playable: whether the playback is allowed in this vDOM area. If playback\n *   is not allow, the component must immediately stop the playback.\n *\n * @return {!PreactDef.Context<AmpContextDef.ContextType>}\n */\nfunction getAmpContext() {\n  return (\n    context ||\n    (context = createContext({\n      renderable: true,\n      playable: true,\n      loading: Loading.AUTO,\n    }))\n  );\n}\n\n/**\n * A wrapper-component that recalculates and propagates AmpContext properties.\n *\n * @param {!AmpContextDef.ProviderProps} props\n * @return {!PreactDef.VNode}\n */\nexport function WithAmpContext({\n  renderable: renderableProp = true,\n  playable: playableProp = true,\n  loading: loadingProp = 'auto',\n  notify: notifyProp,\n  children,\n}) {\n  const parent = useAmpContext();\n  const renderable = renderableProp && parent.renderable;\n  const playable = renderable && playableProp && parent.playable;\n  const loading = loadingReducer(\n    renderable ? Loading.AUTO : Loading.LAZY,\n    loadingReducer(loadingProp, parent.loading)\n  );\n  const notify = notifyProp || parent.notify;\n  const current = useMemo(\n    () =>\n      /** @type {!AmpContextDef.ContextType} */ ({\n        renderable,\n        playable,\n        loading,\n        notify,\n      }),\n    [renderable, playable, loading, notify]\n  );\n  const AmpContext = getAmpContext();\n  return <AmpContext.Provider children={children} value={current} />;\n}\n\n/**\n * @return {!AmpContextDef.ContextType}\n */\nexport function useAmpContext() {\n  const AmpContext = getAmpContext();\n  return useContext(AmpContext);\n}\n\n/**\n * Whether the calling component should currently be in the loaded state.\n *\n * @param {!Loading|string} loadingProp\n * @param {boolean} unloadOnPause\n * @return {boolean}\n */\nexport function useLoad(loadingProp, unloadOnPause = false) {\n  const loadingRef = useRef(false);\n\n  const {loading: loadingContext, renderable, playable} = useAmpContext();\n\n  const loading = loadingReducer(loadingProp, loadingContext);\n\n  // Compute whether the element should be loading at this time.\n  const load =\n    // Explicit instruction to unload.\n    loading == Loading.UNLOAD\n      ? false\n      : // Must be unloaded to pause.\n      unloadOnPause && !playable\n      ? false\n      : // Explicit instruction to load.\n      loading == Loading.EAGER\n      ? true\n      : // Auto: allowed to load.\n      loading == Loading.AUTO && renderable\n      ? true\n      : // Lazy: can continue loading if already started, but do not start it.\n        loadingRef.current || false;\n  loadingRef.current = load;\n  return load;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {createUseStyles} from 'react-jss';\n\nconst closeButton = {\n  position: 'fixed',\n  /* keep it on viewport */\n  top: 0,\n  left: 0,\n  /* give it non-zero size, VoiceOver on Safari requires at least 2 pixels\nbefore allowing buttons to be activated. */\n  width: '2px',\n  height: '2px',\n  /* visually hide it with overflow and opacity */\n  opacity: 0,\n  overflow: 'hidden',\n  /* remove any margin or padding */\n  border: 'none',\n  margin: 0,\n  padding: 0,\n  /* ensure no other style sets display to none */\n  display: 'block',\n  visibility: 'visible',\n};\n\nconst wrapper = {\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  width: '100%',\n  height: '100%',\n  position: 'fixed',\n  boxSizing: 'border-box',\n};\n\n// User overridable styles\nconst defaultStyles = {\n  zIndex: 1000,\n  backgroundColor: 'rgba(0, 0, 0, 0.9)',\n  color: '#fff',\n};\n\n/* \n  overflow: hidden does not trigger overscrollBehavior, so \n  overflow: auto is applied even though the lightbox should not scroll.\n  We rely instead on the overflow: hidden in ContainWrapper to prevent \n  scrolling inside the lightbox.\n*/\nconst containScroll = {\n  overflow: 'auto', // Prevent scrolling inside lightbox.\n  overscrollBehavior: 'none', // Prevent scrolling outside lightbox.\n};\n\nconst JSS = {\n  closeButton,\n  wrapper,\n  defaultStyles,\n  containScroll,\n};\n\n// useStyles gets replaced for AMP builds via `babel-plugin-transform-jss`.\n// eslint-disable-next-line local/no-export-side-effect\nexport const useStyles = createUseStyles(JSS);\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../../../src/preact';\nimport {ContainWrapper, useValueRef} from '../../../src/preact/component';\nimport {forwardRef} from '../../../src/preact/compat';\nimport {setStyle} from '../../../src/style';\nimport {\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from '../../../src/preact';\nimport {useStyles} from './component.jss';\n\nconst ANIMATION_DURATION = 200;\nconst ANIMATION_PRESETS = {\n  'fade-in': [\n    {opacity: 0, visibility: 'visible'},\n    {opacity: 1, visibility: 'visible'},\n  ],\n  'fly-in-top': [\n    {opacity: 0, transform: 'translate(0,-100%)', visibility: 'visible'},\n    {opacity: 1, transform: 'translate(0, 0)', visibility: 'visible'},\n  ],\n  'fly-in-bottom': [\n    {opacity: 0, transform: 'translate(0, 100%)', visibility: 'visible'},\n    {opacity: 1, transform: 'translate(0, 0)', visibility: 'visible'},\n  ],\n};\n\nconst DEFAULT_CLOSE_LABEL = 'Close the modal';\n\n/**\n * @param {!LightboxDef.Props} props\n * @param {{current: (!LightboxDef.LightboxApi|null)}} ref\n * @return {PreactDef.Renderable}\n */\nfunction LightboxWithRef(\n  {\n    animation = 'fade-in',\n    children,\n    onBeforeOpen,\n    onAfterClose,\n    scrollable = false,\n    ...rest\n  },\n  ref\n) {\n  // There are two phases to open and close.\n  // To open, we mount and render the contents (invisible), then animate the display (visible).\n  // To close, it's the reverse.\n  // `mounted` mounts the component. `visible` plays the animation.\n  const [mounted, setMounted] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const classes = useStyles();\n  const lightboxRef = useRef();\n\n  // We are using refs here to refer to common strings, objects, and functions used.\n  // This is because they are needed within `useEffect` calls below (but are not depended for triggering)\n  // We use `useValueRef` for props that might change (user-controlled)\n  const animationRef = useValueRef(animation);\n  const onBeforeOpenRef = useValueRef(onBeforeOpen);\n  const onAfterCloseRef = useValueRef(onAfterClose);\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      open: () => {\n        if (onBeforeOpenRef.current) {\n          onBeforeOpenRef.current();\n        }\n        setMounted(true);\n        setVisible(true);\n      },\n      close: () => {\n        setVisible(false);\n      },\n    }),\n    [onBeforeOpenRef]\n  );\n\n  useLayoutEffect(() => {\n    const element = lightboxRef.current;\n    if (!element) {\n      return;\n    }\n    let animation;\n    // Set pre-animation visibility state, to be flipped post-animation.\n    setStyle(element, 'visibility', visible ? 'hidden' : 'visible');\n\n    // \"Make Visible\" Animation\n    if (visible) {\n      const postVisibleAnim = () => {\n        setStyle(element, 'opacity', 1);\n        setStyle(element, 'visibility', 'visible');\n        element./*REVIEW*/ focus();\n      };\n      if (!element.animate) {\n        postVisibleAnim();\n        return;\n      }\n      animation = element.animate(ANIMATION_PRESETS[animationRef.current], {\n        duration: ANIMATION_DURATION,\n        fill: 'both',\n        easing: 'ease-in',\n      });\n      animation.onfinish = postVisibleAnim;\n    } else {\n      // \"Make Invisible\" Animation\n      const postInvisibleAnim = () => {\n        setStyle(element, 'opacity', 0);\n        setStyle(element, 'visibility', 'hidden');\n        if (onAfterCloseRef.current) {\n          onAfterCloseRef.current();\n        }\n        animation = null;\n        setMounted(false);\n      };\n      if (!element.animate) {\n        postInvisibleAnim();\n        return;\n      }\n      animation = element.animate(ANIMATION_PRESETS[animationRef.current], {\n        duration: ANIMATION_DURATION,\n        direction: 'reverse',\n        fill: 'both',\n        easing: 'ease-in',\n      });\n      animation.onfinish = postInvisibleAnim;\n    }\n    return () => {\n      if (animation) {\n        animation.cancel();\n      }\n    };\n  }, [visible, animationRef, onAfterCloseRef]);\n\n  return (\n    mounted && (\n      <ContainWrapper\n        ref={(r) => {\n          lightboxRef.current = r;\n        }}\n        size={true}\n        layout={true}\n        paint={true}\n        part=\"lightbox\"\n        contentStyle={\n          // Prefer style over class to override `ContainWrapper`'s overflow\n          scrollable && {\n            overflow: 'scroll',\n            overscrollBehavior: 'none',\n          }\n        }\n        wrapperClassName={`${classes.defaultStyles} ${classes.wrapper} ${\n          scrollable ? '' : classes.containScroll\n        }`}\n        role=\"dialog\"\n        tabindex=\"0\"\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            setVisible(false);\n          }\n        }}\n        {...rest}\n      >\n        {children}\n        <button\n          ariaLabel={DEFAULT_CLOSE_LABEL}\n          tabIndex={-1}\n          className={classes.closeButton}\n          onClick={() => {\n            setVisible(false);\n          }}\n        />\n      </ContainWrapper>\n    )\n  );\n}\n\nconst Lightbox = forwardRef(LightboxWithRef);\nLightbox.displayName = 'Lightbox';\nexport {Lightbox};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the \"next\" function that generates a new sequential ID on each call.\n * @return {function():string}\n */\nexport function sequentialIdGenerator() {\n  let counter = 0;\n  return () => String(++counter);\n}\n\n/**\n * Returns a function that generates a random id in string format.  The random\n * id will be an integer from 0 to maxValue (non-inclusive).\n * @param {number} maxValue\n * @return {function():string}\n */\nexport function randomIdGenerator(maxValue) {\n  return () => String(Math.floor(Math.random() * maxValue));\n}\n", "/**\n * Copyright 2021 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from '../../../src/preact';\nimport {LightboxGalleryContext} from './context';\nimport {sequentialIdGenerator} from '../../../src/utils/id-generator';\nimport {\n  useContext,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from '../../../src/preact';\n\nconst generateLightboxItemKey = sequentialIdGenerator();\n\nconst DEFAULT_ARIA_LABEL = 'Open content in a lightbox view.';\nconst DEFAULT_ACTIVATION_PROPS = {\n  'aria-label': DEFAULT_ARIA_LABEL,\n  role: 'button',\n  tabIndex: '0',\n};\n\n/**\n * @param {!LightboxGalleryDef.WithLightboxProps} props\n * @return {PreactDef.Renderable}\n */\nexport function WithLightbox({\n  as: Comp = 'div',\n  children,\n  enableActivation = true,\n  onClick: customOnClick,\n  render = () => children,\n  ...rest\n}) {\n  const [genKey] = useState(generateLightboxItemKey);\n  const {open, register, deregister} = useContext(LightboxGalleryContext);\n  useLayoutEffect(() => {\n    register(genKey, render);\n    return () => deregister(genKey);\n  }, [genKey, deregister, register, render]);\n\n  const activationProps = useMemo(\n    () =>\n      enableActivation && {\n        ...DEFAULT_ACTIVATION_PROPS,\n        onClick: () => {\n          if (customOnClick) {\n            customOnClick();\n          }\n          open();\n        },\n      },\n    [customOnClick, enableActivation, open]\n  );\n  return (\n    <Comp {...activationProps} {...rest}>\n      {children}\n    </Comp>\n  );\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a Deferred struct, which holds a pending promise and its associated\n * resolve and reject functions.\n *\n * This is preferred instead of creating a Promise instance to extract the\n * resolve/reject functions yourself:\n *\n * ```\n * // Avoid doing\n * let resolve;\n * const promise = new Promise(res => {\n *   resolve = res;\n * });\n *\n * // Good\n * const deferred = new Deferred();\n * const { promise, resolve } = deferred;\n * ```\n *\n * @template T\n */\nexport class Deferred {\n  /**\n   * Creates an instance of Deferred.\n   */\n  constructor() {\n    let resolve, reject;\n\n    /**\n     * @const {!Promise<T>}\n     */\n    this.promise = new /*OK*/ Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    /**\n     * @const {function(T=)}\n     */\n    this.resolve = resolve;\n\n    /**\n     * @const {function(*=)}\n     */\n    this.reject = reject;\n  }\n}\n\n/**\n * Creates a promise resolved to the return value of fn.\n * If fn sync throws, it will cause the promise to reject.\n *\n * @param {function():T} fn\n * @return {!Promise<T>}\n * @template T\n */\nexport function tryResolve(fn) {\n  return new Promise((resolve) => {\n    resolve(fn());\n  });\n}\n\n/**\n * Returns a promise which resolves if a threshold amount of the given promises\n * resolve, and rejects otherwise.\n * @param {!Array<!Promise>} promises The array of promises to test.\n * @param {number} count The number of promises that must resolve for the\n *     returned promise to resolve.\n * @return {!Promise} A promise that resolves if any of the given promises\n *     resolve, and which rejects otherwise.\n */\nexport function some(promises, count = 1) {\n  return new Promise((resolve, reject) => {\n    count = Math.max(count, 0);\n    const extra = promises.length - count;\n    if (extra < 0) {\n      reject(new Error('not enough promises to resolve'));\n    }\n    if (promises.length == 0) {\n      resolve([]);\n    }\n    const values = [];\n    const reasons = [];\n\n    const onFulfilled = (value) => {\n      if (values.length < count) {\n        values.push(value);\n      }\n      if (values.length == count) {\n        resolve(values);\n      }\n    };\n    const onRejected = (reason) => {\n      if (reasons.length <= extra) {\n        reasons.push(reason);\n      }\n      if (reasons.length > extra) {\n        reject(reasons);\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      Promise.resolve(promises[i]).then(onFulfilled, onRejected);\n    }\n  });\n}\n\n/**\n * Resolves with the result of the last promise added.\n * @implements {IThenable}\n */\nexport class LastAddedResolver {\n  /**\n   * @param {!Array<!Promise>=} opt_promises\n   */\n  constructor(opt_promises) {\n    let resolve_, reject_;\n    /** @private @const {!Promise} */\n    this.promise_ = new Promise((resolve, reject) => {\n      resolve_ = resolve;\n      reject_ = reject;\n    });\n\n    /** @private */\n    this.resolve_ = resolve_;\n\n    /** @private */\n    this.reject_ = reject_;\n\n    /** @private */\n    this.count_ = 0;\n\n    if (opt_promises) {\n      for (let i = 0; i < opt_promises.length; i++) {\n        this.add(opt_promises[i]);\n      }\n    }\n  }\n\n  /**\n   * Add a promise to possibly be resolved.\n   * @param {!Promise} promise\n   * @return {!Promise}\n   */\n  add(promise) {\n    const countAtAdd = ++this.count_;\n    Promise.resolve(promise).then(\n      (result) => {\n        if (this.count_ === countAtAdd) {\n          this.resolve_(result);\n        }\n      },\n      (error) => {\n        // Don't follow behavior of Promise.all and Promise.race error so that\n        // this will only reject when most recently added promise fails.\n        if (this.count_ === countAtAdd) {\n          this.reject_(error);\n        }\n      }\n    );\n    return this.promise_;\n  }\n\n  /** @override */\n  then(opt_resolve, opt_reject) {\n    return this.promise_.then(opt_resolve, opt_reject);\n  }\n}\n", "/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n\n\n/**\n * This regex consists of 4 matching capture groups and one (non-matching) fallback:\n *\n * - (\\0), catch the null terminator character so it may be replaced by UTF\n *   Replacement Char\n * - ^(-)$, catch a solitary dash char, so that it may be backslash escaped.\n *   This is a separate capture group so that the legal-chars (group 4) doesn't\n *   capture it first, since that group doesn't need to escape its dash.\n * - ([\\x01-\\x1f\\x7f]|^-?[0-9]), catch a UTF control char, or any leading\n *   number (with an optional leading dash). The control or the number (but not\n *   the leading dash) must be hex-escaped,.\n * - ([\\x80-\\uffff0-9a-zA-Z_-]+), catch legal-chars, with the exception of a\n *   solitary dash, which will already have matched in group 1.\n * - [^], finally, a catch-all that allows us to backslash escape the char.\n *\n * Together, this matches everything necessary for CSS.escape.\n */\nvar regex = /(\\0)|^(-)$|([\\x01-\\x1f\\x7f]|^-?[0-9])|([\\x80-\\uffff0-9a-zA-Z_-]+)|[^]/g;\n\nfunction escaper(match, nil, dash, hexEscape, chars) {\n  // Chars is the legal-chars (group 4) capture\n  if (chars) {\n    return chars;\n  }\n  // Nil is the null terminator (group 1) capture\n  if (nil) {\n    return '\\uFFFD';\n  }\n  // Both UTF control chars, and leading numbers (with optional leading dash)\n  // (group 3) must be backslash escaped with a trailing space.  Funnily, the\n  // leading dash must not be escaped, but the number. :shrug:\n  if (hexEscape) {\n    return match.slice(0, -1) + '\\\\' + match.slice(-1).charCodeAt(0).toString(16) + ' '\n  }\n  // Finally, the solitary dash and the catch-all chars require backslash\n  // escaping.\n  return '\\\\' + match;\n}\n\n/**\n * https://drafts.csswg.org/cssom/#serialize-an-identifier\n * @param {string} value\n * @return {string}\n */\nexport function cssEscape(value) {\n  return String(value).replace(regex, escaper);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssEscape} from '../third_party/css-escape/css-escape';\nimport {devAssert} from './log';\n\n/**\n * Asserts that name is just an alphanumeric word, and does not contain\n * advanced CSS selector features like attributes, psuedo-classes, class names,\n * nor ids.\n * @param {string} name\n */\nexport function assertIsName(name) {\n  devAssert(/^[\\w-]+$/.test(name));\n}\n\n/**\n * @type {boolean|undefined}\n */\nlet scopeSelectorSupported;\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setScopeSelectorSupportedForTesting(val) {\n  scopeSelectorSupported = val;\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nexport function isScopeSelectorSupported(el) {\n  if (scopeSelectorSupported !== undefined) {\n    return scopeSelectorSupported;\n  }\n\n  return (scopeSelectorSupported = testScopeSelector(el));\n}\n\n/**\n * Test that the :scope selector is supported and behaves correctly.\n * @param {!Element|!ShadowRoot} el\n * @return {boolean}\n */\nfunction testScopeSelector(el) {\n  try {\n    const doc = el.ownerDocument;\n    const testElement = doc.createElement('div');\n    const testChild = doc.createElement('div');\n    testElement.appendChild(testChild);\n    // NOTE(cvializ, #12383): Firefox's implementation is incomplete,\n    // therefore we test actual functionality of`:scope` as well.\n    return testElement./*OK*/ querySelector(':scope div') === testChild;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Prefixes a selector for ancestor selection. Splits in subselectors and\n * applies prefix to each.\n *\n * e.g.\n * ```\n *   prependSelectorsWith('div', '.i-amphtml-scoped');\n *   // => '.i-amphtml-scoped div'\n *   prependSelectorsWith('div, ul', ':scope');\n *   // => ':scope div, :scope ul'\n *   prependSelectorsWith('div, ul', 'article >');\n *   // => 'article > div, article > ul'\n * ```\n *\n * @param {string} selector\n * @param {string} distribute\n * @return {string}\n */\nexport function prependSelectorsWith(selector, distribute) {\n  return selector.replace(/^|,/g, `$&${distribute} `);\n}\n\n/**\n * Escapes an ident (ID or a class name) to be used as a CSS selector.\n *\n * See https://drafts.csswg.org/cssom/#serialize-an-identifier.\n *\n * @param {string} ident\n * @return {string}\n */\nexport function escapeCssSelectorIdent(ident) {\n  if (IS_ESM) {\n    return CSS.escape(ident);\n  }\n  return cssEscape(ident);\n}\n\n/**\n * Escapes an ident in a way that can be used by :nth-child() psuedo-class.\n *\n * See https://github.com/w3c/csswg-drafts/issues/2306.\n *\n * @param {string|number} ident\n * @return {string}\n */\nexport function escapeCssSelectorNth(ident) {\n  const escaped = String(ident);\n  // Ensure it doesn't close the nth-child psuedo class.\n  devAssert(escaped.indexOf(')') === -1);\n  return escaped;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} match\n * @return {string}\n */\nfunction prependDashAndToLowerCase(match) {\n  return '-' + match.toLowerCase();\n}\n\n/**\n * @param {string} name Attribute name containing dashes.\n * @return {string} Dashes removed and successive character sent to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * Converts a string that is in camelCase to one that is in dash-case.\n *\n * @param {string} string The string to convert.\n * @return {string} The string in dash-case.\n */\nexport function camelCaseToDash(string) {\n  return string.replace(/(?!^)[A-Z]/g, prependDashAndToLowerCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.includes.\n * @param {string} string\n * @param {string} substring\n * @param {number=} start\n * @return {boolean}\n */\nexport function includes(string, substring, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + substring.length > string.length) {\n    return false;\n  }\n  return string.indexOf(substring, start) !== -1;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n * @return {string}\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n\n/**\n * Hash function djb2a\n * This is intended to be a simple, fast hashing function using minimal code.\n * It does *not* have good cryptographic properties.\n * @param {string} str\n * @return {string} 32-bit unsigned hash of the string\n */\nexport function stringHash32(str) {\n  const {length} = str;\n  let hash = 5381;\n  for (let i = 0; i < length; i++) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n  // Convert from 32-bit signed to unsigned.\n  return String(hash >>> 0);\n}\n\n/**\n * Trims a string on the end, removing whitespace characters.\n * @param {string} str  A string to trim.\n * @return {string} The string, with trailing whitespace removed.\n */\nexport function trimEnd(str) {\n  // TODO(sparhami) Does this get inlined for an ES2019 build?\n  if (str.trimEnd) {\n    return str.trimEnd();\n  }\n\n  return ('_' + str).trim().slice(1);\n}\n\n/**\n * Trims any leading whitespace from a string.\n * @param {string} str  A string to trim.\n * @return {string} The string, with leading whitespace removed.\n */\nexport function trimStart(str) {\n  if (str.trimStart) {\n    return str.trimStart();\n  }\n\n  return (str + '_').trim().slice(0, -1);\n}\n\n/**\n * Wrapper around String.replace that handles asynchronous resolution.\n * @param {string} str\n * @param {RegExp} regex\n * @param {Function|string} replacer\n * @return {!Promise<string>}\n */\nexport function asyncStringReplace(str, regex, replacer) {\n  if (typeof replacer === 'string') {\n    return Promise.resolve(str.replace(regex, replacer));\n  }\n  const stringBuilder = [];\n  let lastIndex = 0;\n\n  str.replace(regex, function (match) {\n    // String.prototype.replace will pass 3 to n number of arguments to the\n    // callback function based on how many capture groups the regex may or may\n    // not contain. We know that the match will always be first, and the\n    // index will always be second to last.\n    const matchIndex = arguments[arguments.length - 2];\n    stringBuilder.push(str.slice(lastIndex, matchIndex));\n    lastIndex = matchIndex + match.length;\n\n    // Store the promise in it's eventual string position.\n    const replacementPromise = replacer.apply(null, arguments);\n    stringBuilder.push(replacementPromise);\n  });\n  stringBuilder.push(str.slice(lastIndex));\n\n  return Promise.all(stringBuilder).then((resolved) => resolved.join(''));\n}\n\n/**\n * Pads the beginning of a string with a substring to a target length.\n * @param {string} s\n * @param {number} targetLength\n * @param {string} padString\n * @return {string}\n */\nexport function padStart(s, targetLength, padString) {\n  if (s.length >= targetLength) {\n    return s;\n  }\n  targetLength = targetLength - s.length;\n  let padding = padString;\n  while (targetLength > padding.length) {\n    padding += padString;\n  }\n  return padding.slice(0, targetLength) + s;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Deferred} from './utils/promise';\nimport {\n  assertIsName,\n  isScopeSelectorSupported,\n  prependSelectorsWith,\n} from './css';\nimport {dev, devAssert} from './log';\nimport {dict} from './utils/object';\nimport {includes} from './string';\nimport {toWin} from './types';\n\nconst HTML_ESCAPE_CHARS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n};\nconst HTML_ESCAPE_REGEX = /(&|<|>|\"|'|`)/g;\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_PROMISE = '__AMP_UPG_PRM';\n\n/** @const {string} */\nexport const UPGRADE_TO_CUSTOMELEMENT_RESOLVER = '__AMP_UPG_RES';\n\n/**\n * @typedef {{\n *   bubbles: (boolean|undefined),\n *   cancelable: (boolean|undefined),\n * }}\n */\nexport let CustomEventOptionsDef;\n\n/** @const {!CustomEventOptionsDef} */\nconst DEFAULT_CUSTOM_EVENT_OPTIONS = {bubbles: true, cancelable: true};\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * callback is executed.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @param {function()} callback\n */\nexport function waitForChild(parent, checkFunc, callback) {\n  if (checkFunc(parent)) {\n    callback();\n    return;\n  }\n  /** @const {!Window} */\n  const win = toWin(parent.ownerDocument.defaultView);\n  if (IS_ESM || win.MutationObserver) {\n    /** @const {MutationObserver} */\n    const observer = new win.MutationObserver(() => {\n      if (checkFunc(parent)) {\n        observer.disconnect();\n        callback();\n      }\n    });\n    observer.observe(parent, {childList: true});\n  } else {\n    /** @const {number} */\n    const interval = win.setInterval(() => {\n      if (checkFunc(parent)) {\n        win.clearInterval(interval);\n        callback();\n      }\n    }, /* milliseconds */ 5);\n  }\n}\n\n/**\n * Waits until the child element is constructed. Once the child is found, the\n * promise is resolved.\n * @param {!Element} parent\n * @param {function(!Element):boolean} checkFunc\n * @return {!Promise}\n */\nexport function waitForChildPromise(parent, checkFunc) {\n  return new Promise((resolve) => {\n    waitForChild(parent, checkFunc, resolve);\n  });\n}\n\n/**\n * Waits for document's body to be available and ready.\n * @param {!Document} doc\n * @param {function()} callback\n */\nexport function waitForBodyOpen(doc, callback) {\n  waitForChild(doc.documentElement, () => !!doc.body, callback);\n}\n\n/**\n * Waits for document's body to be available.\n * @param {!Document} doc\n * @return {!Promise}\n */\nexport function waitForBodyOpenPromise(doc) {\n  return new Promise((resolve) => waitForBodyOpen(doc, resolve));\n}\n\n/**\n * Removes the element.\n * @param {!Element} element\n */\nexport function removeElement(element) {\n  if (element.parentElement) {\n    element.parentElement.removeChild(element);\n  }\n}\n\n/**\n * Removes all child nodes of the specified element.\n * @param {!Element|!DocumentFragment} parent\n */\nexport function removeChildren(parent) {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild);\n  }\n}\n\n/**\n * Copies all children nodes of element \"from\" to element \"to\". Child nodes\n * are deeply cloned. Notice, that this method should be used with care and\n * preferably on smaller subtrees.\n * @param {!Element} from\n * @param {!Element|!DocumentFragment} to\n */\nexport function copyChildren(from, to) {\n  const frag = to.ownerDocument.createDocumentFragment();\n  for (let n = from.firstChild; n; n = n.nextSibling) {\n    frag.appendChild(n.cloneNode(true));\n  }\n  to.appendChild(frag);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n * @param {?Node=} after\n */\nexport function insertAfterOrAtStart(root, element, after = null) {\n  if (!after) {\n    insertAtStart(root, element);\n    return;\n  }\n  const before = after.nextSibling;\n  root.insertBefore(element, before);\n}\n\n/**\n * Insert the element in the root after the element named after or\n * if that is null at the beginning.\n * @param {!Element|!ShadowRoot} root\n * @param {!Element} element\n */\nexport function insertAtStart(root, element) {\n  root.insertBefore(element, root.firstChild);\n}\n\n/**\n * Add attributes to an element.\n * @param {!Element} element\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function addAttributesToElement(element, attributes) {\n  for (const attr in attributes) {\n    element.setAttribute(attr, attributes[attr]);\n  }\n  return element;\n}\n\n/**\n * Create a new element on document with specified tagName and attributes.\n * @param {!Document} doc\n * @param {string} tagName\n * @param {!JsonObject<string, string>} attributes\n * @return {!Element} created element\n */\nexport function createElementWithAttributes(doc, tagName, attributes) {\n  const element = doc.createElement(tagName);\n  return addAttributesToElement(element, attributes);\n}\n\n/**\n * Returns true if node is connected (attached).\n * @param {!Node} node\n * @return {boolean}\n * @see https://dom.spec.whatwg.org/#connected\n */\nexport function isConnectedNode(node) {\n  const connected = node.isConnected;\n  if (connected !== undefined) {\n    return connected;\n  }\n\n  // \"An element is connected if its shadow-including root is a document.\"\n  let n = node;\n  do {\n    n = rootNodeFor(n);\n    if (n.host) {\n      n = n.host;\n    } else {\n      break;\n    }\n  } while (true);\n  return n.nodeType === Node.DOCUMENT_NODE;\n}\n\n/**\n * Returns the root for a given node. Does not cross shadow DOM boundary.\n * @param {!Node} node\n * @return {!Node}\n */\nexport function rootNodeFor(node) {\n  if (Node.prototype.getRootNode) {\n    // Type checker says `getRootNode` may return null.\n    return node.getRootNode() || node;\n  }\n  let n;\n  // Check isShadowRoot() is only needed for the polyfill case.\n  for (n = node; !!n.parentNode && !isShadowRoot(n); n = n.parentNode) {}\n  return n;\n}\n\n/**\n * Determines if value is actually a `ShadowRoot` node.\n * @param {*} value\n * @return {boolean}\n */\nexport function isShadowRoot(value) {\n  if (!value) {\n    return false;\n  }\n  // Node.nodeType == DOCUMENT_FRAGMENT to speed up the tests. Unfortunately,\n  // nodeType of DOCUMENT_FRAGMENT is used currently for ShadowRoot nodes.\n  if (value.tagName == 'I-AMPHTML-SHADOW-ROOT') {\n    return true;\n  }\n  return (\n    value.nodeType == /* DOCUMENT_FRAGMENT */ 11 &&\n    Object.prototype.toString.call(value) === '[object ShadowRoot]'\n  );\n}\n\n/**\n * Finds the closest element that satisfies the callback from this element\n * up the DOM subtree.\n * @param {!Element} element\n * @param {function(!Element):boolean} callback\n * @param {Element=} opt_stopAt optional elemnt to stop the search at.\n * @return {?Element}\n */\nexport function closest(element, callback, opt_stopAt) {\n  for (let el = element; el && el !== opt_stopAt; el = el.parentElement) {\n    if (callback(el)) {\n      return el;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest node that satisfies the callback from this node\n * up the DOM subtree.\n * @param {!Node} node\n * @param {function(!Node):boolean} callback\n * @return {?Node}\n */\nexport function closestNode(node, callback) {\n  for (let n = node; n; n = n.parentNode) {\n    if (callback(n)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds the closest ancestor element with the specified selector from this\n * element.\n * @param {!Element} element\n * @param {string} selector\n * @return {?Element} closest ancestor if found.\n */\nexport function closestAncestorElementBySelector(element, selector) {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  return closest(element, (el) => {\n    return matches(el, selector);\n  });\n}\n\n/**\n * Finds all ancestor elements that satisfy predicate.\n * @param {!Element} child\n * @param {function(!Element):boolean} predicate\n * @return {!Array<!Element>}\n */\nexport function ancestorElements(child, predicate) {\n  const ancestors = [];\n  for (\n    let ancestor = child.parentElement;\n    ancestor;\n    ancestor = ancestor.parentElement\n  ) {\n    if (predicate(ancestor)) {\n      ancestors.push(ancestor);\n    }\n  }\n  return ancestors;\n}\n\n/**\n * Finds all ancestor elements that has the specified tag name.\n * @param {!Element} child\n * @param {string} tagName\n * @return {!Array<!Element>}\n */\nexport function ancestorElementsByTag(child, tagName) {\n  assertIsName(tagName);\n  tagName = tagName.toUpperCase();\n  return ancestorElements(child, (el) => {\n    return el.tagName == tagName;\n  });\n}\n\n/**\n * Finds the first child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function childElement(parent, callback) {\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child elements that satisfy the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {!Array<!Element>}\n */\nexport function childElements(parent, callback) {\n  const children = [];\n  for (\n    let child = parent.firstElementChild;\n    child;\n    child = child.nextElementSibling\n  ) {\n    if (callback(child)) {\n      children.push(child);\n    }\n  }\n  return children;\n}\n\n/**\n * Finds the last child element that satisfies the callback.\n * @param {!Element} parent\n * @param {function(!Element):boolean} callback\n * @return {?Element}\n */\nexport function lastChildElement(parent, callback) {\n  for (\n    let child = parent.lastElementChild;\n    child;\n    child = child.previousElementSibling\n  ) {\n    if (callback(child)) {\n      return child;\n    }\n  }\n  return null;\n}\n\n/**\n * Finds all child nodes that satisfy the callback.\n * These nodes can include Text, Comment and other child nodes.\n * @param {!Node} parent\n * @param {function(!Node):boolean} callback\n * @return {!Array<!Node>}\n */\nexport function childNodes(parent, callback) {\n  const nodes = [];\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    if (callback(child)) {\n      nodes.push(child);\n    }\n  }\n  return nodes;\n}\n\n/**\n * Finds the first child element that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function childElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelector(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the last child element that has the specified attribute.\n * @param {!Element} parent\n * @param {string} attr\n * @return {?Element}\n */\nexport function lastChildElementByAttr(parent, attr) {\n  assertIsName(attr);\n  return lastChildElement(parent, (el) => {\n    return el.hasAttribute(attr);\n  });\n}\n\n/**\n * Finds all child elements that has the specified attribute.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} attr\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByAttr(parent, attr) {\n  assertIsName(attr);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> [${attr}]`);\n}\n\n/**\n * Finds the first child element that has the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {?Element}\n */\nexport function childElementByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelector(parent, `> ${tagName}`);\n}\n\n/**\n * Finds all child elements with the specified tag name.\n * @param {!Element|!ShadowRoot} parent\n * @param {string} tagName\n * @return {!NodeList<!Element>}\n */\nexport function childElementsByTag(parent, tagName) {\n  assertIsName(tagName);\n  return /*OK*/ scopedQuerySelectorAll(parent, `> ${tagName}`);\n}\n\n/**\n * Checks if the given element matches the selector\n * @param  {!Element} el The element to verify\n * @param  {string} selector The selector to check against\n * @return {boolean} True if the element matched the selector. False otherwise.\n */\nexport function matches(el, selector) {\n  const matcher =\n    el.matches ||\n    el.webkitMatchesSelector ||\n    el.mozMatchesSelector ||\n    el.msMatchesSelector ||\n    el.oMatchesSelector;\n  if (matcher) {\n    return matcher.call(el, selector);\n  }\n  return false; // IE8 always returns false.\n}\n\n/**\n * Finds the first descendant element with the specified name.\n * @param {!Element|!Document|!ShadowRoot} element\n * @param {string} tagName\n * @return {?Element}\n */\nexport function elementByTag(element, tagName) {\n  assertIsName(tagName);\n  return element./*OK*/ querySelector(tagName);\n}\n\n/**\n * Finds all elements that matche `selector`, scoped inside `root`\n * for user-agents that do not support native scoping.\n *\n * This method isn't required for modern builds, can be removed.\n *\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nfunction scopedQuerySelectionFallback(root, selector) {\n  const unique = 'i-amphtml-scoped';\n  root.classList.add(unique);\n  const scopedSelector = prependSelectorsWith(selector, `.${unique}`);\n  const elements = root./*OK*/ querySelectorAll(scopedSelector);\n  root.classList.remove(unique);\n  return elements;\n}\n\n/**\n * Finds the first element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {?Element}\n */\nexport function scopedQuerySelector(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelector(prependSelectorsWith(selector, ':scope'));\n  }\n\n  // Only IE.\n  const fallbackResult = scopedQuerySelectionFallback(root, selector);\n  return fallbackResult[0] === undefined ? null : fallbackResult[0];\n}\n\n/**\n * Finds every element that matches `selector`, scoped inside `root`.\n * Note: in IE, this causes a quick mutation of the element's class list.\n * @param {!Element|!ShadowRoot} root\n * @param {string} selector\n * @return {!NodeList<!Element>}\n */\nexport function scopedQuerySelectorAll(root, selector) {\n  if (IS_ESM || isScopeSelectorSupported(root)) {\n    return root./*OK*/ querySelectorAll(\n      prependSelectorsWith(selector, ':scope')\n    );\n  }\n\n  // Only IE.\n  return scopedQuerySelectionFallback(root, selector);\n}\n\n/**\n * Returns element data-param- attributes as url parameters key-value pairs.\n * e.g. data-param-some-attr=value -> {someAttr: value}.\n * @param {!Element} element\n * @param {function(string):string=} opt_computeParamNameFunc to compute the\n *    parameter name, get passed the camel-case parameter name.\n * @param {!RegExp=} opt_paramPattern Regex pattern to match data attributes.\n * @return {!JsonObject}\n */\nexport function getDataParamsFromAttributes(\n  element,\n  opt_computeParamNameFunc,\n  opt_paramPattern\n) {\n  const computeParamNameFunc = opt_computeParamNameFunc || ((key) => key);\n  const {dataset} = element;\n  const params = dict();\n  const paramPattern = opt_paramPattern ? opt_paramPattern : /^param(.+)/;\n  for (const key in dataset) {\n    const matches = key.match(paramPattern);\n    if (matches) {\n      const param = matches[1][0].toLowerCase() + matches[1].substr(1);\n      params[computeParamNameFunc(param)] = dataset[key];\n    }\n  }\n  return params;\n}\n\n/**\n * Whether the element have a next node in the document order.\n * This means either:\n *  a. The element itself has a nextSibling.\n *  b. Any of the element ancestors has a nextSibling.\n * @param {!Element} element\n * @param {?Node} opt_stopNode\n * @return {boolean}\n */\nexport function hasNextNodeInDocumentOrder(element, opt_stopNode) {\n  let currentElement = element;\n  do {\n    if (currentElement.nextSibling) {\n      return true;\n    }\n  } while (\n    (currentElement = currentElement.parentNode) &&\n    currentElement != opt_stopNode\n  );\n  return false;\n}\n\n/**\n * Returns a clone of the content of a template element.\n *\n * Polyfill to replace .content access for browsers that do not support\n * HTMLTemplateElements natively.\n *\n * @param {!HTMLTemplateElement|!Element} template\n * @return {!DocumentFragment}\n */\nexport function templateContentClone(template) {\n  if ('content' in template) {\n    return template.content.cloneNode(true);\n  } else {\n    const content = template.ownerDocument.createDocumentFragment();\n    copyChildren(template, content);\n    return content;\n  }\n}\n\n/**\n * Iterate over an array-like.\n * Test cases: https://jsbench.github.io/#f638cacc866a1b2d6e517e6cfa900d6b\n * @param {!IArrayLike<T>} iterable\n * @param {function(T, number)} cb\n * @template T\n */\nexport function iterateCursor(iterable, cb) {\n  const {length} = iterable;\n  for (let i = 0; i < length; i++) {\n    cb(iterable[i], i);\n  }\n}\n\n/**\n * This method wraps around window's open method. It first tries to execute\n * `open` call with the provided target and if it fails, it retries the call\n * with the `_top` target. This is necessary given that in some embedding\n * scenarios, such as iOS' WKWebView, navigation to `_blank` and other targets\n * is blocked by default.\n *\n * @param {!Window} win\n * @param {string} url\n * @param {string} target\n * @param {string=} opt_features\n * @return {?Window}\n */\nexport function openWindowDialog(win, url, target, opt_features) {\n  // Try first with the specified target. If we're inside the WKWebView or\n  // a similar environments, this method is expected to fail by default for\n  // all targets except `_top`.\n  let res;\n  try {\n    res = win.open(url, target, opt_features);\n  } catch (e) {\n    dev().error('DOM', 'Failed to open url on target: ', target, e);\n  }\n\n  // Then try with `_top` target.\n  if (!res && target != '_top' && !includes(opt_features || '', 'noopener')) {\n    res = win.open(url, '_top');\n  }\n  return res;\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.hasAttribute('type') &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/JSON'\n  );\n}\n\n/**\n * Whether the element is a script tag with application/json type.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isJsonLdScriptTag(element) {\n  return (\n    element.tagName == 'SCRIPT' &&\n    element.getAttribute('type').toUpperCase() == 'APPLICATION/LD+JSON'\n  );\n}\n\n/**\n * Whether the page's direction is right to left or not.\n * @param {!Document} doc\n * @return {boolean}\n */\nexport function isRTL(doc) {\n  const dir =\n    doc.body.getAttribute('dir') ||\n    doc.documentElement.getAttribute('dir') ||\n    'ltr';\n  return dir == 'rtl';\n}\n\n/**\n * Escapes `<`, `>` and other HTML charcaters with their escaped forms.\n * @param {string} text\n * @return {string}\n */\nexport function escapeHtml(text) {\n  if (!text) {\n    return text;\n  }\n  return text.replace(HTML_ESCAPE_REGEX, escapeHtmlChar);\n}\n\n/**\n * @param {string} c\n * @return {string}\n */\nfunction escapeHtmlChar(c) {\n  return HTML_ESCAPE_CHARS[c];\n}\n\n/**\n * Tries to focus on the given element; fails silently if browser throws an\n * exception.\n * @param {!Element} element\n */\nexport function tryFocus(element) {\n  try {\n    element./*OK*/ focus();\n  } catch (e) {\n    // IE <= 7 may throw exceptions when focusing on hidden items.\n  }\n}\n\n/**\n * Whether the given window is in an iframe or not.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isIframed(win) {\n  return win.parent && win.parent != win;\n}\n\n/**\n * Determines if this element is an AMP element\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isAmpElement(element) {\n  const tag = element.tagName;\n  // Use prefix to recognize AMP element. This is necessary because stub\n  // may not be attached yet.\n  return (\n    tag.startsWith('AMP-') &&\n    // Some \"amp-*\" elements are not really AMP elements. :smh:\n    !(tag == 'AMP-STICKY-AD-TOP-PADDING' || tag == 'AMP-BODY')\n  );\n}\n\n/**\n * Return a promise that resolve when an AMP element upgrade from HTMLElement\n * to CustomElement\n * @param {!Element} element\n * @return {!Promise<!Element>}\n */\nexport function whenUpgradedToCustomElement(element) {\n  devAssert(isAmpElement(element), 'element is not AmpElement');\n  if (element.createdCallback) {\n    // Element already is CustomElement;\n    return Promise.resolve(element);\n  }\n  // If Element is still HTMLElement, wait for it to upgrade to customElement\n  // Note: use pure string to avoid obfuscation between versions.\n  if (!element[UPGRADE_TO_CUSTOMELEMENT_PROMISE]) {\n    const deferred = new Deferred();\n    element[UPGRADE_TO_CUSTOMELEMENT_PROMISE] = deferred.promise;\n    element[UPGRADE_TO_CUSTOMELEMENT_RESOLVER] = deferred.resolve;\n  }\n\n  return element[UPGRADE_TO_CUSTOMELEMENT_PROMISE];\n}\n\n/**\n * Replacement for `Element.requestFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n * @param {!Element} element\n */\nexport function fullscreenEnter(element) {\n  const requestFs =\n    element.requestFullscreen ||\n    element.requestFullScreen ||\n    element.webkitRequestFullscreen ||\n    element.webkitEnterFullscreen ||\n    element.msRequestFullscreen ||\n    element.mozRequestFullScreen;\n  if (requestFs) {\n    requestFs.call(element);\n  }\n}\n\n/**\n * Replacement for `Document.exitFullscreen()` method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/exitFullscreen\n * @param {!Element} element\n */\nexport function fullscreenExit(element) {\n  const elementBoundExit =\n    element.cancelFullScreen ||\n    element.exitFullscreen ||\n    element.webkitExitFullscreen ||\n    element.webkitCancelFullScreen ||\n    element.mozCancelFullScreen ||\n    element.msExitFullscreen;\n  if (elementBoundExit) {\n    elementBoundExit.call(element);\n    return;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return;\n  }\n  const docBoundExit =\n    ownerDocument.cancelFullScreen ||\n    ownerDocument.exitFullscreen ||\n    ownerDocument.webkitExitFullscreen ||\n    ownerDocument.webkitCancelFullScreen ||\n    ownerDocument.mozCancelFullScreen ||\n    ownerDocument.msExitFullscreen;\n  if (docBoundExit) {\n    docBoundExit.call(ownerDocument);\n  }\n}\n\n/**\n * Replacement for `Document.fullscreenElement`.\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenElement\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isFullscreenElement(element) {\n  const {webkitDisplayingFullscreen} = element;\n  if (webkitDisplayingFullscreen !== undefined) {\n    return webkitDisplayingFullscreen;\n  }\n  const {ownerDocument} = element;\n  if (!ownerDocument) {\n    return false;\n  }\n  const fullscreenElement =\n    ownerDocument.fullscreenElement ||\n    ownerDocument.webkitFullscreenElement ||\n    ownerDocument.mozFullScreenElement ||\n    ownerDocument.webkitCurrentFullScreenElement;\n  return fullscreenElement == element;\n}\n\n/**\n * Returns true if node is not disabled.\n *\n * IE8 can return false positives, see {@link matches}.\n * @param {!Element} element\n * @return {boolean}\n * @see https://www.w3.org/TR/html5/forms.html#concept-fe-disabled\n */\nexport function isEnabled(element) {\n  return !(element.disabled || matches(element, ':disabled'));\n}\n\n/**\n * A sorting comparator that sorts elements in DOM tree order.\n * A first sibling is sorted to be before its nextSibling.\n * A parent node is sorted to be before a child.\n * See https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n *\n * @param {!Element} element1\n * @param {!Element} element2\n * @return {number}\n */\nexport function domOrderComparator(element1, element2) {\n  if (element1 === element2) {\n    return 0;\n  }\n\n  const pos = element1.compareDocumentPosition(element2);\n  const precedingOrContains =\n    Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;\n\n  // if fe2 is preceding or contains fe1 then, fe1 is after fe2\n  if (pos & precedingOrContains) {\n    return 1;\n  }\n\n  // if fe2 is following or contained by fe1, then fe1 is before fe2\n  return -1;\n}\n\n/**\n * Like `Element.prototype.toggleAttribute`. This either toggles an attribute\n * on by adding an attribute with an empty value, or toggles it off by removing\n * the attribute. This does not mutate the element if the new state matches\n * the existing state.\n * @param {!Element} element An element to toggle the attribute for.\n * @param {string} name The name of the attribute.\n * @param {boolean=} forced Whether the attribute should be forced on/off. If\n *    not specified, it will be toggled from the current state.\n * @return {boolean} Whether or not the element now has the attribute.\n */\nexport function toggleAttribute(element, name, forced) {\n  const hasAttribute = element.hasAttribute(name);\n  const enabled = forced !== undefined ? forced : !hasAttribute;\n\n  if (enabled !== hasAttribute) {\n    if (enabled) {\n      element.setAttribute(name, '');\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  return enabled;\n}\n\n/**\n * Parses a string as a boolean value using the expanded rules for DOM boolean\n * attributes:\n * - a `null` or `undefined` returns `null`;\n * - an empty string returns `true`;\n * - a \"false\" string returns `false`;\n * - otherwise, `true` is returned.\n *\n * @param {?string|undefined} s\n * @return {boolean|undefined}\n */\nexport function parseBooleanAttribute(s) {\n  return s == null ? undefined : s !== 'false';\n}\n\n/**\n * @param {!Window} win\n * @return {number} The width of the vertical scrollbar, in pixels.\n */\nexport function getVerticalScrollbarWidth(win) {\n  const {documentElement} = win.document;\n  const windowWidth = win./*OK*/ innerWidth;\n  const documentWidth = documentElement./*OK*/ clientWidth;\n  return windowWidth - documentWidth;\n}\n\n/**\n * Dispatches a custom event.\n *\n * @param {!Node} node\n * @param {string} name\n * @param {!Object=} opt_data Event data.\n * @param {!CustomEventOptionsDef=} opt_options\n */\nexport function dispatchCustomEvent(node, name, opt_data, opt_options) {\n  const data = opt_data || {};\n  // Constructors of events need to come from the correct window. Sigh.\n  const event = node.ownerDocument.createEvent('Event');\n  event.data = data;\n  const {bubbles, cancelable} = opt_options || DEFAULT_CUSTOM_EVENT_OPTIONS;\n  event.initEvent(name, bubbles, cancelable);\n  node.dispatchEvent(event);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as Preact from '../../../src/preact';\nimport {\n  Alignment,\n  Axis,\n  Orientation,\n  getDimension,\n  getOffsetPosition,\n  getScrollEnd,\n} from './dimensions';\nimport {Arrow} from './arrow';\nimport {CarouselContext} from './carousel-context';\nimport {ContainWrapper} from '../../../src/preact/component';\nimport {Scroller} from './scroller';\nimport {WithAmpContext} from '../../../src/preact/context';\nimport {WithLightbox} from '../../amp-lightbox-gallery/1.0/component';\nimport {forwardRef} from '../../../src/preact/compat';\nimport {isRTL} from '../../../src/dom';\nimport {mod} from '../../../src/utils/math';\nimport {\n  toChildArray,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../src/preact';\nimport {toWin} from '../../../src/types';\nimport {useStyles} from './base-carousel.jss';\n\n/**\n * @enum {string}\n */\nconst Controls = {\n  ALWAYS: 'always',\n  NEVER: 'never',\n  AUTO: 'auto',\n};\n\n/**\n * @enum {string}\n */\nconst Interaction = {\n  GENERIC: 0,\n  FOCUS: 1,\n  MOUSE: 2,\n  TOUCH: 3,\n  NONE: 4,\n};\n\n/**\n * @enum {string}\n */\nconst Direction = {\n  LTR: 'ltr',\n  RTL: 'rtl',\n  AUTO: 'auto',\n};\n\nconst MIN_AUTO_ADVANCE_INTERVAL = 1000;\n\n/**\n * @param {!BaseCarouselDef.Props} props\n * @param {{current: (!BaseCarouselDef.CarouselApi|null)}} ref\n * @return {PreactDef.Renderable}\n */\nfunction BaseCarouselWithRef(\n  {\n    advanceCount = 1,\n    arrowPrev,\n    arrowNext,\n    autoAdvance: shouldAutoAdvance = false,\n    autoAdvanceCount = 1,\n    autoAdvanceInterval: customAutoAdvanceInterval = MIN_AUTO_ADVANCE_INTERVAL,\n    autoAdvanceLoops = Number.POSITIVE_INFINITY,\n    children,\n    controls = Controls.AUTO,\n    defaultSlide = 0,\n    dir = Direction.AUTO,\n    lightbox = false,\n    loop,\n    mixedLength = false,\n    onFocus,\n    onMouseEnter,\n    onSlideChange,\n    onTouchStart,\n    orientation = Orientation.HORIZONTAL,\n    outsetArrows,\n    snap = true,\n    snapAlign = Alignment.START,\n    snapBy = 1,\n    visibleCount = 1,\n    _thumbnails = false,\n    ...rest\n  },\n  ref\n) {\n  const classes = useStyles();\n  const childrenArray = useMemo(() => toChildArray(children), [children]);\n  const {length} = childrenArray;\n  const carouselContext = useContext(CarouselContext);\n  const [currentSlideState, setCurrentSlideState] = useState(\n    Math.min(Math.max(defaultSlide, 0), length)\n  );\n  const globalCurrentSlide = carouselContext.currentSlide ?? currentSlideState;\n  const setGlobalCurrentSlide =\n    carouselContext.setCurrentSlide ?? setCurrentSlideState;\n  const currentSlide = _thumbnails ? currentSlideState : globalCurrentSlide;\n  const setCurrentSlide = _thumbnails\n    ? setCurrentSlideState\n    : setGlobalCurrentSlide;\n  const currentSlideRef = useRef(currentSlide);\n  const axis = orientation == Orientation.HORIZONTAL ? Axis.X : Axis.Y;\n\n  useLayoutEffect(() => {\n    // noop if !_thumbnails || !carouselContext.\n    setCurrentSlide(globalCurrentSlide);\n  }, [globalCurrentSlide, setCurrentSlide]);\n\n  const {slides, setSlides} = carouselContext;\n\n  const scrollRef = useRef(null);\n  const containRef = useRef(null);\n  const contentRef = useRef(null);\n\n  const autoAdvanceTimesRef = useRef(0);\n  const autoAdvanceInterval = useMemo(\n    () => Math.max(customAutoAdvanceInterval, MIN_AUTO_ADVANCE_INTERVAL),\n    [customAutoAdvanceInterval]\n  );\n\n  const autoAdvance = useCallback(() => {\n    if (\n      autoAdvanceTimesRef.current + visibleCount / length >= autoAdvanceLoops ||\n      interaction.current !== Interaction.NONE\n    ) {\n      return false;\n    }\n    if (loop || currentSlideRef.current + visibleCount < length) {\n      scrollRef.current.advance(autoAdvanceCount); // Advance forward by specified count\n      // Count autoadvance loops as proportions of the carousel we have advanced through.\n      autoAdvanceTimesRef.current += autoAdvanceCount / length;\n    } else {\n      scrollRef.current.advance(-currentSlideRef.current); // Advance in reverse to first slide\n      autoAdvanceTimesRef.current = Math.ceil(autoAdvanceTimesRef.current);\n    }\n    return true;\n  }, [autoAdvanceCount, autoAdvanceLoops, length, loop, visibleCount]);\n  const next = useCallback(() => scrollRef.current.next(), []);\n  const prev = useCallback(() => scrollRef.current.prev(), []);\n\n  useEffect(() => {\n    if (!shouldAutoAdvance || !containRef.current) {\n      return;\n    }\n    const win = toWin(containRef.current.ownerDocument.defaultView);\n    const interval = win.setInterval(() => {\n      const autoAdvanced = autoAdvance();\n      if (!autoAdvanced) {\n        win.clearInterval(interval);\n      }\n    }, autoAdvanceInterval);\n    return () => win.clearInterval(interval);\n  }, [autoAdvance, autoAdvanceInterval, shouldAutoAdvance]);\n\n  const setRestingIndex = useCallback(\n    (index) => {\n      if (length <= 0 || isNaN(index)) {\n        return;\n      }\n      index = Math.min(Math.max(index, 0), length - 1);\n      setCurrentSlide(index);\n      if (currentSlideRef.current !== index) {\n        currentSlideRef.current = index;\n        if (onSlideChange) {\n          onSlideChange(index);\n        }\n      }\n    },\n    [length, setCurrentSlide, onSlideChange]\n  );\n\n  useImperativeHandle(\n    ref,\n    () =>\n      /** @type {!BaseCarouselDef.CarouselApi} */ ({\n        goToSlide: (index) => {\n          interaction.current = Interaction.GENERIC;\n          setRestingIndex(index);\n        },\n        next: () => {\n          interaction.current = Interaction.GENERIC;\n          next();\n        },\n        prev: () => {\n          interaction.current = Interaction.GENERIC;\n          prev();\n        },\n        get root() {\n          return containRef.current;\n        },\n        get node() {\n          return contentRef.current;\n        },\n      }),\n    [next, prev, setRestingIndex]\n  );\n\n  useEffect(() => {\n    // For now, do not update slides if they are the same length as before.\n    // Otherwise this causes an infinite loop when updating the AMP Context.\n    if (!_thumbnails && slides && slides.length !== childrenArray.length) {\n      setSlides(childrenArray);\n    }\n  }, [_thumbnails, childrenArray, setSlides, slides]);\n\n  const disableForDir = (dir) => {\n    if (loop) {\n      // Arrows always available when looping.\n      return false;\n    }\n    if (currentSlide + dir < 0) {\n      // Can no longer advance backwards.\n      return true;\n    }\n    if (currentSlide + visibleCount + dir > length) {\n      // Can no longer advance forwards.\n      return true;\n    }\n    if (mixedLength && dir > 0) {\n      // Measure container to see if we have reached the end.\n      if (!scrollRef.current) {\n        return false;\n      }\n      const container = scrollRef.current.node;\n      if (!container || !container.children.length) {\n        return false;\n      }\n      const scrollEnd = getScrollEnd(axis, container);\n      const scrollStart = getOffsetPosition(\n        axis,\n        container.children[currentSlide]\n      );\n      const {length} = getDimension(axis, container);\n      if (length !== scrollEnd && length + scrollStart >= scrollEnd) {\n        // Can no longer scroll forwards.\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const interaction = useRef(Interaction.NONE);\n  const hideControls = useMemo(() => {\n    if (controls === Controls.ALWAYS || outsetArrows) {\n      return false;\n    }\n    if (controls === Controls.NEVER) {\n      return true;\n    }\n    return interaction.current === Interaction.TOUCH;\n  }, [controls, outsetArrows]);\n\n  const [rtl, setRtl] = useState(dir === Direction.RTL);\n  useLayoutEffect(() => {\n    if (!containRef.current || dir !== Direction.AUTO) {\n      return;\n    }\n    const doc = containRef.current.ownerDocument;\n    if (!doc) {\n      return;\n    }\n    setRtl(isRTL(doc));\n  }, [dir, setRtl]);\n\n  return (\n    <ContainWrapper\n      size={true}\n      layout={true}\n      paint={true}\n      contentStyle={{\n        display: 'flex',\n        direction: rtl ? Direction.RTL : Direction.LTR,\n      }}\n      ref={containRef}\n      onFocus={(e) => {\n        if (onFocus) {\n          onFocus(e);\n        }\n        interaction.current = Interaction.FOCUS;\n      }}\n      onMouseEnter={(e) => {\n        if (onMouseEnter) {\n          onMouseEnter(e);\n        }\n        interaction.current = Interaction.MOUSE;\n      }}\n      onTouchStart={(e) => {\n        if (onTouchStart) {\n          onTouchStart(e);\n        }\n        interaction.current = Interaction.TOUCH;\n      }}\n      tabIndex=\"0\"\n      wrapperClassName={classes.carousel}\n      contentAs={lightbox ? WithLightbox : 'div'}\n      contentRef={contentRef}\n      contentProps={{\n        enableActivation: false,\n        render: () => children,\n      }}\n      {...rest}\n    >\n      {!hideControls && (\n        <Arrow\n          advance={prev}\n          by={-advanceCount}\n          customArrow={arrowPrev}\n          disabled={disableForDir(-1)}\n          outsetArrows={outsetArrows}\n          rtl={rtl}\n        />\n      )}\n      <Scroller\n        advanceCount={advanceCount}\n        alignment={snapAlign}\n        autoAdvanceCount={autoAdvanceCount}\n        axis={axis}\n        lightbox={lightbox}\n        loop={loop}\n        mixedLength={mixedLength}\n        restingIndex={currentSlide}\n        setRestingIndex={setRestingIndex}\n        snap={snap}\n        snapBy={snapBy}\n        ref={scrollRef}\n        visibleCount={mixedLength ? 1 : visibleCount}\n        _thumbnails={_thumbnails}\n      >\n        {/*\n          TODO(#30283): TBD: this is an interesting concept. We could decide\n          to render only N slides at a time and for others just output an empty\n          placeholder. When a slide's slot is unrendered, the slide\n          automatically gets unslotted and gets CanRender=false w/o any extra\n          state management code.\n\n          Note: We naively display all slides for mixedLength as multiple\n          can be visible within the carousel viewport - eventually these can also\n          be optimized to only display the minimum necessary for the current \n          and next viewport.\n        */}\n        {childrenArray.map((child, index) =>\n          Math.min(\n            // Distance from currentSlide.\n            Math.abs(index - currentSlide),\n            // Account for wraparound when looping.\n            loop ? mod(length + currentSlide - index, length) : length\n          ) < Math.ceil(visibleCount * 3) || mixedLength ? (\n            <WithAmpContext\n              key={index}\n              renderable={index == currentSlide}\n              playable={index == currentSlide}\n            >\n              {child}\n            </WithAmpContext>\n          ) : (\n            <></>\n          )\n        )}\n      </Scroller>\n      {!hideControls && (\n        <Arrow\n          advance={next}\n          by={advanceCount}\n          customArrow={arrowNext}\n          disabled={disableForDir(1)}\n          outsetArrows={outsetArrows}\n          rtl={rtl}\n        />\n      )}\n    </ContainWrapper>\n  );\n}\n\nconst BaseCarousel = forwardRef(BaseCarouselWithRef);\nBaseCarousel.displayName = 'BaseCarousel'; // Make findable for tests.\nexport {BaseCarousel};\n", "export const CSS = \"amp-base-carousel{display:block;overflow:hidden;position:relative}amp-base-carousel:not(.i-amphtml-built)>:not([placeholder]):not(.i-amphtml-svc){display:none;content-visibility:hidden}\\n/*# sourceURL=/extensions/amp-base-carousel/1.0/amp-base-carousel.css*/\";\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performs the `closest()` scan through context nodes to find the one that\n * matches the predicate with an optional argument.\n *\n * @param {!./node.ContextNode} startNode\n * @param {function(!./node.ContextNode, ?):boolean} predicate\n * @param {?=} arg\n * @param {boolean=} includeSelf\n * @return {?./node.ContextNode}\n */\nexport function findParent(\n  startNode,\n  predicate,\n  arg = undefined,\n  includeSelf = true\n) {\n  for (let n = includeSelf ? startNode : startNode.parent; n; n = n.parent) {\n    if (predicate(n, arg)) {\n      return n;\n    }\n  }\n  return null;\n}\n\n/**\n * Performs the deep scan through context nodes and calls the specified\n * callback with the optional argument. A node can stop the deep scan into its\n * subtree by returning a falsy result. Otherwise, the subtree will be scanned\n * and the result value will be passed to the children callbacks.\n *\n * @param {!./node.ContextNode} startNode\n * @param {function(!./node.ContextNode, ?, ?):*} callback\n * @param {?=} arg\n * @param {?=} state\n * @param {boolean=} includeSelf\n * @return {?}\n */\nexport function deepScan(\n  startNode,\n  callback,\n  arg = undefined,\n  state = true,\n  includeSelf = true\n) {\n  if (includeSelf) {\n    const newState = callback(startNode, arg, state);\n    if (newState) {\n      deepScan(startNode, callback, arg, newState, false);\n    }\n  } else if (startNode.children) {\n    for (let i = 0; i < startNode.children.length; i++) {\n      deepScan(startNode.children[i], callback, arg, state, true);\n    }\n  }\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Compares if two arrays contains exactly same elements of same number\n * of same order. Note that it does NOT handle NaN case as expected.\n *\n * @param {!Array<T>} arr1\n * @param {!Array<T>} arr2\n * @return {boolean}\n * @template T\n */\nexport function areEqualOrdered(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Removes elements that shouldRemove returns true for from the array.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} shouldRemove\n * @return {!Array<T>}\n * @template T\n */\nexport function remove(array, shouldRemove) {\n  const removed = [];\n  let index = 0;\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    if (shouldRemove(item, i, array)) {\n      removed.push(item);\n    } else {\n      if (index < i) {\n        array[index] = item;\n      }\n      index++;\n    }\n  }\n  if (index < array.length) {\n    array.length = index;\n  }\n  return removed;\n}\n\n/**\n * Returns the index of the first element matching the predicate.\n * Like Array#findIndex.\n *\n * @param {!Array<T>} array\n * @param {function(T, number, !Array<T>):boolean} predicate\n * @return {number}\n * @template T\n */\nexport function findIndex(array, predicate) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i], i, array)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Converts the given iterator to an array.\n *\n * @param {!Iterator<T>} iterator\n * @return {Array<T>}\n * @template T\n */\nexport function fromIterator(iterator) {\n  const array = [];\n  for (let e = iterator.next(); !e.done; e = iterator.next()) {\n    array.push(e.value);\n  }\n  return array;\n}\n\n/**\n * Adds item to array if it is not already present.\n *\n * @param {Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function pushIfNotExist(array, item) {\n  if (array.indexOf(item) < 0) {\n    array.push(item);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the first matching item in the array. Returns `true` if the array\n * has changed.\n *\n * @param {!Array<T>} array\n * @param {T} item\n * @return {boolean}\n * @template T\n */\nexport function removeItem(array, item) {\n  const index = array.indexOf(item);\n  if (index == -1) {\n    return false;\n  }\n  array.splice(index, 1);\n  return true;\n}\n\n/**\n * Returns the last item in an array.\n *\n * @param {Array<T>} array\n * @template T\n * @return {?T}\n */\nexport function lastItem(array) {\n  return array[array.length - 1];\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {rethrowAsync} from '../log';\n\n/**\n * Creates a scheduling function that executes the callback based on the\n * scheduler, but only one task at a time.\n *\n * @param {function()} handler\n * @param {?function(!Function)} defaultScheduler\n * @return {function(function(!Function)=)}\n */\nexport function throttleTail(handler, defaultScheduler = null) {\n  let scheduled = false;\n  const handleAndUnschedule = () => {\n    scheduled = false;\n    handler();\n  };\n  /**\n   * @param {function(!Function)=} opt_scheduler\n   */\n  const scheduleIfNotScheduled = (opt_scheduler) => {\n    if (!scheduled) {\n      scheduled = true;\n      const scheduler = opt_scheduler || defaultScheduler;\n      scheduler(handleAndUnschedule);\n    }\n  };\n  return scheduleIfNotScheduled;\n}\n\n/**\n * Executes the provided callback in a try/catch and rethrows any errors\n * asynchronously. To be used by schedules to avoid errors interrupting\n * queues.\n *\n * @param {function():*} callback\n * @return {*}\n */\nexport function tryCallback(callback) {\n  try {\n    return callback();\n  } catch (e) {\n    rethrowAsync(e);\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {deepScan, findParent} from './scan';\nimport {devAssert, rethrowAsync} from '../log';\nimport {pushIfNotExist, removeItem} from '../utils/array';\nimport {throttleTail} from './scheduler';\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_FUNC = () => {};\n\n/**\n * @enum {number}\n */\nconst Pending = {\n  NOT_PENDING: 0,\n  PENDING: 1,\n  PENDING_REFRESH_PARENT: 2,\n};\n\n/**\n * The structure for a property's inputs. It's important that `values` are\n * easily available as an array to pass them to the `recursive` and\n * `compute` callbacks without reallocation.\n *\n * @typedef {{\n *   values: !Array,\n *   setters: !Array,\n * }}\n */\nlet InputDef;\n\n/**\n * The structure for a property's computed values and subscribers.\n *\n * @typedef {{\n *   prop: !ContextProp,\n *   subscribers: !Array<!Function>,\n *   value: *,\n *   pending: !Pending,\n *   counter: number,\n *   depsValues: !Array,\n *   parentValue: *,\n *   parentContextNode: ?./node.ContextNode,\n *   ping: function(boolean),\n *   pingDep: !Array<function(*)>,\n *   pingParent: ?function(*),\n * }}\n */\nlet UsedDef;\n\n/**\n * Propagates context property values in the context tree. The key APIs are\n * `set()` and `subscribe()`. See `ContextProp` type for details on how\n * values are declared and propagated.\n */\nexport class Values {\n  /**\n   * @param {!./node.ContextNode} contextNode\n   */\n  constructor(contextNode) {\n    /** @private @const {!./node.ContextNode} */\n    this.contextNode_ = contextNode;\n\n    /** @private {?Map<string, !InputDef>} */\n    this.inputsByKey_ = null;\n\n    /** @private {?Map<string, !UsedDef>} */\n    this.usedByKey_ = null;\n\n    // Schedulers.\n    /** @private @const {function()} */\n    this.checkUpdates_ = throttleTail(\n      this.checkUpdates_.bind(this),\n      setTimeout\n    );\n  }\n\n  /**\n   * Sets the property's input value. This is analagous to a CSS specified\n   * value. Several values for the same property can be set on a node - one\n   * per each setter. A repeated call for the same setter overwrites a\n   * previously set input. This is similar to how the same CSS property can be\n   * set in a stylesheet using different classes. The property computation\n   * decides how to treat several values. For instance:\n   * - A property can pick the first set input value (e.g. `font-size`).\n   * - A property can pick the min/max set input value (e.g. `priority`).\n   * - A property can reduce all values using `AND` (e.g. `renderable`).\n   *\n   * Once the input is set, the recalculation is rescheduled asynchronously.\n   * All dependent properties are also recalculated.\n   *\n   * @param {!ContextProp<T>} prop\n   * @param {*} setter\n   * @param {T} value\n   * @template T\n   */\n  set(prop, setter, value) {\n    devAssert(setter);\n    devAssert(value !== undefined);\n\n    const {key} = prop;\n\n    const inputsByKey = this.inputsByKey_ || (this.inputsByKey_ = new Map());\n    let inputs = inputsByKey.get(key);\n    if (!inputs) {\n      inputs = {\n        values: [],\n        setters: [],\n      };\n      inputsByKey.set(key, inputs);\n    }\n    const index = inputs.setters.indexOf(setter);\n    const changed = index == -1 || inputs.values[index] !== value;\n    if (index == -1) {\n      inputs.setters.push(setter);\n      inputs.values.push(value);\n    } else if (changed) {\n      inputs.values[index] = value;\n    }\n\n    if (changed) {\n      // An input has been added to a node for a first time. This might\n      // affect all values in this and child nodes. The simplest algorithm\n      // here is to deep scan all descendants and refresh them.\n      // Optimization opportunity: in simple but common manipulations the\n      // deepscan can be avoided.\n      this.ping(prop, false);\n      if (isRecursive(prop)) {\n        deepScan(this.contextNode_, scan, prop, true, false);\n      }\n    }\n  }\n\n  /**\n   * Unsets the input value for the specified property and setter.\n   * See `set()` for more info.\n   * @param {!ContextProp} prop\n   * @param {*} setter\n   */\n  remove(prop, setter) {\n    devAssert(setter);\n\n    const {key} = prop;\n    const inputsByKey = this.inputsByKey_;\n    const inputs = inputsByKey && inputsByKey.get(key);\n    if (inputs) {\n      const index = inputs.setters.indexOf(setter);\n      if (index != -1) {\n        inputs.setters.splice(index, 1);\n        inputs.values.splice(index, 1);\n        if (inputs.setters.length == 0) {\n          inputsByKey.delete(key);\n        }\n        deepScan(this.contextNode_, scan, prop);\n      }\n    }\n  }\n\n  /**\n   * Whether this node has inputs for the specified property.\n   *\n   * @param {!ContextProp} prop\n   * @return {boolean}\n   */\n  has(prop) {\n    const inputsByKey = this.inputsByKey_;\n    return !!inputsByKey && inputsByKey.has(prop.key);\n  }\n\n  /**\n   * Adds a subscriber for the specified property. If the property has not\n   * yet been tracked, the tracking is started. If the used value is\n   * already available, the handler is called immediately. The handler is\n   * only called if a valid used value is available and only if this value\n   * has changed since the last handler call.\n   *\n   * @param {!ContextProp<T>} prop\n   * @param {function(T)} handler\n   * @template T\n   */\n  subscribe(prop, handler) {\n    const used = this.startUsed_(prop);\n\n    if (!pushIfNotExist(used.subscribers, handler)) {\n      // Already a subscriber.\n      return;\n    }\n\n    // The handler is notified right away if the value is available.\n    const existingValue = used.value;\n    if (isDefined(existingValue) && this.isConnected_()) {\n      handler(existingValue);\n    }\n  }\n\n  /**\n   * Unsubscribes a previously added handler. If there are no other subscribers\n   * the property tracking is stopped and the used value is removed.\n   *\n   * @param {!ContextProp} prop\n   * @param {function(?)} handler\n   */\n  unsubscribe(prop, handler) {\n    const {key} = prop;\n    const usedByKey = this.usedByKey_;\n    const used = usedByKey && usedByKey.get(key);\n    if (!used || !removeItem(used.subscribers, handler)) {\n      // Not a subscriber.\n      return;\n    }\n\n    // If no other subscribers, stop tracking the used value.\n    this.stopUsed_(used);\n  }\n\n  /**\n   * Schedules a recalculation of the specified property, but only if this\n   * property is tracked by this node.\n   *\n   * @param {!ContextProp} prop\n   * @param {boolean} refreshParent Whether the parent node needs to be looked\n   * up again.\n   * @protected\n   */\n  ping(prop, refreshParent) {\n    const {key} = prop;\n    const usedByKey = this.usedByKey_;\n    const used = usedByKey && usedByKey.get(key);\n    if (used) {\n      used.ping(refreshParent);\n    }\n  }\n\n  /**\n   * The callback called by the `ContextNode` to notify values of the context\n   * tree changes. This callback schedules recalculations if necessary.\n   *\n   * @package\n   */\n  parentUpdated() {\n    if (this.isConnected_()) {\n      // Optimization opportunity: in simpler cases, we may only need to refresh\n      // a few specific props or even only specific nodes. E.g. when a single\n      // intermediary parent is inserted between a parent and a child, the amount\n      // of refreshes only depends on the inputs already set on this parent.\n      deepScan(this.contextNode_, scanAll, /* arg */ undefined, EMPTY_ARRAY);\n    }\n  }\n\n  /**\n   * The callback called by the `ContextNode` to notify values of the context\n   * root changes. It's possible that a context node is connected, disconnected,\n   * or moved to another root. This callback schedules recalculations if\n   * necessary.\n   *\n   * @package\n   */\n  rootUpdated() {\n    const usedByKey = this.usedByKey_;\n    if (!usedByKey) {\n      return;\n    }\n    if (this.isConnected_()) {\n      // Ping all properties for recalculation when the tree is connected.\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        this.ping(prop, true);\n      });\n    } else {\n      // On disconnect, only do minimal possible work: disconnect recursive\n      // subscribers to ensure that they are not leaked.\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        if (isRecursive(prop)) {\n          this.updateParentContextNode_(used, null);\n        }\n      });\n    }\n  }\n\n  /**\n   * Used for `deepScan` scanner to notify the subtree that the specified\n   * property has changed and needs to be recalculated.\n   *\n   * Scans are relatively common and this method exists (as opposed to be\n   * inlined) only to avoid frequent function allocation.\n   *\n   * @param {!ContextProp} prop\n   * @return {boolean}\n   * @protected Necessary for cross-binary access.\n   */\n  scan(prop) {\n    this.ping(prop, true);\n    if (!isRecursive(prop)) {\n      // Stop the deepscan. The prop doesn't propagate.\n      return false;\n    }\n    if (this.has(prop)) {\n      // Stop the deepscan. The node will propagate changes downstream.\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Used for `deepScan` scanner to notify the subtree to recalculate all\n   * properties.\n   *\n   * Scans are relatively common and this method exists (as opposed to be\n   * inlined) only to avoid frequent function allocation.\n   *\n   * @param {!Array<string>} scheduled The already scheduled props.\n   * @return {!Array<string>} The new scheduled props.\n   * @protected\n   */\n  scanAll(scheduled) {\n    let newScheduled = null;\n    const usedByKey = this.usedByKey_;\n    if (usedByKey) {\n      usedByKey.forEach((used) => {\n        const {prop} = used;\n        // Only ping unhandled props.\n        if ((newScheduled || scheduled).indexOf(prop.key) == -1) {\n          this.ping(prop, true);\n\n          if (this.contextNode_.children && this.has(prop)) {\n            if (!newScheduled) {\n              newScheduled = scheduled.slice(0);\n            }\n            // Stop the deepscan for this value. It will be propagated\n            // by the responsible node.\n            newScheduled.push(prop.key);\n          }\n        }\n      });\n    }\n    return newScheduled || scheduled;\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isConnected_() {\n    return !!this.contextNode_.root;\n  }\n\n  /**\n   * Start the used value tracker if it hasn't started yet.\n   *\n   * @param {!ContextProp} prop\n   * @return {!UsedDef}\n   * @private\n   */\n  startUsed_(prop) {\n    const {key, deps} = prop;\n    const usedByKey = this.usedByKey_ || (this.usedByKey_ = new Map());\n    let used = usedByKey.get(key);\n    if (!used) {\n      used = {\n        prop,\n        subscribers: [],\n        value: undefined,\n        pending: Pending.NOT_PENDING,\n        counter: 0,\n        depValues: deps.length > 0 ? deps.map(EMPTY_FUNC) : EMPTY_ARRAY,\n        parentValue: undefined,\n        parentContextNode: null,\n        // Schedule the value recalculation, optionally with the parent\n        // refresh.\n        ping: (refreshParent) => {\n          if (this.isConnected_()) {\n            const pending = refreshParent\n              ? Pending.PENDING_REFRESH_PARENT\n              : Pending.PENDING;\n            used.pending = Math.max(used.pending, pending);\n            this.checkUpdates_();\n          }\n        },\n        // Schedule the value recalculation due to the dependency change.\n        pingDep:\n          deps.length > 0\n            ? deps.map((dep, index) => (value) => {\n                used.depValues[index] = value;\n                used.ping();\n              })\n            : EMPTY_ARRAY,\n        // Schedule the value recalculation due to the parent value change.\n        pingParent: isRecursive(prop)\n          ? (parentValue) => {\n              used.parentValue = parentValue;\n              used.ping();\n            }\n          : null,\n      };\n      usedByKey.set(key, used);\n\n      // Subscribe to all deps.\n      deps.forEach((dep, index) => this.subscribe(dep, used.pingDep[index]));\n\n      // Schedule the first refresh.\n      used.ping(false);\n    }\n    return used;\n  }\n\n  /**\n   * Stop calculating the used value if there are no more subscribers left.\n   *\n   * @param {!UsedDef} used\n   * @private\n   */\n  stopUsed_(used) {\n    if (used.subscribers.length > 0) {\n      return;\n    }\n\n    const {prop, pingDep} = used;\n    const {key, deps} = prop;\n\n    this.usedByKey_.delete(key);\n\n    // Unsubscribe itself.\n    this.updateParentContextNode_(used, null);\n    if (deps.length > 0) {\n      deps.forEach((dep, index) => {\n        this.unsubscribe(dep, pingDep[index]);\n      });\n    }\n  }\n\n  /**\n   * Check if any properties awaiting recalculation. This method is always\n   * scheduled asynchronously and throttled.\n   *\n   * @private\n   */\n  checkUpdates_() {\n    if (!this.isConnected_()) {\n      // The node got disconnected between scheduling and handling.\n      return;\n    }\n\n    const usedByKey = this.usedByKey_;\n    if (!usedByKey) {\n      return;\n    }\n\n    usedByKey.forEach((used) => {\n      used.counter = 0;\n    });\n\n    // Recompute all \"pinged\" values for this node. It checks if dependencies\n    // are satisfied and recomputes values accordingly.\n    let updated;\n    do {\n      updated = 0;\n      usedByKey.forEach((used) => {\n        if (used.pending != Pending.NOT_PENDING) {\n          const {key} = used.prop;\n          used.counter++;\n          if (used.counter > 5) {\n            // A simple protection from infinte loops.\n            rethrowAsync(new Error('cyclical prop: ' + key));\n            used.pending = Pending.NOT_PENDING;\n            return;\n          }\n          updated++;\n          this.tryUpdate_(used);\n        }\n      });\n    } while (updated > 0);\n  }\n\n  /**\n   * @param {!UsedDef} used\n   * @private\n   */\n  tryUpdate_(used) {\n    // The value is not pending anymore. If any of the dependencies will remain\n    // unresolved, we will simply need to recomputed it.\n    const refreshParent = used.pending == Pending.PENDING_REFRESH_PARENT;\n\n    let newValue;\n    try {\n      newValue = this.calc_(used, refreshParent);\n    } catch (e) {\n      // This is the narrowest catch to avoid unrelated values breaking each\n      // other. The only exposure to the user-code are `recursive` and\n      // `compute` methods in the `ContextProp`.\n      rethrowAsync(e);\n    }\n\n    // Reset pending flag. It's good to reset it after the calculation to\n    // ensure that deps are automatically covered.\n    used.pending = Pending.NOT_PENDING;\n\n    // Check if the value has been updated.\n    this.maybeUpdated_(used, newValue);\n  }\n\n  /**\n   * @param {!UsedDef} used\n   * @param {*} value\n   * @private\n   */\n  maybeUpdated_(used, value) {\n    const {prop, value: oldValue} = used;\n    const {key} = prop;\n    const usedByKey = this.usedByKey_;\n    if (\n      oldValue === value ||\n      used !== (usedByKey && usedByKey.get(key)) ||\n      !this.isConnected_()\n    ) {\n      // Either the value didn't change, or no one needs this value anymore.\n      return;\n    }\n\n    used.value = value;\n\n    // Notify subscribers.\n    const {subscribers} = used;\n    subscribers.forEach((handler) => {\n      handler(value);\n    });\n  }\n\n  /**\n   * The used value calculation algorithm.\n   *\n   * @param {!UsedDef} used\n   * @param {boolean} refreshParent\n   * @return {*|undefined} The used value.\n   * @private\n   */\n  calc_(used, refreshParent) {\n    devAssert(this.isConnected_());\n\n    const {prop, depValues} = used;\n    const {key, compute, defaultValue} = prop;\n\n    const inputsByKey = this.inputsByKey_;\n    const inputs = inputsByKey && inputsByKey.get(key);\n    const inputValues = inputs && inputs.values;\n\n    // Calculate parent value.\n    const recursive = calcRecursive(prop, inputValues);\n\n    // Refresh parent if requested.\n    if (refreshParent || recursive != Boolean(used.parentContextNode)) {\n      const newParentContextNode = recursive\n        ? findParent(this.contextNode_, hasInput, prop, /* includeSelf */ false)\n        : null;\n      this.updateParentContextNode_(used, newParentContextNode);\n    }\n\n    // If no parent node is found, use the default value.\n    const parentValue = isDefined(used.parentValue)\n      ? used.parentValue\n      : recursive && !used.parentContextNode\n      ? defaultValue\n      : undefined;\n\n    // Calculate the \"used\" value.\n    let newValue = undefined;\n    const ready =\n      depValues.every(isDefined) && (!recursive || isDefined(parentValue));\n    if (ready) {\n      const {node} = this.contextNode_;\n      if (inputValues && !compute) {\n        newValue = inputValues[0];\n      } else if (isRecursive(prop)) {\n        if (inputValues || depValues.length > 0) {\n          // The node specifies its own input values and they need to be\n          // recomputed with parent and dep values.\n          newValue = callRecursiveCompute(\n            compute,\n            node,\n            inputValues || EMPTY_ARRAY,\n            parentValue,\n            depValues\n          );\n        } else if (isDefined(parentValue)) {\n          // The node doesn't specify its own value, but parent is available.\n          // Since parent is available, it means that the node is recursive.\n          newValue = parentValue;\n        }\n      } else if (compute) {\n        newValue = callCompute(\n          compute,\n          node,\n          inputValues || EMPTY_ARRAY,\n          depValues\n        );\n      }\n    }\n\n    return newValue;\n  }\n\n  /**\n   * Update the node from which the parent value is used.\n   *\n   * @param {!UsedDef} used\n   * @param {?./node.ContextNode} newParentContextNode\n   * @private\n   */\n  updateParentContextNode_(used, newParentContextNode) {\n    const {prop, parentContextNode: oldParentContextNode, pingParent} = used;\n    if (newParentContextNode != oldParentContextNode) {\n      used.parentContextNode = newParentContextNode;\n      used.parentValue = undefined;\n\n      if (oldParentContextNode) {\n        oldParentContextNode.values.unsubscribe(prop, devAssert(pingParent));\n      }\n\n      if (newParentContextNode) {\n        newParentContextNode.values.subscribe(prop, devAssert(pingParent));\n      }\n    }\n  }\n}\n\n/**\n * See `Values.scan()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {!ContextProp} prop\n * @return {boolean}\n */\nfunction scan(contextNode, prop) {\n  return contextNode.values.scan(prop);\n}\n\n/**\n * See `Values.scanAll()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {*} unusedArg\n * @param {!Array<string>} state\n * @return {!Array<string>}\n */\nfunction scanAll(contextNode, unusedArg, state) {\n  return contextNode.values.scanAll(state);\n}\n\n/**\n * See `Values.has()` method.\n *\n * @param {!./node.ContextNode} contextNode\n * @param {!ContextProp} prop\n * @return {boolean}\n */\nfunction hasInput(contextNode, prop) {\n  return contextNode.values.has(prop);\n}\n\n/**\n * Whether the property is recursive.\n *\n * @param {!ContextProp} prop\n * @return {boolean}\n */\nfunction isRecursive(prop) {\n  // Only `false` values make a value non-recursive. `true` and\n  // `function` values are considered recursive.\n  return !!prop.recursive;\n}\n\n/**\n * Whether the parent value is required to calculate the used value.\n *\n * @param {!ContextProp} prop\n * @param {?Array} inputs\n * @return {boolean}\n */\nfunction calcRecursive(prop, inputs) {\n  const {recursive, compute} = prop;\n  if (typeof recursive == 'function') {\n    return inputs ? recursive(inputs) : true;\n  }\n  if (recursive && inputs && !compute) {\n    // The default `compute` function is to pick the input value when available\n    // and to fallback to the parent. Thus, when inputs are specified,\n    // there's no longer a need for the parent.\n    return false;\n  }\n  return recursive;\n}\n\n/**\n * A substitute for `compute(...deps)`, but faster.\n *\n * @param {function(!Node, !Array, ...*):*} compute See `ContextProp.compute()`.\n * @param {!Node} node\n * @param {!Array} inputValues\n * @param {!Array} deps\n * @return {*}\n */\nfunction callCompute(compute, node, inputValues, deps) {\n  switch (deps.length) {\n    case 0:\n      return compute(node, inputValues);\n    case 1:\n      return compute(node, inputValues, deps[0]);\n    case 2:\n      return compute(node, inputValues, deps[0], deps[1]);\n    case 3:\n      return compute(node, inputValues, deps[0], deps[1], deps[2]);\n    default:\n      return compute.apply(null, [node, inputValues].concat(deps));\n  }\n}\n\n/**\n * A substitute for `compute(parentValue, ...deps)`, but faster.\n *\n * @param {function(!Node, !Array, ...*):*} compute See `ContextProp.compute()`.\n * @param {!Node} node\n * @param {!Array} inputValues\n * @param {*} parentValue\n * @param {!Array} deps\n * @return {*}\n */\nfunction callRecursiveCompute(compute, node, inputValues, parentValue, deps) {\n  switch (deps.length) {\n    case 0:\n      return compute(node, inputValues, parentValue);\n    case 1:\n      return compute(node, inputValues, parentValue, deps[0]);\n    case 2:\n      return compute(node, inputValues, parentValue, deps[0], deps[1]);\n    case 3:\n      return compute(node, inputValues, parentValue, deps[0], deps[1], deps[2]);\n    default:\n      return compute.apply(null, [node, inputValues, parentValue].concat(deps));\n  }\n}\n\n/**\n * Whether the value is defined.\n *\n * This function only exists to avoid function allocation when calling\n * `Array.every()` and `Array.some()`.\n *\n * @param {*} v\n * @return {boolean}\n */\nfunction isDefined(v) {\n  return v !== undefined;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Values} from './values';\nimport {devAssert} from '../log';\nimport {getMode} from '../mode';\nimport {pushIfNotExist, removeItem} from '../utils/array';\nimport {throttleTail} from './scheduler';\n\n// Properties set on the DOM nodes to track the context state.\nconst NODE_PROP = '__AMP_NODE';\nconst ASSIGNED_SLOT_PROP = '__AMP_ASSIGNED_SLOT';\nconst AMP_PREFIX = 'AMP-';\n\n// Relevant node types.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType.\nconst ELEMENT_NODE = 1;\nconst DOCUMENT_NODE = 9;\n// Includes shadow root, template, etc.\nconst FRAGMENT_NODE = 11;\n\n/**\n * The structure for a group of nodes.\n *\n * @typedef {{\n *   cn: !ContextNode,\n *   match: function(!Node, !Node):boolean,\n *   weight: number,\n * }}\n */\nlet GroupDef;\n\n/**\n * The context node is a sparse tree over the DOM tree. Any node that needs\n * to manage and compute state can be attached to the context node tree. The\n * tree (mostly) automatically self-manages: the new nodes and DOM mutations\n * are auto-discovered or prompted.\n *\n * @package\n */\nexport class ContextNode {\n  /**\n   * Returns the existing context node or creates a new one.\n   *\n   * @param {!Node} node\n   * @return {!ContextNode}\n   */\n  static get(node) {\n    let contextNode = /** @type {!ContextNode|undefined} */ (node[NODE_PROP]);\n    if (!contextNode) {\n      contextNode = new ContextNode(node, null);\n      if (getMode().localDev || getMode().test) {\n        // The `Object.defineProperty({enumerable: false})` helps tests, but\n        // hurts performance. So this is only done in a dev/test modes.\n        Object.defineProperty(node, NODE_PROP, {\n          value: contextNode,\n          writable: false,\n          enumerable: false,\n          configurable: false,\n        });\n      } else {\n        node[NODE_PROP] = contextNode;\n      }\n    }\n    return contextNode;\n  }\n\n  /**\n   * Returns the closest available context node to the one specified. If the\n   * `node` has the context node, it's returned unless `includeSelf` is set as\n   * `false`.\n   *\n   * The DOM traversal goes at most as far as the root node (document,\n   * shadow root, document fragment) or as far as the DOM tree allows. The\n   * traversal follows the assigned shadow slots.\n   *\n   * Root nodes (document or shadow root) and AMP elements are auto-created\n   * during the traversal.\n   *\n   * @param {!Node} node The node from which to perform the search.\n   * @param {boolean=} includeSelf Whether the specified node itself should\n   * be included in the search. Defaults to `true`.\n   * @return {?ContextNode}\n   */\n  static closest(node, includeSelf = true) {\n    let n = node;\n    while (n) {\n      // Check if a node is a candidate to be returned.\n      if (n != node || includeSelf) {\n        if (n[NODE_PROP]) {\n          // Already a discovered node.\n          return /** @type {!ContextNode} */ (n[NODE_PROP]);\n        }\n        const {nodeType} = n;\n        if (nodeType == DOCUMENT_NODE || nodeType == FRAGMENT_NODE) {\n          // A context node is always created for a root. Due to this, a\n          // non-root element is always at least attached to a root. This\n          // allows for quick discovery and reattachment when new information\n          // becomes available.\n          return ContextNode.get(n);\n        }\n        if (nodeType == ELEMENT_NODE && n.tagName.startsWith(AMP_PREFIX)) {\n          // An AMP node will always have a context node backing it at some\n          // point.\n          return ContextNode.get(n);\n        }\n      }\n      // Navigate up the DOM tree. Notice that we do not automatically go over\n      // a root node boundary.\n      const assignedSlot =\n        /** @type {?Node|undefined} */ (n[ASSIGNED_SLOT_PROP]) ||\n        n.assignedSlot;\n      if (assignedSlot) {\n        n = assignedSlot;\n      } else {\n        n = n.parentNode;\n      }\n    }\n    // Only disconnected nodes will return `null` here.\n    return null;\n  }\n\n  /**\n   * Direct slot assignment. Works the same way as shadow slots, but does not\n   * require a shadow root. Automatically starts the discovery phase for the\n   * affected nodes.\n   *\n   * See `Element.assignedSlot` API.\n   *\n   * @param {!Node} node The target node.\n   * @param {!Node} slot The slot to which the target node is assigned.\n   */\n  static assignSlot(node, slot) {\n    if (node[ASSIGNED_SLOT_PROP] == slot) {\n      return;\n    }\n    node[ASSIGNED_SLOT_PROP] = slot;\n    discoverContained(node);\n  }\n\n  /**\n   * Unassigns the direct slot previously done by the `assignSlot` call.\n   * Automatically starts the discovery phase for the affected nodes.\n   *\n   * @param {!Node} node The target node.\n   * @param {!Node} slot The slot from which the target node is assigned.\n   */\n  static unassignSlot(node, slot) {\n    if (node[ASSIGNED_SLOT_PROP] != slot) {\n      return;\n    }\n    node[ASSIGNED_SLOT_PROP] = undefined;\n    discoverContained(node);\n  }\n\n  /**\n   * Reruns discovery on the children of the specified node, if any.\n   *\n   * @param {!Node} node\n   */\n  static rediscoverChildren(node) {\n    const contextNode = /** @type {!ContextNode|undefined} */ (node[NODE_PROP]);\n    const children = contextNode && contextNode.children;\n    if (children) {\n      children.forEach(discoverContextNode);\n    }\n  }\n\n  /**\n   * Creates the context node and automatically starts the discovery process.\n   *\n   * @param {!Node} node\n   * @param {?string} name\n   */\n  constructor(node, name) {\n    /** @const {!Node} */\n    this.node = node;\n\n    /** @const @package {?string} */\n    this.name = name;\n\n    /**\n     * Whether this node is a root. The Document DOM nodes are automatically\n     * considered as roots. But other nodes can become roots as well\n     * (e.g. shadow roots) via `setIsRoot()` API.\n     *\n     * @package {boolean}\n     */\n    this.isRoot = node.nodeType == DOCUMENT_NODE;\n\n    /**\n     * The root context node. Always available for a DOM node connected to a\n     * root node after the discovery phase.\n     *\n     * @package {?ContextNode}\n     */\n    this.root = this.isRoot ? this : null;\n\n    /**\n     * Parent should be mostly meaningless to most API clients, because\n     * it's an async concept: a parent context node can can be instantiated at\n     * any time and it doesn't mean that this node has to change. This is\n     * why the API is declared as package-private. However, it needs to be\n     * unobfuscated to avoid cross-binary issues.\n     *\n     * @package {?ContextNode}\n     */\n    this.parent = null;\n\n    /**\n     * See `parent` description.\n     *\n     * @package {?Array<!ContextNode>}\n     */\n    this.children = null;\n\n    /** @package {?Map<string, !GroupDef>} */\n    this.groups = null;\n\n    /** @package {!Values} */\n    this.values = new Values(this);\n\n    /** @private {?Map<*, !./component.Component>} */\n    this.components_ = null;\n\n    /** @private {boolean} */\n    this.parentOverridden_ = false;\n\n    /** @private {?Array<function(!ContextNode)>} */\n    this.cleanups_ = null;\n\n    /** @const @private {function()} */\n    this.scheduleDiscover_ = throttleTail(\n      this.discover_.bind(this),\n      setTimeout\n    );\n\n    // Shadow root: track slot changes.\n    if (node.nodeType == FRAGMENT_NODE) {\n      node.addEventListener('slotchange', (e) => {\n        const slot = /** @type {!HTMLSlotElement} */ (e.target);\n        // Rediscover newly assigned nodes.\n        const assignedNodes = slot.assignedNodes();\n        assignedNodes.forEach(discoverContained);\n        // Rediscover unassigned nodes.\n        const closest = ContextNode.closest(slot);\n        const closestChildren = closest && closest.children;\n        if (closestChildren) {\n          closestChildren.forEach(discoverContextNode);\n        }\n      });\n    }\n\n    this.discover();\n  }\n\n  /**\n   * Requests the discovery phase. Asynchronously finds the nearest parent for\n   * this node and its root. Roots and parents set directly via `setParent()`\n   * API are not discoverable.\n   */\n  discover() {\n    if (this.isDiscoverable()) {\n      this.scheduleDiscover_();\n    } else if (this.name && this.children) {\n      // Recursively discover the group's children.\n      this.children.forEach(discoverContextNode);\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected Used cross-binary.\n   */\n  isDiscoverable() {\n    return !this.isRoot && !this.parentOverridden_;\n  }\n\n  /**\n   * Sets (or unsets) the direct parent. If the parent is set, the node will no\n   * longer try to discover itself.\n   *\n   * @param {!ContextNode|!Node|null} parent\n   */\n  setParent(parent) {\n    const parentContext =\n      parent && parent.nodeType\n        ? ContextNode.get(/** @type {!Node} */ (parent))\n        : /** @type {?ContextNode} */ (parent);\n    this.updateTree_(parentContext, /* parentOverridden */ parent != null);\n  }\n\n  /**\n   * Designates (or undesignates) the node as a root node. If the node is\n   * designated as a root, it will no longer discover itself.\n   *\n   * @param {boolean} isRoot\n   */\n  setIsRoot(isRoot) {\n    this.isRoot = isRoot;\n    const newRoot = isRoot ? this : this.parent ? this.parent.root : null;\n    this.updateRoot(newRoot);\n  }\n\n  /**\n   * @param {?ContextNode} root\n   * @protected Used cross-binary.\n   */\n  updateRoot(root) {\n    devAssert(!root || root.isRoot);\n    const oldRoot = this.root;\n    if (root != oldRoot) {\n      // Call root cleanups.\n      const cleanups = this.cleanups_;\n      if (cleanups) {\n        cleanups.forEach((cleanup) => cleanup(this));\n        this.cleanups_ = null;\n      }\n\n      // The root has changed.\n      this.root = root;\n\n      // Make sure the tree changes have been reflected for values.\n      this.values.rootUpdated();\n\n      // Make sure the tree changes have been reflected for components.\n      const components = this.components_;\n      if (components) {\n        components.forEach((comp) => {\n          comp.rootUpdated();\n        });\n      }\n\n      // Propagate the root to the subtree.\n      if (this.children) {\n        this.children.forEach((child) => child.updateRoot(root));\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {function(!Node):boolean} match\n   * @param {number} weight\n   * @return {!ContextNode}\n   */\n  addGroup(name, match, weight) {\n    const groups = this.groups || (this.groups = new Map());\n    const {node, children} = this;\n    const cn = new ContextNode(node, name);\n    groups.set(name, {cn, match, weight});\n    cn.setParent(this);\n    if (children) {\n      children.forEach(discoverContextNode);\n    }\n    return cn;\n  }\n\n  /**\n   * @param {string} name\n   * @return {?ContextNode}\n   */\n  group(name) {\n    const {groups} = this;\n    const group = groups && groups.get(name);\n    return (group && group.cn) || null;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {?ContextNode}\n   * @protected\n   */\n  findGroup(node) {\n    const {groups} = this;\n    if (!groups) {\n      return null;\n    }\n    let found = null;\n    let maxWeight = Number.NEGATIVE_INFINITY;\n    groups.forEach(({cn, match, weight}) => {\n      if (match(node, this.node) && weight > maxWeight) {\n        found = cn;\n        maxWeight = weight;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Add or update a component with a specified ID. If component doesn't\n   * yet exist, it will be created using the specified factory. The use\n   * of factory is important to reduce bundling costs for context node.\n   *\n   * @param {*} id\n   * @param {./component.ComponentFactoryDef} factory\n   * @param {!Function} func\n   * @param {!Array<!ContextProp>} deps\n   * @param {*} input\n   */\n  mountComponent(id, factory, func, deps, input) {\n    const components = this.components_ || (this.components_ = new Map());\n    let comp = components.get(id);\n    if (!comp) {\n      comp = factory(id, this, func, deps);\n      components.set(id, comp);\n    }\n    comp.set(input);\n  }\n\n  /**\n   * Removes the component previously set with `mountComponent`.\n   *\n   * @param {*} id\n   */\n  unmountComponent(id) {\n    const components = this.components_;\n    const comp = components && components.get(id);\n    if (comp) {\n      comp.dispose();\n      components.delete(id);\n    }\n  }\n\n  /**\n   * Registers a root cleanup handler that will be called each time the\n   * root has changed or the node has been disconnected.\n   *\n   * @param {function(!ContextNode)} cleanup\n   */\n  pushCleanup(cleanup) {\n    const cleanups = this.cleanups_ || (this.cleanups_ = []);\n    pushIfNotExist(cleanups, cleanup);\n  }\n\n  /**\n   * Unregisters a cleanup handler previously registered with `pushCleanup`.\n   *\n   * @param {function(!ContextNode)} cleanup\n   */\n  popCleanup(cleanup) {\n    const cleanups = this.cleanups_;\n    if (cleanups) {\n      removeItem(cleanups, cleanup);\n    }\n  }\n\n  /**\n   * Discovers the parent and the root. Runs asynchronously via scheduler.\n   * @private\n   */\n  discover_() {\n    if (!this.isDiscoverable()) {\n      // The discoverability might have changed while this task was in the\n      // queue.\n      return;\n    }\n    const closestNode = ContextNode.closest(this.node, /* includeSelf */ false);\n    const parent =\n      (closestNode && closestNode.findGroup(this.node)) || closestNode;\n    this.updateTree_(parent, /* parentOverridden */ false);\n  }\n\n  /**\n   * @param {?ContextNode} parent\n   * @param {boolean} parentOverridden\n   * @private\n   */\n  updateTree_(parent, parentOverridden) {\n    this.parentOverridden_ = parentOverridden;\n\n    const oldParent = this.parent;\n    if (parent != oldParent) {\n      // The parent has changed.\n      this.parent = parent;\n\n      // Remove from the old parent.\n      if (oldParent && oldParent.children) {\n        removeItem(oldParent.children, this);\n      }\n\n      // Add to the new parent.\n      if (parent) {\n        const parentChildren = parent.children || (parent.children = []);\n        pushIfNotExist(parentChildren, this);\n\n        // Check if this node has been inserted in between the parent and\n        // it's other children.\n        // Since the new parent (`this`) is already known, this is a very\n        // fast operation.\n        for (let i = 0; i < parentChildren.length; i++) {\n          const child = parentChildren[i];\n          if (child != this && child.isDiscoverable()) {\n            child.discover();\n          }\n        }\n      }\n\n      this.values.parentUpdated();\n    }\n\n    // Check the root.\n    this.updateRoot(parent ? parent.root : null);\n  }\n}\n\n/**\n * Iterates over all context nodes that are contained within the specified\n * `node`. Only iterates over known context nodes.\n *\n * @param {!Node} node\n * @param {function(!ContextNode)} callback\n * @param {boolean=} includeSelf\n */\nfunction forEachContained(node, callback, includeSelf = true) {\n  const closest = ContextNode.closest(node, includeSelf);\n  if (!closest) {\n    return;\n  }\n  if (closest.node == node) {\n    callback(closest);\n  } else if (closest.children) {\n    closest.children.forEach((child) => {\n      if (node.contains(child.node)) {\n        callback(child);\n      }\n    });\n  }\n}\n\n/**\n * @param {!Node} node\n */\nfunction discoverContained(node) {\n  forEachContained(node, discoverContextNode);\n}\n\n/**\n * @param {!ContextNode} cn\n */\nfunction discoverContextNode(cn) {\n  cn.discover();\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {devAssert} from '../log';\n\nconst EMPTY_DEPS = [];\n\n/**\n * Creates the `ContextProp` type.\n *\n * @param {string} key\n * @param {{\n *   type: (!Object|undefined),\n *   deps: (!Array<!ContextProp>|undefined),\n *   recursive: (boolean|(function(!Array<T>):boolean)|undefined),\n *   compute: ((function(!Node, !Array<T>, ...*):(T|undefined))|undefined),\n *   defaultValue: (T|undefined),\n * }=} opt_spec\n * @return {!ContextProp<T>}\n * @template T\n */\nexport function contextProp(key, opt_spec) {\n  const prop = /** @type {!ContextProp<T>} */ ({\n    key,\n    // Default values.\n    type: null,\n    deps: EMPTY_DEPS,\n    recursive: false,\n    compute: null,\n    defaultValue: undefined,\n    // Overrides.\n    ...opt_spec,\n  });\n  devAssert(prop.deps.length == 0 || prop.compute);\n  return prop;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EMPTY_DEPS = [];\n\n/**\n * The following arguments are expected:\n * - a required component function.\n * - an optional array of `ContextProp` dependencies.\n * - an optional string key for a global component identifier.\n *\n * Returns the provided function with metadata attached to it.\n *\n * @param {!Array<!ContextProp>} deps\n * @param {function(...?):?} func\n * @param {string=} opt_key\n * @return {function(...?):?}\n */\nexport function withMetaData(deps, func, opt_key) {\n  return setMetaData(func, deps, opt_key);\n}\n\n/**\n * Returns the dependencies attached to the component function. If none\n * available, defaults to an empty array.\n *\n * @param {function(...?):?} func\n * @return {!Array<!ContextProp>}\n * @package\n */\nexport function getDeps(func) {\n  return func['deps'] || EMPTY_DEPS;\n}\n\n/**\n * Returns the component's ID. If none is available, defaults to the function's\n * identity.\n *\n * @param {function(...?):?} func\n * @return {*}\n * @package\n */\nexport function getId(func) {\n  return func['key'] || func;\n}\n\n/**\n * @param {!Function} func\n * @param {!Array<!ContextProp>|undefined} deps\n * @param {string|undefined} key\n * @return {function(...?):?}\n */\nfunction setMetaData(func, deps, key) {\n  if (deps) {\n    func['deps'] = deps;\n  }\n  if (key) {\n    func['key'] = key;\n  }\n  return func;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {areEqualOrdered} from '../utils/array';\nimport {devAssert} from '../log';\nimport {tryCallback} from './scheduler';\n\nconst EMPTY_DEPS = [];\n\n/**\n * @type {!./component.Component|undefined}\n */\nlet currentComponent;\n\n/**\n * Sets the component as a current component and executes the callback. Clears\n * out the current component after the callback is done.\n *\n * @param {!./component.Component} component\n * @param {function()} callback\n * @package\n */\nexport function withComponent(component, callback) {\n  currentComponent = component;\n  try {\n    callback();\n  } finally {\n    currentComponent = undefined;\n  }\n}\n\n/**\n * @return {!./component.Component}\n */\nfunction getComponent() {\n  return devAssert(currentComponent);\n}\n\n/**\n * A reusable reference value hook. Mostly the same as the React's `useHook`.\n *\n * @param {T} initialValue\n * @return {{current: T}}\n * @template T\n */\nexport function useRef(initialValue = undefined) {\n  return getComponent().allocRef(initialValue);\n}\n\n/**\n * Returns a callback with the component passed as the first argument. The\n * returned function has a stable identity, i.e. it doesn't change in the\n * lifetime of the component.\n *\n * @param {function(!./component.Component, ...?):?} callback\n * @return {function(...?):?}\n * @package\n */\nexport function useInternalCallbackWithComponent(callback) {\n  const ref = useRef();\n  if (!ref.current) {\n    const component = getComponent();\n    ref.current = callback.bind(null, component);\n  }\n  return ref.current;\n}\n\n/**\n * A hook to compute a persistent value. Mostly the same as the React's\n * `useMemo` API.\n *\n * @param {function():T} compute\n * @param {!Array} deps\n * @return {T}\n * @template T\n */\nexport function useMemo(compute, deps) {\n  const ref = useRef();\n  useSyncEffect(() => {\n    ref.current = compute();\n  }, deps);\n  return ref.current;\n}\n\n/**\n * Functions similarly to `useMemo`, but besides being able to return a computed\n * value, it also provides a cleanup callback.\n *\n * @param {function(!Node, ...?):({value: T, dispose: function()}|function())} factory\n * @param {!Array=} deps\n * @return {T}\n * @template T\n */\nexport function useDisposableMemo(factory, deps = undefined) {\n  deps = deps || EMPTY_DEPS;\n  const component = getComponent();\n  const ref = useRef();\n  useSyncEffect(() => {\n    const {value, dispose} = callFactory(\n      factory,\n      component.contextNode.node,\n      devAssert(deps)\n    );\n    ref.current = value;\n    return () => {\n      ref.current = undefined;\n      if (dispose) {\n        dispose();\n      }\n    };\n  }, deps);\n  return ref.current;\n}\n\n/**\n * Similar to the React's `useEffect`, but it's executed synchronously.\n * Another distinction: if the `deps` argument is not provided, it's assumed\n * to be an empty array.\n *\n * @param {function():(void|function())} callback\n * @param {!Array=} deps\n */\nexport function useSyncEffect(callback, deps = undefined) {\n  deps = deps || EMPTY_DEPS;\n  const component = getComponent();\n  const depRef = component.allocRef();\n  const cleanupRef = component.allocRef();\n  if (!depRef.current) {\n    // Mounting.\n    component.pushCleanup(() => {\n      depRef.current = undefined;\n      cleanupRef.current = undefined;\n    });\n  }\n\n  const changed = !depRef.current || !areEqualOrdered(depRef.current, deps);\n  if (!changed) {\n    return;\n  }\n\n  depRef.current = deps.slice(0);\n\n  // Cleanup.\n  const cleanup = cleanupRef.current;\n  if (cleanup) {\n    cleanupRef.current = null;\n    component.popCleanup(cleanup);\n    tryCallback(cleanup);\n  }\n\n  const newCleanup = callback();\n  if (newCleanup) {\n    cleanupRef.current = newCleanup;\n    component.pushCleanup(newCleanup);\n  }\n}\n\n/**\n * This hook returns a function that can be used to set a managed property. A\n * managed property can be set on the component's node or any other in the same\n * tree. When this component is removed, all managed properties are also\n * removed.\n *\n * See `setProp` for more info.\n *\n * @return {function(!ContextProp<T>, T, !Node=)}\n * @template T\n */\nexport function useSetProp() {\n  return useInternalCallbackWithComponent(setManagedProp);\n}\n\n/**\n * This hook returns a function that can be used to remove a managed property,\n * that was previously set by the `useSetProp`.\n *\n * See `removeProp` for more info.\n *\n * @return {function(!ContextProp, !Node=)}\n */\nexport function useRemoveProp() {\n  return useInternalCallbackWithComponent(removeManagedProp);\n}\n\n/**\n * @param {!./component.Component} component\n * @param {!ContextProp<T>} prop\n * @param {T} value\n * @param {!Node|undefined} node\n * @template T\n */\nfunction setManagedProp(component, prop, value, node) {\n  component.setProp(prop, value, node);\n}\n\n/**\n * @param {!./component.Component} component\n * @param {!ContextProp} prop\n * @param {!Node|undefined} node\n */\nfunction removeManagedProp(component, prop, node) {\n  component.removeProp(prop, node);\n}\n\n/**\n * @param {function(...?):?} factory\n * @param {!Node} node\n * @param {!Array} deps\n * @return {?}\n */\nfunction callFactory(factory, node, deps) {\n  switch (deps.length) {\n    case 0:\n      return factory(node);\n    case 1:\n      return factory(node, deps[0]);\n    case 2:\n      return factory(node, deps[0], deps[1]);\n    case 3:\n      return factory(node, deps[0], deps[1], deps[2]);\n    default:\n      return factory.apply(null, [node].concat(deps));\n  }\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ContextNode} from './node';\nimport {pushIfNotExist, removeItem} from '../utils/array';\nimport {throttleTail, tryCallback} from './scheduler';\nimport {withComponent} from './component-hooks';\n\nconst EMPTY_ARRAY = [];\nconst EMPTY_FUNC = () => {};\n\n/**\n * @typedef {function(*, !./node.ContextNode, !Function, !Array<ContextProp>):!Component}\n * @package\n *\n * The factory arguments are:\n * 1. An opaque ID value.\n * 2. The context node where component is attached.\n * 3. The component's function.\n * 4. An array of dependencies.\n */\nexport let ComponentFactoryDef;\n\n/**\n * The component holder. It encapsulates the component's dependencies, input,\n * internal state, and cleanup functions.\n *\n * @package\n */\nexport class Component {\n  /**\n   * @param {*} id An opaque component ID.\n   * @param {!./node.ContextNode} contextNode\n   * @param {!Function} func\n   * @param {!Array<!ContextProp>} deps\n   */\n  constructor(id, contextNode, func, deps) {\n    /** @package @const {*} */\n    this.id = id;\n\n    /** @package @const {!./node.ContextNode} */\n    this.contextNode = contextNode;\n\n    /** @private @const {!Function} */\n    this.func_ = func;\n\n    /** @private @const {!Array<!ContextProp>} */\n    this.deps_ = deps;\n\n    /**\n     * @private @const {!Array}\n     *\n     * Start with a pre-allocated array filled with `undefined`. The filling\n     * is important to ensure the correct `Array.every` execution.\n     */\n    this.depValues_ = deps.length > 0 ? deps.map(EMPTY_FUNC) : EMPTY_ARRAY;\n\n    /** @private @const {!Array<function(*)>} */\n    this.depSubscribers_ =\n      deps.length > 0\n        ? deps.map((unusedDep, index) => (value) => {\n            this.depValues_[index] = value;\n            this.update_();\n          })\n        : EMPTY_ARRAY;\n\n    /** @private {*|undefined} */\n    this.input_ = undefined;\n\n    /** @private {boolean} */\n    this.running_ = false;\n\n    /** @private {?Array<{current: ?}>} */\n    this.refs_ = null;\n\n    /** @private {number} */\n    this.refPointer_ = -1;\n\n    /** @private {?function()} */\n    this.runCleanup_ = null;\n\n    /** @private {?Array<function()>} */\n    this.cleanups_ = null;\n\n    /** @private {?Map<!./node.ContextNode, !Array<!ContextProp>>} */\n    this.childProps_ = null;\n\n    /** @private {?Map<!./node.ContextNode, !Array<*>>} */\n    this.childComps_ = null;\n\n    // Schedulers.\n    /** @private @const {function()} */\n    this.update_ = throttleTail(this.update_.bind(this), setTimeout);\n\n    /** @private @const {function()} */\n    this.run_ = this.run_.bind(this);\n\n    /** @private @const {function(!ContextNode)} */\n    this.cleanupChild_ = this.cleanupChild_.bind(this);\n\n    // Subscribe to all dependencies.\n    if (deps.length > 0) {\n      const {values} = this.contextNode;\n      deps.forEach((dep, index) =>\n        values.subscribe(dep, this.depSubscribers_[index])\n      );\n    }\n\n    // Run the first time.\n    if (this.isConnected_()) {\n      this.update_();\n    }\n  }\n\n  /**\n   * Called when the component is completely discarded, for instance via\n   * `unmountComponent` API.\n   */\n  dispose() {\n    // Unsubscribe from all dependencies.\n    if (this.deps_.length > 0) {\n      const {values} = this.contextNode;\n      this.deps_.forEach((dep, index) =>\n        values.unsubscribe(dep, this.depSubscribers_[index])\n      );\n    }\n\n    this.cleanup_(/* cleanupChildren */ true);\n  }\n\n  /**\n   * Called when the node's root has changed. It can be a different root or\n   * the node can be disconnected entirely.\n   */\n  rootUpdated() {\n    const isConnected = this.isConnected_();\n    this.cleanup_(/* cleanupChildren */ !isConnected);\n    if (isConnected) {\n      this.update_();\n    }\n  }\n\n  /**\n   * Sets the component's input.\n   * @param {*} input\n   */\n  set(input) {\n    if (this.input_ !== input) {\n      this.input_ = input;\n      if (this.isConnected_()) {\n        this.update_();\n      }\n    }\n  }\n\n  /**\n   * Allocates a new reference in the component's internal state.\n   *\n   * See `useRef` hook for more info.\n   *\n   * @param {T} def\n   * @return {{current: T}}\n   * @template T\n   */\n  allocRef(def = undefined) {\n    const refs = this.refs_ || (this.refs_ = []);\n    const pointer = ++this.refPointer_;\n    return refs[pointer] || (refs[pointer] = {current: def});\n  }\n\n  /**\n   * Register a cleanup handler that will be called when the component is\n   * cleaned up, either due to the node being disconnected, or the component\n   * being removed.\n   *\n   * @param {function()} cleanup\n   */\n  pushCleanup(cleanup) {\n    const cleanups = this.cleanups_ || (this.cleanups_ = []);\n    pushIfNotExist(cleanups, cleanup);\n  }\n\n  /**\n   * Unregisters a cleanup handler previously registered with `pushCleanup`.\n   *\n   * @param {function()} cleanup\n   */\n  popCleanup(cleanup) {\n    const cleanups = this.cleanups_;\n    if (cleanups) {\n      removeItem(cleanups, cleanup);\n    }\n  }\n\n  /**\n   * Sets the child prop on this or another node.\n   *\n   * @param {!ContextProp<T>} prop\n   * @param {T} value\n   * @param {!Node=} node\n   * @template T\n   * @package\n   */\n  setProp(prop, value, node = undefined) {\n    const contextNode = node ? ContextNode.get(node) : this.contextNode;\n\n    // Set the prop.\n    contextNode.values.set(prop, /* setter */ this, value);\n\n    // Track the prop on the node.\n    const childProps = this.childProps_ || (this.childProps_ = new Map());\n    let props = childProps && childProps.get(contextNode);\n    if (!props) {\n      if (contextNode != this.contextNode) {\n        // The first prop or a component set on another (not this) node:\n        // register the cleanup handler.\n        this.maybeRegisterChildCleanup_(contextNode);\n      }\n      props = [];\n      childProps.set(contextNode, props);\n    }\n    pushIfNotExist(props, prop);\n  }\n\n  /**\n   * Removes the child prop previously set by the `setProp`.\n   *\n   * @param {!ContextProp<T>} prop\n   * @param {!Node=} node\n   * @template T\n   * @package\n   */\n  removeProp(prop, node = undefined) {\n    const contextNode = node ? ContextNode.get(node) : this.contextNode;\n\n    // Remove the prop.\n    contextNode.values.remove(prop, /* setter */ this);\n\n    // Untrack the prop.\n    const childProps = this.childProps_;\n    const props = childProps && childProps.get(contextNode);\n    if (props) {\n      removeItem(props, prop);\n      if (props.length == 0 && contextNode != this.contextNode) {\n        childProps.delete(contextNode);\n        this.maybeUnregisterChildCleanup_(contextNode);\n      }\n    }\n  }\n\n  /**\n   * Sets the child component on this or another node.\n   *\n   * @param {*} id\n   * @param {ComponentFactoryDef} factory\n   * @param {!Function} func\n   * @param {!Array<!ContextProp>} deps\n   * @param {*} input\n   * @param {!Node=} node\n   * @package\n   */\n  mountComponent(id, factory, func, deps, input, node = undefined) {\n    const contextNode = node ? ContextNode.get(node) : this.contextNode;\n\n    // Set the component.\n    contextNode.mountComponent(id, factory, func, deps, input);\n\n    // Track the child component on the node.\n    const childComps = this.childComps_ || (this.childComps_ = new Map());\n    let comps = childComps && childComps.get(contextNode);\n    if (!comps) {\n      if (contextNode != this.contextNode) {\n        // The first comp set on another (not this) node: register the cleanup\n        // handler.\n        this.maybeRegisterChildCleanup_(contextNode);\n      }\n      comps = [];\n      childComps.set(contextNode, comps);\n    }\n    pushIfNotExist(comps, id);\n  }\n\n  /**\n   * Removes the child component previously set by the `mountComponent`.\n   *\n   * @param {*} id\n   * @param {!Node=} node\n   * @package\n   */\n  unmountComponent(id, node = undefined) {\n    const contextNode = node ? ContextNode.get(node) : this.contextNode;\n\n    // Remove the component.\n    contextNode.unmountComponent(id);\n\n    // Untrack the child component.\n    const childComps = this.childComps_;\n    const comps = childComps && childComps.get(contextNode);\n    if (comps) {\n      removeItem(comps, id);\n      if (comps.length == 0 && contextNode != this.contextNode) {\n        childComps.delete(contextNode);\n        this.maybeUnregisterChildCleanup_(contextNode);\n      }\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @private\n   */\n  isConnected_() {\n    return !!this.contextNode.root;\n  }\n\n  /** @private */\n  update_() {\n    if (!this.isConnected_()) {\n      // The node was disconnected at some point.\n      return;\n    }\n    const running = this.depValues_.every(isDefined);\n    if (running) {\n      this.running_ = true;\n      this.refPointer_ = -1;\n      withComponent(this, this.run_);\n    } else if (this.running_) {\n      this.running_ = false;\n      this.cleanup_(/* cleanupChildren */ false);\n    }\n  }\n\n  /** @private */\n  run_() {\n    // Cleanup the previous run.\n    if (this.runCleanup_) {\n      tryCallback(this.runCleanup_);\n      this.runCleanup_ = null;\n    }\n\n    // Run the component.\n    const func = this.func_;\n    this.runCleanup_ = func(this, this.input_, this.depValues_);\n  }\n\n  /**\n   * @param {boolean} cleanupChildren\n   * @private\n   */\n  cleanup_(cleanupChildren) {\n    // Cleanup children.\n    if (cleanupChildren) {\n      const childProps = this.childProps_;\n      if (childProps) {\n        this.childProps_ = null;\n        childProps.forEach((props, contextNode) => {\n          props.forEach((prop) => {\n            contextNode.values.remove(prop, /* setter */ this);\n          });\n        });\n      }\n\n      const childComps = this.childComps_;\n      if (childComps) {\n        this.childComps_ = null;\n        childComps.forEach((comps, contextNode) => {\n          comps.forEach((id) => {\n            contextNode.unmountComponent(id);\n          });\n        });\n      }\n    }\n\n    // The last run's cleanup.\n    if (this.runCleanup_) {\n      tryCallback(this.runCleanup_);\n      this.runCleanup_ = null;\n    }\n\n    // Hook cleanups.\n    const cleanups = this.cleanups_;\n    if (cleanups) {\n      for (let i = 0; i < cleanups.length; i++) {\n        tryCallback(cleanups[i]);\n      }\n      this.cleanups_.length = 0;\n    }\n  }\n\n  /**\n   * @param {!./node.ContextNode} child\n   * @private\n   */\n  maybeRegisterChildCleanup_(child) {\n    const {childProps_: childProps, childComps_: childComps} = this;\n    if (\n      (!childProps || !childProps.has(child)) &&\n      (!childComps || !childComps.has(child))\n    ) {\n      child.pushCleanup(this.cleanupChild_);\n    }\n  }\n\n  /**\n   * @param {!./node.ContextNode} child\n   * @private\n   */\n  maybeUnregisterChildCleanup_(child) {\n    const {childProps_: childProps, childComps_: childComps} = this;\n    if (\n      (!childProps || !childProps.has(child)) &&\n      (!childComps || !childComps.has(child))\n    ) {\n      child.popCleanup(this.cleanupChild_);\n    }\n  }\n\n  /**\n   * @param {!./node.ContextNode} child\n   * @private\n   */\n  cleanupChild_(child) {\n    const childProps = this.childProps_;\n    const props = childProps && childProps.get(child);\n    if (props) {\n      childProps.delete(child);\n      props.forEach((prop) => child.values.remove(prop, /* setter */ this));\n    }\n\n    const childComps = this.childComps_;\n    const comps = childComps && childComps.get(child);\n    if (comps) {\n      childComps.delete(child);\n      comps.forEach((id) => child.unmountComponent(id));\n    }\n  }\n}\n\n/**\n * Whether the value is defined.\n *\n * This function only exists to avoid function allocation when calling\n * `Array.every()` and `Array.some()`.\n *\n * @param {*} v\n * @return {boolean}\n */\nfunction isDefined(v) {\n  return v !== undefined;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from './component';\nimport {ContextNode} from './node';\nimport {arrayOrSingleItemToArray} from '../types';\nimport {getDeps, getId} from './component-meta';\nimport {useInternalCallbackWithComponent} from './component-hooks';\n\nconst NO_INPUT = undefined;\n\n/**\n * Installs or updates the component specified by its function. The component\n * function can be optionally annotated with `withMetaData` to provide\n * dependencies. Some key points:\n * - The component is only called when all dependencies are satisfied.\n * - The component is only called when either an input or any dependencies\n *   change.\n * - A component can optionally return a cleanup function.\n *\n * @param {!Node} node\n * @param {function(!Node, I, ...?)} func\n * @param {I} input\n * @template I\n */\nexport function mountComponent(node, func, input = undefined) {\n  const id = getId(func);\n  const deps = getDeps(func);\n  const contextNode = ContextNode.get(node);\n  contextNode.mountComponent(id, componentWithInputFactory, func, deps, input);\n}\n\n/**\n * Removes the component that has been previously installed with the\n * `mountComponent`.\n *\n * @param {!Node} node\n * @param {function(...?)} func\n */\nexport function unmountComponent(node, func) {\n  const id = getId(func);\n  const contextNode = ContextNode.get(node);\n  contextNode.unmountComponent(id);\n}\n\n/**\n * Subscribes to the specified dependencies. The key API points:\n * - The subscriber is only called when all its dependencies are satisfied.\n * - If all its dependencies are satisfied at the time the subscriber is added,\n *   it's called right away.\n * - The subscriber is called whenever any of its dependencies change.\n * - A subscriber can optionally return a cleanup function.\n *\n * @param {!Node} node\n * @param {!ContextProp|!Array<!ContextProp>} deps\n * @param {function(...?)} callback\n */\nexport function subscribe(node, deps, callback) {\n  deps = arrayOrSingleItemToArray(deps);\n  const id = getId(callback);\n  const contextNode = ContextNode.get(node);\n  contextNode.mountComponent(id, subscriberFactory, callback, deps, NO_INPUT);\n}\n\n/**\n * Removes the subscriber prevoiously registered with `subscribe` API.\n *\n * @param {!Node} node\n * @param {function(...?)} callback\n */\nexport function unsubscribe(node, callback) {\n  unmountComponent(node, callback);\n}\n\n/**\n * This hook returns a function that can be used to set a managed component. A\n * managed component can be set on this component's node or any other in the\n * same tree. When this component is removed, all managed components are also\n * removed.\n *\n * See `mountComponent` for more info.\n *\n * @return {function(function(!Node, I, ...?), I, !Node=)}\n * @template I\n */\nexport function useMountComponent() {\n  return useInternalCallbackWithComponent(mountManagedComponent);\n}\n\n/**\n * This hook returns a function that can be used to remove a managed component,\n * that was previously set by the `useMountComponent`.\n *\n * See `unmountComponent` for more info.\n *\n * @return {function(function(...?), !Node=)}\n */\nexport function useUnmountComponent() {\n  return useInternalCallbackWithComponent(unmountManagedComponent);\n}\n\n/**\n * This hook returns a function that can be used to set a managed subscriber. A\n * managed subscriber can be set on this component's node or any other in the\n * same tree. When this component is removed, all managed subscribers are also\n * removed.\n *\n * See `subscribe` for more info.\n *\n * @return {function((!ContextProp|!Array<!ContextProp>), function(...?), !Node=)}\n */\nexport function useSubscribe() {\n  return useInternalCallbackWithComponent(subscribeManaged);\n}\n\n/**\n * This hook returns a function that can be used to remove a managed subscriber,\n * that was previously set by the `useSubscribe`.\n *\n * See `unsubscribe` for more info.\n *\n * @return {function(function(...?), !Node=)}\n */\nexport function useUnsubscribe() {\n  return useInternalCallbackWithComponent(unmountManagedComponent);\n}\n\n/**\n * @param {!Component} component\n * @param {function(!Node, I, ...?)} func\n * @param {I} input\n * @param {!Node|undefined} node\n * @template I\n */\nfunction mountManagedComponent(component, func, input, node) {\n  const id = getId(func);\n  const deps = getDeps(func);\n  component.mountComponent(\n    id,\n    componentWithInputFactory,\n    func,\n    deps,\n    input,\n    node\n  );\n}\n\n/**\n * @param {!Component} component\n * @param {function(...?)} func\n * @param {!Node} node\n */\nfunction unmountManagedComponent(component, func, node) {\n  const id = getId(func);\n  component.unmountComponent(id, node);\n}\n\n/**\n * @param {!Component} component\n * @param {!ContextProp|!Array<!ContextProp>} deps\n * @param {function(...?)} callback\n * @param {!Node|undefined} node\n */\nfunction subscribeManaged(component, deps, callback, node) {\n  deps = arrayOrSingleItemToArray(deps);\n  const id = getId(callback);\n  component.mountComponent(\n    id,\n    subscriberFactory,\n    callback,\n    deps,\n    NO_INPUT,\n    node\n  );\n}\n\n/**\n * Creates an input-based component.\n *\n * @param {*} id\n * @param {!./node.ContextNode} contextNode\n * @param {function(!Node, ...?)} func\n * @param {!Array<!ContextProp>} deps\n * @return {!./component.Component}\n */\nfunction componentWithInputFactory(id, contextNode, func, deps) {\n  const comp = (component, input, deps) => {\n    const {node} = component.contextNode;\n    switch (deps.length) {\n      case 0:\n        return func(node, input);\n      case 1:\n        return func(node, input, deps[0]);\n      case 2:\n        return func(node, input, deps[0], deps[1]);\n      case 3:\n        return func(node, input, deps[0], deps[1], deps[2]);\n      default:\n        return func.apply(null, [node, input].concat(deps));\n    }\n  };\n  return new Component(id, contextNode, comp, deps);\n}\n\n/**\n * Creates a subscriber.\n *\n * @param {*} id\n * @param {!./node.ContextNode} contextNode\n * @param {function(...?)} callback\n * @param {!Array<!ContextProp>} deps\n * @return {!./component.Component}\n */\nfunction subscriberFactory(id, contextNode, callback, deps) {\n  const comp = (component, unusedInput, deps) => {\n    switch (deps.length) {\n      case 0:\n        return callback();\n      case 1:\n        return callback(deps[0]);\n      case 2:\n        return callback(deps[0], deps[1]);\n      case 3:\n        return callback(deps[0], deps[1], deps[2]);\n      default:\n        return callback.apply(null, deps);\n    }\n  };\n  return new Component(id, contextNode, comp, deps);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ContextNode} from './node';\n\nexport {contextProp} from './prop';\nexport {withMetaData} from './component-meta';\nexport {\n  mountComponent,\n  unmountComponent,\n  subscribe,\n  unsubscribe,\n  useMountComponent,\n  useUnmountComponent,\n  useSubscribe,\n  useUnsubscribe,\n} from './component-install';\nexport {\n  useRef,\n  useMemo,\n  useDisposableMemo,\n  useSyncEffect,\n  useSetProp,\n  useRemoveProp,\n} from './component-hooks';\n\n/**\n * Direct slot assignment. Works the same way as shadow slots, but does not\n * require a shadow root. Automatically starts the discovery phase for the\n * affected nodes.\n *\n * See `Element.assignedSlot` API.\n *\n * @param {!Node} node The target node.\n * @param {!Node} slot The slot to which the target node is assigned.\n */\nexport function assignSlot(node, slot) {\n  ContextNode.assignSlot(node, slot);\n}\n\n/**\n * Unassigns the direct slot previously done by the `assignSlot` call.\n * Automatically starts the discovery phase for the affected nodes.\n *\n * @param {!Node} node The target node.\n * @param {!Node} slot The slot from which the target node is assigned.\n */\nexport function unassignSlot(node, slot) {\n  ContextNode.unassignSlot(node, slot);\n}\n\n/**\n * Sets (or unsets) the direct parent. If the parent is set, the node will no\n * longer try to discover itself.\n *\n * @param {!Node} node\n * @param {!Node|null} parent\n */\nexport function setParent(node, parent) {\n  ContextNode.get(node).setParent(parent);\n}\n\n/**\n * @param {!Node} node\n */\nexport function discover(node) {\n  ContextNode.get(node).discover();\n}\n\n/**\n * Designates (or undesignates) the node as a root node. If the node is\n * designated as a root, it will no longer discover itself.\n *\n * @param {!Node} node\n * @param {boolean} isRoot\n */\nexport function setIsRoot(node, isRoot) {\n  ContextNode.get(node).setIsRoot(isRoot);\n}\n\n/**\n * Reruns discovery on the children of the specified node, if any.\n *\n * @param {!Node} node\n */\nexport function rediscoverChildren(node) {\n  ContextNode.rediscoverChildren(node);\n}\n\n/**\n * Sets the property's input value. This is analagous to a CSS specified\n * value. Several values for the same property can be set on a node - one\n * per each setter. A repeated call for the same setter overwrites a\n * previously set input. This is similar to how the same CSS property can be\n * set in a stylesheet using different classes. The property computation\n * decides how to treat several values. For instance:\n * - A property can pick the first set input value (e.g. `font-size`).\n * - A property can pick the min/max set input value (e.g. `priority`).\n * - A property can reduce all values using `AND` (e.g. `renderable`).\n *\n * Once the input is set, the recalculation is rescheduled asynchronously.\n * All dependent properties are also recalculated.\n *\n * @param {!Node} node The target node.\n * @param {!ContextProp<T>} prop\n * @param {*} setter\n * @param {T} value\n * @template T\n */\nexport function setProp(node, prop, setter, value) {\n  ContextNode.get(node).values.set(prop, setter, value);\n}\n\n/**\n * Unsets the input value for the specified property and setter.\n * See `setProp()` for more info.\n *\n * @param {!Node} node The target node.\n * @param {!ContextProp} prop\n * @param {*} setter\n */\nexport function removeProp(node, prop, setter) {\n  ContextNode.get(node).values.remove(prop, setter);\n}\n\n/**\n * @param {!Node} node\n * @param {string} name\n * @param {function(!Node):boolean} match\n * @param {number=} weight\n */\nexport function addGroup(node, name, match, weight = 0) {\n  ContextNode.get(node).addGroup(name, match, weight);\n}\n\n/**\n * @param {!Node} node\n * @param {string} groupName\n * @param {!ContextProp<T>} prop\n * @param {*} setter\n * @param {T} value\n * @template T\n */\nexport function setGroupProp(node, groupName, prop, setter, value) {\n  ContextNode.get(node).group(groupName).values.set(prop, setter, value);\n}\n\n/**\n * @param {!Node} node\n * @param {string} groupName\n * @param {!ContextProp} prop\n * @param {*} setter\n */\nexport function removeGroupProp(node, groupName, prop, setter) {\n  ContextNode.get(node).group(groupName).values.remove(prop, setter);\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CarouselContext} from './carousel-context';\nimport {contextProp} from '../../../src/context';\n\nconst CarouselContextProp = contextProp('base-carousel:1.0:context', {\n  type: CarouselContext,\n  recursive: true,\n  defaultValue: null,\n});\n\nexport {CarouselContextProp};\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common AMP events.\n * @enum {string}\n */\nexport const AmpEvents = {\n  DOM_UPDATE: 'amp:dom-update',\n  FORM_DIRTINESS_CHANGE: 'amp:form-dirtiness-change',\n  FORM_VALUE_CHANGE: 'amp:form-value-change',\n  VISIBILITY_CHANGE: 'amp:visibilitychange', // https://github.com/ampproject/amphtml/blob/master/ads/README.md#page-visibility\n  // The following codes are only used for testing.\n  // TODO(choumx): Move these to a separate enum so they can be DCE'd.\n  ATTACHED: 'amp:attached',\n  STUBBED: 'amp:stubbed',\n  LOAD_START: 'amp:load-start',\n  LOAD_END: 'amp:load-end',\n  ERROR: 'amp:error',\n  SIZE_CHANGED: 'amp:size-changed',\n  UNLOAD: 'amp:unload',\n};\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Loading, reducer as loadingReducer} from '../loading';\nimport {contextProp} from '../context';\n\n/**\n * Defines whether a DOM subtree can be currently seen by the user. A subtree\n * can be not renderable due `display: none`, or `hidden` attribute, unslotted\n * in shadow DOM, or because a parent component knows for certain that this\n * subtree cannot be seen by the user without some active interaction.\n *\n * Default is `true`.\n *\n * @const {!ContextProp<boolean>}\n */\nconst CanRender = contextProp('CanRender', {\n  defaultValue: true,\n  recursive: (inputs) => inputs.reduce(andReducer),\n  compute: (contextNode, inputs, parentValue) =>\n    (parentValue && inputs.reduce(andReducer, true)) || false,\n});\n\n/**\n * Defines whether a DOM subtree can be currently played or animated. If a\n * a subtree not renderable (`canRender == false`), it also cannot be played.\n * But even if a subtree is renderable, a parent component may decide that\n * playback should not be possible.\n *\n * Default is `true`.\n *\n * @const {!ContextProp<boolean>}\n */\nconst CanPlay = contextProp('CanPlay', {\n  defaultValue: true,\n  recursive: (inputs) => inputs.reduce(andReducer),\n  deps: [CanRender],\n  compute: (contextNode, inputs, parentValue, canRender) =>\n    (canRender && parentValue && inputs.reduce(andReducer, true)) || false,\n});\n\n/**\n * The default `Loading` instruction for a subtree. See `Loading` for the set\n * of possible values. Non-renderable subtrees automatically get a value of\n * \"lazy\".\n *\n * Default is \"auto\".\n *\n * @const {!ContextProp<!Loading>}\n */\nconst LoadingProp = contextProp('Loading', {\n  defaultValue: Loading.AUTO,\n  recursive: true,\n  deps: [CanRender],\n  compute: (contextNode, inputs, parentValue, canRender) =>\n    loadingReducer(\n      canRender ? Loading.AUTO : Loading.LAZY,\n      loadingReducer(\n        parentValue || Loading.AUTO,\n        inputs.reduce(loadingReducer, Loading.AUTO)\n      )\n    ),\n});\n\n/**\n * @param {T} acc\n * @param {T} value\n * @return {T}\n * @template T\n */\nconst andReducer = (acc, value) => acc && value;\n\nexport {CanRender, CanPlay, LoadingProp};\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Registration and getter functions for AMP services.\n *\n * Invariant: Service getters never return null for registered services.\n */\n\nimport {Deferred} from './utils/promise';\nimport {dev, devAssert} from './log';\nimport {toWin} from './types';\n\n/**\n * Holds info about a service.\n * - obj: Actual service implementation when available.\n * - promise: Promise for the obj.\n * - resolve: Function to resolve the promise with the object.\n * - context: Argument for ctor, either a window or an ampdoc.\n * - ctor: Function that constructs and returns the service.\n * @typedef {{\n *   obj: (?Object),\n *   promise: (?Promise),\n *   resolve: (?function(!Object)),\n *   reject: (?function((*))),\n *   context: (?Window|?./service/ampdoc-impl.AmpDoc),\n *   ctor: (?function(new:Object, !Window)|\n *          ?function(new:Object, !./service/ampdoc-impl.AmpDoc)),\n * }}\n */\nlet ServiceHolderDef;\n\n/**\n * This interface provides a `dispose` method that will be called by\n * runtime when a service needs to be disposed of.\n * @interface\n */\nexport class Disposable {\n  /**\n   * Instructs the service to release any resources it might be holding. Can\n   * be called only once in the lifecycle of a service.\n   */\n  dispose() {}\n}\n\n/**\n * Installs a service override on amp-doc level.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n * @param {!Object} service The service.\n */\nexport function installServiceInEmbedDoc(ampdoc, id, service) {\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ true\n  );\n}\n\n/**\n * Installs a service override in the scope of an embedded window.\n * @param {!Window} embedWin\n * @param {string} id\n * @param {function(new:Object, !Window)} constructor\n */\nexport function registerServiceBuilderInEmbedWin(embedWin, id, constructor) {\n  registerServiceInternal(\n    embedWin,\n    embedWin,\n    id,\n    constructor,\n    /* override */ true\n  );\n}\n\n/**\n * Registers a service given a class to be used as implementation.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {function(new:Object, !Window)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilder(win, id, constructor, opt_instantiate) {\n  win = getTopWindow(win);\n  registerServiceInternal(win, win, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(win, id);\n  }\n}\n\n/**\n * Returns a service and registers it given a class to be used as\n * implementation.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id of the service.\n * @param {function(new:Object, !./service/ampdoc-impl.AmpDoc)} constructor\n * @param {boolean=} opt_instantiate Whether to immediately create the service\n */\nexport function registerServiceBuilderForDoc(\n  nodeOrDoc,\n  id,\n  constructor,\n  opt_instantiate\n) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  registerServiceInternal(holder, ampdoc, id, constructor);\n  if (opt_instantiate) {\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * Reject a service promise.\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @param {string} id\n * @param {*} error\n */\nexport function rejectServicePromiseForDoc(nodeOrDoc, id, error) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  rejectServicePromiseInternal(holder, id, error);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). Users\n * should typically wrap this as a special purpose function (e.g.\n * `Services.vsyncFor(win)`) for type safety and because the factory should not\n * be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getService(win, id) {\n  win = getTopWindow(win);\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and window (a per-window singleton). But\n * it looks in the immediate window scope, not the top-level window.\n * @param {!Window} win\n * @param {string} id of the service.\n * @template T\n * @return {T}\n */\nexport function getServiceInEmbedWin(win, id) {\n  return getServiceInternal(win, id);\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. `Services.vsyncFor(win)`) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nexport function getServicePromise(win, id) {\n  return getServicePromiseInternal(win, id);\n}\n\n/**\n * Returns a service or null with the given id.\n * @param {!Window} win\n * @param {string} id\n * @return {?Object} The service.\n */\nexport function getExistingServiceOrNull(win, id) {\n  win = getTopWindow(win);\n  if (isServiceRegistered(win, id)) {\n    return getServiceInternal(win, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Like getServicePromise but returns null if the service was never registered.\n * @param {!Window} win\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNull(win, id) {\n  return getServicePromiseOrNullInternal(win, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * Expects service `id` to be registered.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {T}\n * @template T\n */\nexport function getServiceForDoc(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  return getServiceInternal(holder, id);\n}\n\n/**\n * Returns a service for the given id and ampdoc (a per-ampdoc singleton).\n * If service `id` is not registered, returns null.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Object}\n */\nexport function getServiceForDocOrNull(elementOrAmpDoc, id) {\n  const ampdoc = getAmpdoc(elementOrAmpDoc);\n  const holder = getAmpdocServiceHolder(ampdoc);\n  if (isServiceRegistered(holder, id)) {\n    return getServiceInternal(holder, id);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns a promise for a service for the given id and ampdoc. Also expects\n * a service that has the actual implementation. The promise resolves when\n * the implementation loaded.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {!Promise<!Object>}\n */\nexport function getServicePromiseForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseInternal(getAmpdocServiceHolder(elementOrAmpDoc), id);\n}\n\n/**\n * Like getServicePromiseForDoc but returns null if the service was never\n * registered for this ampdoc.\n * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n * @param {string} id\n * @return {?Promise<!Object>}\n */\nexport function getServicePromiseOrNullForDoc(elementOrAmpDoc, id) {\n  return getServicePromiseOrNullInternal(\n    getAmpdocServiceHolder(elementOrAmpDoc),\n    id\n  );\n}\n\n/**\n * Set the parent and top windows on a child window (friendly iframe).\n * @param {!Window} win\n * @param {!Window} parentWin\n */\nexport function setParentWindow(win, parentWin) {\n  win.__AMP_PARENT = parentWin;\n  win.__AMP_TOP = getTopWindow(parentWin);\n}\n\n/**\n * Returns the parent window for a child window (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getParentWindow(win) {\n  return win.__AMP_PARENT || win;\n}\n\n/**\n * Returns the top window where AMP Runtime is installed for a child window\n * (friendly iframe).\n * @param {!Window} win\n * @return {!Window}\n */\nexport function getTopWindow(win) {\n  return win.__AMP_TOP || (win.__AMP_TOP = win);\n}\n\n/**\n * Returns the parent \"friendly\" iframe if the node belongs to a child window.\n * @param {!Node} node\n * @param {!Window=} opt_topWin\n * @return {?HTMLIFrameElement}\n */\nexport function getParentWindowFrameElement(node, opt_topWin) {\n  const childWin = (node.ownerDocument || node).defaultView;\n  const topWin = opt_topWin || getTopWindow(childWin);\n  if (childWin && childWin != topWin && getTopWindow(childWin) == topWin) {\n    try {\n      return /** @type {?HTMLIFrameElement} */ (childWin.frameElement);\n    } catch (e) {\n      // Ignore the error.\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc}\n */\nexport function getAmpdoc(nodeOrDoc) {\n  if (nodeOrDoc.nodeType) {\n    const win = toWin(\n      /** @type {!Document} */ (nodeOrDoc.ownerDocument || nodeOrDoc)\n        .defaultView\n    );\n    return getAmpdocService(win).getAmpDoc(/** @type {!Node} */ (nodeOrDoc));\n  }\n  return /** @type {!./service/ampdoc-impl.AmpDoc} */ (nodeOrDoc);\n}\n\n/**\n * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrDoc\n * @return {!./service/ampdoc-impl.AmpDoc|!Window}\n */\nfunction getAmpdocServiceHolder(nodeOrDoc) {\n  const ampdoc = getAmpdoc(nodeOrDoc);\n  return ampdoc.isSingleDoc() ? ampdoc.win : ampdoc;\n}\n\n/**\n * This is essentially a duplicate of `ampdoc.js`, but necessary to avoid\n * circular dependencies.\n * @param {!Window} win\n * @return {!./service/ampdoc-impl.AmpDocService}\n */\nfunction getAmpdocService(win) {\n  return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n    win,\n    'ampdoc'\n  ));\n}\n\n/**\n * Get service `id` from `holder`. Assumes the service\n * has already been registered.\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {Object}\n */\nfunction getServiceInternal(holder, id) {\n  devAssert(\n    isServiceRegistered(holder, id),\n    `Expected service ${id} to be registered`\n  );\n  const services = getServices(holder);\n  const s = services[id];\n  if (!s.obj) {\n    devAssert(s.ctor, `Service ${id} registered without ctor nor impl.`);\n    devAssert(s.context, `Service ${id} registered without context.`);\n    s.obj = new s.ctor(s.context);\n    devAssert(s.obj, `Service ${id} constructed to null.`);\n    s.ctor = null;\n    s.context = null;\n    // The service may have been requested already, in which case we have a\n    // pending promise we need to fulfill.\n    if (s.resolve) {\n      s.resolve(s.obj);\n    }\n  }\n  return s.obj;\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {!Window|!./service/ampdoc-impl.AmpDoc} context Win or AmpDoc.\n * @param {string} id of the service.\n * @param {?function(new:Object, !Window)|?function(new:Object, !./service/ampdoc-impl.AmpDoc)} ctor Constructor function to new the service. Called with context.\n * @param {boolean=} opt_override\n * @param {boolean=} opt_adopted\n */\nfunction registerServiceInternal(\n  holder,\n  context,\n  id,\n  ctor,\n  opt_override,\n  opt_adopted\n) {\n  const services = getServices(holder);\n  let s = services[id];\n\n  if (!s) {\n    s = services[id] = {\n      obj: null,\n      promise: null,\n      resolve: null,\n      reject: null,\n      context: null,\n      ctor: null,\n      adopted: opt_adopted || false,\n    };\n  }\n\n  if (!opt_override && (s.ctor || s.obj)) {\n    // Service already registered.\n    return;\n  }\n\n  s.ctor = ctor;\n  s.context = context;\n  s.adopted = opt_adopted || false;\n\n  // The service may have been requested already, in which case there is a\n  // pending promise that needs to fulfilled.\n  if (s.resolve) {\n    // getServiceInternal will resolve the promise.\n    getServiceInternal(holder, id);\n  }\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {!Promise<!Object>}\n */\nfunction getServicePromiseInternal(holder, id) {\n  const cached = getServicePromiseOrNullInternal(holder, id);\n  if (cached) {\n    return cached;\n  }\n  // Service is not registered.\n\n  // TODO(@cramforce): Add a check that if the element is eventually registered\n  // that the service is actually provided and this promise resolves.\n  const services = getServices(holder);\n  services[id] = emptyServiceHolderWithPromise();\n  return /** @type {!Promise<!Object>} */ (services[id].promise);\n}\n\n/**\n * @param {!Object} holder\n * @param {string} id of the service.\n * @param {*} error\n */\nfunction rejectServicePromiseInternal(holder, id, error) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.reject) {\n      s.reject(error);\n    }\n    return;\n  }\n\n  services[id] = emptyServiceHolderWithPromise();\n  services[id].reject(error);\n}\n\n/**\n * Returns a promise for service `id` if the service has been registered\n * on `holder`.\n * @param {!Object} holder\n * @param {string} id of the service.\n * @return {?Promise<!Object>}\n */\nfunction getServicePromiseOrNullInternal(holder, id) {\n  const services = getServices(holder);\n  const s = services[id];\n  if (s) {\n    if (s.promise) {\n      return s.promise;\n    } else {\n      // Instantiate service if not already instantiated.\n      getServiceInternal(holder, id);\n      return (s.promise = Promise.resolve(/** @type {!Object} */ (s.obj)));\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the object that holds the services registered in a holder.\n * @param {!Object} holder\n * @return {!Object<string,!ServiceHolderDef>}\n */\nfunction getServices(holder) {\n  let services = holder.__AMP_SERVICES;\n  if (!services) {\n    services = holder.__AMP_SERVICES = {};\n  }\n  return services;\n}\n\n/**\n * Whether the specified service implements `Disposable` interface.\n * @param {!Object} service\n * @return {boolean}\n */\nexport function isDisposable(service) {\n  return typeof service.dispose == 'function';\n}\n\n/**\n * Asserts that the specified service implements `Disposable` interface and\n * typecasts the instance to `Disposable`.\n * @param {!Object} service\n * @return {!Disposable}\n */\nexport function assertDisposable(service) {\n  devAssert(isDisposable(service), 'required to implement Disposable');\n  return /** @type {!Disposable} */ (service);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * ampdoc scope.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n */\nexport function disposeServicesForDoc(ampdoc) {\n  disposeServicesInternal(ampdoc);\n}\n\n/**\n * Disposes all disposable (implements `Disposable` interface) services in\n * embed scope.\n * @param {!Window} embedWin\n */\nexport function disposeServicesForEmbed(embedWin) {\n  disposeServicesInternal(embedWin);\n}\n\n/**\n * @param {!Object} holder Object holding the service instances.\n */\nfunction disposeServicesInternal(holder) {\n  const services = getServices(holder);\n  for (const id in services) {\n    if (!Object.prototype.hasOwnProperty.call(services, id)) {\n      continue;\n    }\n    const serviceHolder = services[id];\n    if (serviceHolder.adopted) {\n      continue;\n    }\n    if (serviceHolder.obj) {\n      disposeServiceInternal(id, serviceHolder.obj);\n    } else if (serviceHolder.promise) {\n      serviceHolder.promise.then((instance) =>\n        disposeServiceInternal(id, instance)\n      );\n    }\n  }\n}\n\n/**\n * @param {string} id\n * @param {!Object} service\n */\nfunction disposeServiceInternal(id, service) {\n  if (!isDisposable(service)) {\n    return;\n  }\n  try {\n    assertDisposable(service).dispose();\n  } catch (e) {\n    // Ensure that a failure to dispose a service does not disrupt other\n    // services.\n    dev().error('SERVICE', 'failed to dispose service', id, e);\n  }\n}\n\n/**\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} id\n */\nexport function adoptServiceForEmbedDoc(ampdoc, id) {\n  const service = getServiceInternal(\n    getAmpdocServiceHolder(devAssert(ampdoc.getParent())),\n    id\n  );\n  registerServiceInternal(\n    getAmpdocServiceHolder(ampdoc),\n    ampdoc,\n    id,\n    function () {\n      return service;\n    },\n    /* override */ false,\n    /* adopted */ true\n  );\n}\n\n/**\n * Resets a single service, so it gets recreated on next getService invocation.\n * @param {!Object} holder\n * @param {string} id of the service.\n */\nexport function resetServiceForTesting(holder, id) {\n  if (holder.__AMP_SERVICES) {\n    holder.__AMP_SERVICES[id] = null;\n  }\n}\n\n/**\n * @param {!Object} holder Object holding the service instance.\n * @param {string} id of the service.\n * @return {boolean}\n */\nfunction isServiceRegistered(holder, id) {\n  const service = holder.__AMP_SERVICES && holder.__AMP_SERVICES[id];\n  // All registered services must have an implementation or a constructor.\n  return !!(service && (service.ctor || service.obj));\n}\n\n/** @return {!ServiceHolderDef} */\nfunction emptyServiceHolderWithPromise() {\n  const deferred = new Deferred();\n  const {promise, resolve, reject} = deferred;\n  promise.catch(() => {}); // avoid uncaught exception when service gets rejected\n  return {\n    obj: null,\n    promise,\n    resolve,\n    reject,\n    context: null,\n    ctor: null,\n  };\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {LruCache} from './utils/lru-cache';\nimport {dict, hasOwn} from './utils/object';\nimport {endsWith} from './string';\nimport {getMode} from './mode';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\nimport {tryDecodeUriComponent_} from './url-try-decode-uri-component';\nimport {urls} from './config';\nimport {userAssert} from './log';\n\n/**\n * @type {!JsonObject}\n */\nconst SERVING_TYPE_PREFIX = dict({\n  // No viewer\n  'c': true,\n  // In viewer\n  'v': true,\n  // Ad landing page\n  'a': true,\n  // Ad\n  'ad': true,\n});\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {LruCache}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* parameters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\n/** @private @const Matches amp_gsa parameters in query string. */\nconst AMP_GSA_PARAMS_REGEX = /[?&]amp_gsa[^&]*/;\n\n/** @private @const Matches amp_r parameters in query string. */\nconst AMP_R_PARAMS_REGEX = /[?&]amp_r[^&]*/;\n\n/** @private @const Matches amp_kit parameters in query string. */\nconst AMP_KIT_PARAMS_REGEX = /[?&]amp_kit[^&]*/;\n\n/** @private @const Matches usqp parameters from goog experiment in query string. */\nconst GOOGLE_EXPERIMENT_PARAMS_REGEX = /[?&]usqp[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns the correct origin for a given window.\n * @param {!Window} win\n * @return {string} origin\n */\nexport function getWinOrigin(win) {\n  return win.origin || parseUrlDeprecated(win.location.href).origin;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n */\nexport function parseUrlDeprecated(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = IS_ESM\n      ? null\n      : self.__AMP_URL_CACHE || (self.__AMP_URL_CACHE = new LruCache(100));\n  }\n\n  return parseUrlWithA(a, url, IS_ESM || opt_nocache ? null : cache);\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @param {LruCache=} opt_cache\n *   Cache is always ignored on ESM builds, see https://go.amp.dev/pr/31594\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url, opt_cache) {\n  if (IS_ESM) {\n    a.href = '';\n    return /** @type {!Location} */ (new URL(url, a.href));\n  }\n\n  if (opt_cache && opt_cache.has(url)) {\n    return opt_cache.get(url);\n  }\n\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */ ({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null, // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if (\n    (info.protocol == 'http:' && info.port == 80) ||\n    (info.protocol == 'https:' && info.port == 443)\n  ) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  let origin;\n  if (a.origin && a.origin != 'null') {\n    origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    origin = info.href;\n  } else {\n    origin = info.protocol + '//' + info.host;\n  }\n  info.origin = origin;\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = getMode().test && Object.freeze ? Object.freeze(info) : info;\n\n  if (opt_cache) {\n    opt_cache.put(url, frozen);\n  }\n\n  return frozen;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(\n  url,\n  paramString,\n  opt_addToFront\n) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl =\n    mainAndQuery[0] +\n    (mainAndQuery[1]\n      ? opt_addToFront\n        ? `?${paramString}&${mainAndQuery[1]}`\n        : `?${mainAndQuery[1]}&${paramString}`\n      : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Append query string fields and values to a url, only if the key does not\n * exist in current query string.\n * @param {string} url\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addMissingParamsToUrl(url, params) {\n  const location = parseUrlDeprecated(url);\n  const existingParams = parseQueryString(location.search);\n  const paramsToAdd = dict({});\n  const keys = Object.keys(params);\n  for (let i = 0; i < keys.length; i++) {\n    if (!hasOwn(existingParams, keys[i])) {\n      paramsToAdd[keys[i]] = params[keys[i]];\n    }\n  }\n  return addParamsToUrl(url, paramsToAdd);\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!JsonObject<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrlDeprecated(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return (\n    url.protocol == 'https:' ||\n    url.hostname == 'localhost' ||\n    url.hostname == '127.0.0.1' ||\n    endsWith(url.hostname, '.localhost')\n  );\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n  urlString,\n  elementContext,\n  sourceName = 'source'\n) {\n  userAssert(\n    urlString != null,\n    '%s %s must be available',\n    elementContext,\n    sourceName\n  );\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  userAssert(\n    isSecureUrlDeprecated(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n    '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n    elementContext,\n    sourceName,\n    theUrlString\n  );\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  userAssert(\n    /^https?\\:/i.test(urlString),\n    'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n    urlString\n  );\n  return parseUrlDeprecated(urlString).href;\n}\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * For proxy-origin URLs, returns the serving type. Otherwise, returns null.\n * E.g., 'https://amp-com.cdn.ampproject.org/a/s/amp.com/amp_document.html'\n * returns 'a'.\n * @param {string|!Location} url URL of an AMP document.\n * @return {?string}\n */\nexport function getProxyServingType(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  if (!isProxyOrigin(url)) {\n    return null;\n  }\n  const path = url.pathname.split('/', 2);\n  return path[1];\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Returns a URL without AMP JS parameters.\n * @param {string} url\n * @return {string}\n */\nexport function removeAmpJsParamsFromUrl(url) {\n  const parsed = parseUrlDeprecated(url);\n  const search = removeAmpJsParamsFromSearch(parsed.search);\n  return parsed.origin + parsed.pathname + search + parsed.hash;\n}\n\n/**\n * Returns a URL without a query string.\n * @param {string} url\n * @return {string}\n */\nexport function removeSearch(url) {\n  const index = url.indexOf('?');\n  if (index == -1) {\n    return url;\n  }\n  const fragment = getFragment(url);\n  return url.substring(0, index) + fragment;\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the\n * new search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParamsFromSearch(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n    .replace(AMP_JS_PARAMS_REGEX, '')\n    .replace(AMP_GSA_PARAMS_REGEX, '')\n    .replace(AMP_R_PARAMS_REGEX, '')\n    .replace(AMP_KIT_PARAMS_REGEX, '')\n    .replace(GOOGLE_EXPERIMENT_PARAMS_REGEX, '')\n    .replace(/^[?&]/, ''); // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Removes parameters with param name and returns the new search string.\n * @param {string} urlSearch\n * @param {string} paramName\n * @return {string}\n */\nexport function removeParamsFromSearch(urlSearch, paramName) {\n  // TODO: reuse the function in removeAmpJsParamsFromSearch. Accept paramNames\n  // as an array.\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const paramRegex = new RegExp(`[?&]${paramName}=[^&]*`, 'g');\n  const search = urlSearch.replace(paramRegex, '').replace(/^[?&]/, '');\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrlDeprecated(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  userAssert(\n    SERVING_TYPE_PREFIX[prefix],\n    'Unknown path prefix in url %s',\n    url.href\n  );\n  const domainOrHttpsSignal = path[2];\n  const origin =\n    domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  userAssert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return (\n    origin +\n    path.join('/') +\n    removeAmpJsParamsFromSearch(url.search) +\n    (url.hash || '')\n  );\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrlDeprecated(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  if (IS_ESM || typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private @visibleForTesting\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrlDeprecated(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrlDeprecated(relativeUrlString);\n\n  // Absolute URL.\n  if (relativeUrlString.toLowerCase().startsWith(relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (relativeUrlString.startsWith('//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (relativeUrlString.startsWith('/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return (\n    baseUrl.origin +\n    baseUrl.pathname.replace(/\\/[^/]*$/, '/') +\n    relativeUrlString\n  );\n}\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n/**\n * Checks if the url has __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrlDeprecated(url);\n  const query = parseQueryString(parsedUrl.search);\n  userAssert(\n    !(SOURCE_ORIGIN_PARAM in query),\n    'Source origin is not allowed in %s',\n    url\n  );\n}\n\n/**\n * Tries to decode a URI component, falling back to opt_fallback (or an empty\n * string)\n *\n * @param {string} component\n * @param {string=} opt_fallback\n * @return {string}\n */\nexport function tryDecodeUriComponent(component, opt_fallback) {\n  return tryDecodeUriComponent_(component, opt_fallback);\n}\n\n/**\n * Adds the path to the given url.\n *\n * @param {!Location} url\n * @param {string} path\n * @return {string}\n */\nexport function appendPathToUrl(url, path) {\n  const pathname = url.pathname.replace(/\\/?$/, '/') + path.replace(/^\\//, '');\n  return url.origin + pathname + url.search + url.hash;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Experiments system allows a developer to opt-in to test\n * features that are not yet fully tested.\n *\n * Experiments page: https://cdn.ampproject.org/experiments.html *\n */\n\nimport {dev, user} from './log';\nimport {getMode} from './mode';\nimport {getTopWindow} from './service';\nimport {hasOwn} from './utils/object';\nimport {parseQueryString} from './url';\n\n/** @const {string} */\nconst TAG = 'EXPERIMENTS';\n\n/** @const {string} */\nconst LOCAL_STORAGE_KEY = 'amp-experiment-toggles';\n\n/** @const {string} */\nconst TOGGLES_WINDOW_PROPERTY = '__AMP__EXPERIMENT_TOGGLES';\n\n/**\n * @typedef {{\n *   experimentId: string,\n *   isTrafficEligible: function(!Window):boolean,\n *   branches: !Array<string>\n * }}\n */\nexport let ExperimentInfo;\n\n/**\n * Whether we are in canary.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isCanary(win) {\n  return !!(win.AMP_CONFIG && win.AMP_CONFIG.canary);\n}\n\n/**\n * Returns binary type, e.g., canary, production, control, or rc.\n * @param {!Window} win\n * @return {string}\n */\nexport function getBinaryType(win) {\n  return win.AMP_CONFIG && win.AMP_CONFIG.type\n    ? win.AMP_CONFIG.type\n    : 'unknown';\n}\n\n/**\n * Whether the specified experiment is on or off.\n * @param {!Window} win\n * @param {string} experimentId\n * @return {boolean}\n */\nexport function isExperimentOn(win, experimentId) {\n  const toggles = experimentToggles(win);\n  return !!toggles[experimentId];\n}\n\n/**\n * Toggles the experiment on or off. Returns the actual value of the experiment\n * after toggling is done.\n * @param {!Window} win\n * @param {string} experimentId\n * @param {boolean=} opt_on\n * @param {boolean=} opt_transientExperiment  Whether to toggle the\n *     experiment state \"transiently\" (i.e., for this page load only) or\n *     durably (by saving the experiment IDs after toggling).\n *     Default: false (save durably).\n * @return {boolean} New state for experimentId.\n */\nexport function toggleExperiment(\n  win,\n  experimentId,\n  opt_on,\n  opt_transientExperiment\n) {\n  const currentlyOn = isExperimentOn(win, /*OK*/ experimentId);\n  const on = !!(opt_on !== undefined ? opt_on : !currentlyOn);\n  if (on != currentlyOn) {\n    const toggles = experimentToggles(win);\n    toggles[experimentId] = on;\n\n    if (!opt_transientExperiment) {\n      const storedToggles = getExperimentToggles(win);\n      storedToggles[experimentId] = on;\n      saveExperimentToggles(win, storedToggles);\n      // Avoid affecting tests that spy/stub warn().\n      if (!getMode().test) {\n        user().warn(\n          TAG,\n          '\"%s\" experiment %s for the domain \"%s\". See: https://amp.dev/documentation/guides-and-tutorials/learn/experimental',\n          experimentId,\n          on ? 'enabled' : 'disabled',\n          win.location.hostname\n        );\n      }\n    }\n  }\n  return on;\n}\n\n/**\n * Calculate whether the experiment is on or off based off of its default value,\n * stored overriden value, or the global config frequency given.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nexport function experimentToggles(win) {\n  if (win[TOGGLES_WINDOW_PROPERTY]) {\n    return win[TOGGLES_WINDOW_PROPERTY];\n  }\n  win[TOGGLES_WINDOW_PROPERTY] = Object.create(null);\n  const toggles = win[TOGGLES_WINDOW_PROPERTY];\n\n  // Read the default config of this build.\n  if (win.AMP_CONFIG) {\n    for (const experimentId in win.AMP_CONFIG) {\n      const frequency = win.AMP_CONFIG[experimentId];\n      if (typeof frequency === 'number' && frequency >= 0 && frequency <= 1) {\n        toggles[experimentId] = Math.random() < frequency;\n      }\n    }\n  }\n  // Read document level override from meta tag.\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-doc-opt-in']) &&\n    win.AMP_CONFIG['allow-doc-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-doc-opt-in'];\n    const meta = win.document.head.querySelector(\n      'meta[name=\"amp-experiments-opt-in\"]'\n    );\n    if (meta) {\n      const optedInExperiments = meta.getAttribute('content').split(',');\n      for (let i = 0; i < optedInExperiments.length; i++) {\n        if (allowed.indexOf(optedInExperiments[i]) != -1) {\n          toggles[optedInExperiments[i]] = true;\n        }\n      }\n    }\n  }\n\n  Object.assign(toggles, getExperimentToggles(win));\n\n  if (\n    win.AMP_CONFIG &&\n    Array.isArray(win.AMP_CONFIG['allow-url-opt-in']) &&\n    win.AMP_CONFIG['allow-url-opt-in'].length > 0\n  ) {\n    const allowed = win.AMP_CONFIG['allow-url-opt-in'];\n    const hash = win.location.originalHash || win.location.hash;\n    const params = parseQueryString(hash);\n    for (let i = 0; i < allowed.length; i++) {\n      const param = params[`e-${allowed[i]}`];\n      if (param == '1') {\n        toggles[allowed[i]] = true;\n      }\n      if (param == '0') {\n        toggles[allowed[i]] = false;\n      }\n    }\n  }\n  return toggles;\n}\n\n/**\n * Returns the cached experiments toggles, or null if they have not been\n * computed yet.\n * @param {!Window} win\n * @return {Object<string, boolean>}\n */\nexport function experimentTogglesOrNull(win) {\n  return win[TOGGLES_WINDOW_PROPERTY] || null;\n}\n\n/**\n * Returns a set of experiment IDs currently on.\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n */\nfunction getExperimentToggles(win) {\n  let experimentsString = '';\n  try {\n    if ('localStorage' in win) {\n      experimentsString = win.localStorage.getItem(LOCAL_STORAGE_KEY);\n    }\n  } catch (e) {\n    dev().warn(TAG, 'Failed to retrieve experiments from localStorage.');\n  }\n  const tokens = experimentsString ? experimentsString.split(/\\s*,\\s*/g) : [];\n\n  const toggles = Object.create(null);\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].length == 0) {\n      continue;\n    }\n    if (tokens[i][0] == '-') {\n      toggles[tokens[i].substr(1)] = false;\n    } else {\n      toggles[tokens[i]] = true;\n    }\n  }\n  return toggles;\n}\n\n/**\n * Saves a set of experiment IDs currently on.\n * @param {!Window} win\n * @param {!Object<string, boolean>} toggles\n */\nfunction saveExperimentToggles(win, toggles) {\n  const experimentIds = [];\n  for (const experiment in toggles) {\n    experimentIds.push((toggles[experiment] === false ? '-' : '') + experiment);\n  }\n  try {\n    if ('localStorage' in win) {\n      win.localStorage.setItem(LOCAL_STORAGE_KEY, experimentIds.join(','));\n    }\n  } catch (e) {\n    user().error(TAG, 'Failed to save experiments to localStorage.');\n  }\n}\n\n/**\n * See getExperimentToggles().\n * @param {!Window} win\n * @return {!Object<string, boolean>}\n * @visibleForTesting\n */\nexport function getExperimentTogglesForTesting(win) {\n  return getExperimentToggles(win);\n}\n\n/**\n * Resets the experimentsToggle cache for testing purposes.\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetExperimentTogglesForTesting(win) {\n  saveExperimentToggles(win, {});\n  win[TOGGLES_WINDOW_PROPERTY] = null;\n}\n\n/**\n * In some browser implementations of Math.random(), sequential calls of\n * Math.random() are correlated and can cause a bias.  In particular,\n * if the previous random() call was < 0.001 (as it will be if we select\n * into an experiment), the next value could be less than 0.5 more than\n * 50.7% of the time.  This provides an implementation that roots down into\n * the crypto API, when available, to produce less biased samples.\n *\n * @return {number} Pseudo-random floating-point value on the range [0, 1).\n */\nfunction slowButAccuratePrng() {\n  // TODO(tdrl): Implement.\n  return Math.random();\n}\n\n/**\n * Container for alternate random number generator implementations.  This\n * allows us to set an \"accurate\" PRNG for branch selection, but to mock it\n * out easily in tests.\n *\n * @visibleForTesting\n * @const {!{accuratePrng: function():number}}\n */\nexport const RANDOM_NUMBER_GENERATORS = {\n  accuratePrng: slowButAccuratePrng,\n};\n\n/**\n * Selects, uniformly at random, a single item from the array.\n * @param {!Array<string>} arr Object to select from.\n * @return {?string} Single item from arr or null if arr was empty.\n */\nfunction selectRandomItem(arr) {\n  const rn = RANDOM_NUMBER_GENERATORS.accuratePrng();\n  return dev().assertString(arr[Math.floor(rn * arr.length)]) || null;\n}\n\n/**\n * Selects which page-level experiment branches are enabled. If a given\n * experiment name is already set (including to the null / no branches selected\n * state), this won't alter its state.\n *\n * Check whether a given experiment is set using isExperimentOn(win,\n * experimentName) and, if it is on, look for which branch is selected in\n * win.__AMP_EXPERIMENT_BRANCHES[experimentName].\n *\n * @param {!Window} win Window context on which to save experiment\n *     selection state.\n * @param {!Array<!ExperimentInfo>} experiments  Set of experiments to\n *     configure for this page load.\n * @return {!Object<string, string>} Map of experiment names to selected\n *     branches.\n */\nexport function randomlySelectUnsetExperiments(win, experiments) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  const selectedExperiments = {};\n  for (let i = 0; i < experiments.length; i++) {\n    const experiment = experiments[i];\n    const experimentName = experiment.experimentId;\n    if (hasOwn(win.__AMP_EXPERIMENT_BRANCHES, experimentName)) {\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n      continue;\n    }\n\n    if (!experiment.isTrafficEligible || !experiment.isTrafficEligible(win)) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = null;\n      continue;\n    }\n\n    // If we're in the experiment, but we haven't already forced a specific\n    // experiment branch (e.g., via a test setup), then randomize the branch\n    // choice.\n    if (\n      !win.__AMP_EXPERIMENT_BRANCHES[experimentName] &&\n      isExperimentOn(win, /*OK*/ experimentName)\n    ) {\n      win.__AMP_EXPERIMENT_BRANCHES[experimentName] = selectRandomItem(\n        experiment.branches\n      );\n      selectedExperiments[experimentName] =\n        win.__AMP_EXPERIMENT_BRANCHES[experimentName];\n    }\n  }\n  return selectedExperiments;\n}\n\n/**\n * Returns the experiment branch enabled for the given experiment ID.\n * For example, 'control' or 'experiment'.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @return {?string} Active experiment branch ID for experimentName (possibly\n *     null if experimentName has been tested but no branch was enabled).\n */\nexport function getExperimentBranch(win, experimentName) {\n  return win.__AMP_EXPERIMENT_BRANCHES\n    ? win.__AMP_EXPERIMENT_BRANCHES[experimentName]\n    : null;\n}\n\n/**\n * Returns an object containing all active experiment branches on the\n * top Window.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @return {!Object} contains all experiment branches and their ids.\n */\nexport function getActiveExperimentBranches(win) {\n  const topWin = getTopWindow(win);\n  if (!topWin.__AMP_EXPERIMENT_BRANCHES) {\n    topWin.__AMP_EXPERIMENT_BRANCHES = {};\n  }\n  return {...topWin.__AMP_EXPERIMENT_BRANCHES};\n}\n\n/**\n * Force enable (or disable) a specific branch of a given experiment name.\n * Disables the experiment name altogether if branchId is falseish.\n *\n * @param {!Window} win Window context to check for experiment state.\n * @param {string} experimentName Name of the experiment to check.\n * @param {?string} branchId ID of branch to force or null to disable\n *     altogether.\n * @visibleForTesting\n */\nexport function forceExperimentBranch(win, experimentName, branchId) {\n  win.__AMP_EXPERIMENT_BRANCHES = win.__AMP_EXPERIMENT_BRANCHES || {};\n  toggleExperiment(win, experimentName, !!branchId, true);\n  win.__AMP_EXPERIMENT_BRANCHES[experimentName] = branchId;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, devAssert, userAssert} from './log';\nimport {htmlFor} from './static-template';\nimport {isExperimentOn} from './experiments';\nimport {isFiniteNumber, toWin} from './types';\nimport {setStyle, setStyles, toggle} from './style';\n\nimport {transparentPng} from './utils/img';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n  FLUID: 'fluid',\n  INTRINSIC: 'intrinsic',\n};\n\n/**\n * Layout priorities to use with BaseElement#getLayoutPriority() and\n * BaseElement#updateLayoutPriority().\n * @enum {number}\n */\nexport const LayoutPriority = {\n  CONTENT: 0,\n  METADATA: 1,\n  ADS: 2,\n  BACKGROUND: 3,\n};\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n/**\n * Elements that the progress can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * This list does not include video players which are found via regex later.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-AD': true,\n  'AMP-ANIM': true,\n  'AMP-EMBED': true,\n  'AMP-FACEBOOK': true,\n  'AMP-FACEBOOK-COMMENTS': true,\n  'AMP-FACEBOOK-PAGE': true,\n  'AMP-GOOGLE-DOCUMENT-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-TWITTER': true,\n};\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they are listed individually.\n * @private @const {!RegExp}\n */\nconst videoPlayerTagNameRe = /^amp\\-(video|.+player)|AMP-BRIGHTCOVE|AMP-DAILYMOTION|AMP-YOUTUBE|AMP-VIMEO|AMP-IMA-VIDEO/i;\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n * @type {?boolean}\n */\nlet aspectRatioCssCache = null;\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.FILL ||\n    layout == Layout.FLEX_ITEM ||\n    layout == Layout.FLUID ||\n    layout == Layout.INTRINSIC\n  );\n}\n\n/**\n * Whether an element with this layout has a fixed dimension.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeFixed(layout) {\n  return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n}\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = typeof tag == 'string' ? tag : tag.tagName;\n  return tagName && tagName.toLowerCase().startsWith('i-');\n}\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined|null} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLength(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n    'Invalid length value: %s',\n    length\n  );\n  return /** @type {!LengthDef} */ (length);\n}\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n * @closurePrimitive {asserts.matchesReturn}\n */\nexport function assertLengthOrPercent(length) {\n  userAssert(\n    /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n    'Invalid length or percent value: %s',\n    length\n  );\n  return length;\n}\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  const m = userAssert(\n    /[a-z]+/i.exec(length),\n    'Failed to read units from %s',\n    length\n  );\n  return m[0];\n}\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element allowlisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  devAssert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/ offsetWidth || 1) + 'px',\n      height: (temp./*OK*/ offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n/**\n * Whether the loading can be shown for the specified element. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  return LOADING_ELEMENTS_[tagName] || isIframeVideoPlayerComponent(tagName);\n}\n\n/**\n * All video player components must either have a) \"video\" or b) \"player\" in\n * their name. A few components don't follow this convention for historical\n * reasons, so they're present in the LOADING_ELEMENTS_ allowlist.\n * @param {string} tagName\n * @return {boolean}\n */\nexport function isIframeVideoPlayerComponent(tagName) {\n  if (tagName == 'AMP-VIDEO') {\n    return false;\n  }\n  return videoPlayerTagNameRe.test(tagName);\n}\n\n/**\n * Applies layout to the element. Visible for testing only.\n *\n * \\   \\  /  \\  /   / /   \\     |   _  \\     |  \\ |  | |  | |  \\ |  |  / _____|\n *  \\   \\/    \\/   / /  ^  \\    |  |_)  |    |   \\|  | |  | |   \\|  | |  |  __\n *   \\            / /  /_\\  \\   |      /     |  . `  | |  | |  . `  | |  | |_ |\n *    \\    /\\    / /  _____  \\  |  |\\  \\----.|  |\\   | |  | |  |\\   | |  |__| |\n *     \\__/  \\__/ /__/     \\__\\ | _| `._____||__| \\__| |__| |__| \\__|  \\______|\n *\n * The equivalent of this method is used for server-side rendering (SSR) and\n * any changes made to it must be made in coordination with caches that\n * implement SSR. For more information on SSR see bit.ly/amp-ssr.\n *\n * @param {!Element} element\n * @param {boolean} fixIeIntrinsic\n * @return {!Layout}\n */\nexport function applyStaticLayout(element, fixIeIntrinsic = false) {\n  // Check if the layout has already been done by server-side rendering or\n  // client-side rendering and the element was cloned. The document may be\n  // visible to the user if the boilerplate was removed so please take care in\n  // making changes here.\n  const completedLayoutAttr = element.getAttribute('i-amphtml-layout');\n  if (completedLayoutAttr) {\n    const layout = /** @type {!Layout} */ (devAssert(\n      parseLayout(completedLayoutAttr)\n    ));\n    if (\n      (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) &&\n      element.firstElementChild\n    ) {\n      // Find sizer, but assume that it might not have been parsed yet.\n      element.sizerElement =\n        element.querySelector('i-amphtml-sizer') || undefined;\n      if (element.sizerElement) {\n        element.sizerElement.setAttribute('slot', 'i-amphtml-svc');\n      }\n    } else if (layout == Layout.NODISPLAY) {\n      toggle(element, false);\n      // TODO(jridgewell): Temporary hack while SSR still adds an inline\n      // `display: none`\n      element['style']['display'] = '';\n    }\n    return layout;\n  }\n\n  // If the layout was already done by server-side rendering (SSR), then the\n  // code below will not run. Any changes below will necessitate a change to SSR\n  // and must be coordinated with caches that implement SSR. See bit.ly/amp-ssr.\n\n  // Parse layout from the element.\n  const layoutAttr = element.getAttribute('layout');\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const sizesAttr = element.getAttribute('sizes');\n  const heightsAttr = element.getAttribute('heights');\n\n  // Input layout attributes.\n  const inputLayout = layoutAttr ? parseLayout(layoutAttr) : null;\n  userAssert(\n    inputLayout !== undefined,\n    'Invalid \"layout\" value: %s, %s',\n    layoutAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputWidth =\n    widthAttr && widthAttr != 'auto' ? parseLength(widthAttr) : widthAttr;\n  userAssert(\n    inputWidth !== undefined,\n    'Invalid \"width\" value: %s, %s',\n    widthAttr,\n    element\n  );\n  /** @const {string|null|undefined} */\n  const inputHeight =\n    heightAttr && heightAttr != 'fluid' ? parseLength(heightAttr) : heightAttr;\n  userAssert(\n    inputHeight !== undefined,\n    'Invalid \"height\" value: %s, %s',\n    heightAttr,\n    element\n  );\n\n  // Effective layout attributes. These are effectively constants.\n  let width;\n  let height;\n  let layout;\n\n  // Calculate effective width and height.\n  if (\n    (!inputLayout ||\n      inputLayout == Layout.FIXED ||\n      inputLayout == Layout.FIXED_HEIGHT) &&\n    (!inputWidth || !inputHeight) &&\n    hasNaturalDimensions(element.tagName)\n  ) {\n    // Default width and height: handle elements that do not specify a\n    // width/height and are defined to have natural browser dimensions.\n    const dimensions = getNaturalDimensions(element);\n    width =\n      inputWidth || inputLayout == Layout.FIXED_HEIGHT\n        ? inputWidth\n        : dimensions.width;\n    height = inputHeight || dimensions.height;\n  } else {\n    width = inputWidth;\n    height = inputHeight;\n  }\n\n  // Calculate effective layout.\n  if (inputLayout) {\n    layout = inputLayout;\n  } else if (!width && !height) {\n    layout = Layout.CONTAINER;\n  } else if (height == 'fluid') {\n    layout = Layout.FLUID;\n  } else if (height && (!width || width == 'auto')) {\n    layout = Layout.FIXED_HEIGHT;\n  } else if (height && width && (sizesAttr || heightsAttr)) {\n    layout = Layout.RESPONSIVE;\n  } else {\n    layout = Layout.FIXED;\n  }\n\n  // Verify layout attributes.\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.FIXED_HEIGHT ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(height, 'The \"height\" attribute is missing: %s', element);\n  }\n  if (layout == Layout.FIXED_HEIGHT) {\n    userAssert(\n      !width || width == 'auto',\n      'The \"width\" attribute must be missing or \"auto\": %s',\n      element\n    );\n  }\n  if (\n    layout == Layout.FIXED ||\n    layout == Layout.RESPONSIVE ||\n    layout == Layout.INTRINSIC\n  ) {\n    userAssert(\n      width && width != 'auto',\n      'The \"width\" attribute must be present and not \"auto\": %s',\n      element\n    );\n  }\n\n  if (layout == Layout.RESPONSIVE || layout == Layout.INTRINSIC) {\n    userAssert(\n      getLengthUnits(width) == getLengthUnits(height),\n      'Length units should be the same for \"width\" and \"height\": %s, %s, %s',\n      widthAttr,\n      heightAttr,\n      element\n    );\n  } else {\n    userAssert(\n      heightsAttr === null,\n      '\"heights\" attribute must be missing: %s',\n      element\n    );\n  }\n\n  // Apply UI.\n  element.classList.add(getLayoutClass(layout));\n  if (isLayoutSizeDefined(layout)) {\n    element.classList.add('i-amphtml-layout-size-defined');\n  }\n  if (layout == Layout.NODISPLAY) {\n    // CSS defines layout=nodisplay automatically with `display:none`. Thus\n    // no additional styling is needed.\n    toggle(element, false);\n    // TODO(jridgewell): Temporary hack while SSR still adds an inline\n    // `display: none`\n    element['style']['display'] = '';\n  } else if (layout == Layout.FIXED) {\n    setStyles(element, {\n      width: dev().assertString(width),\n      height: dev().assertString(height),\n    });\n  } else if (layout == Layout.FIXED_HEIGHT) {\n    setStyle(element, 'height', dev().assertString(height));\n  } else if (layout == Layout.RESPONSIVE) {\n    if (shouldUseAspectRatioCss(toWin(element.ownerDocument.defaultView))) {\n      setStyle(\n        element,\n        'aspect-ratio',\n        `${getLengthNumeral(width)}/${getLengthNumeral(height)}`\n      );\n    } else {\n      const sizer = element.ownerDocument.createElement('i-amphtml-sizer');\n      sizer.setAttribute('slot', 'i-amphtml-svc');\n      setStyles(sizer, {\n        paddingTop:\n          (getLengthNumeral(height) / getLengthNumeral(width)) * 100 + '%',\n      });\n      element.insertBefore(sizer, element.firstChild);\n      element.sizerElement = sizer;\n    }\n  } else if (layout == Layout.INTRINSIC) {\n    // Intrinsic uses an svg inside the sizer element rather than the padding\n    // trick Note a naked svg won't work becasue other thing expect the\n    // i-amphtml-sizer element\n    const sizer = htmlFor(element)`\n      <i-amphtml-sizer class=\"i-amphtml-sizer\" slot=\"i-amphtml-svc\">\n        <img alt=\"\" role=\"presentation\" aria-hidden=\"true\"\n             class=\"i-amphtml-intrinsic-sizer\" />\n      </i-amphtml-sizer>`;\n    const intrinsicSizer = sizer.firstElementChild;\n    intrinsicSizer.setAttribute(\n      'src',\n      !IS_ESM && fixIeIntrinsic && element.ownerDocument\n        ? transparentPng(\n            element.ownerDocument,\n            dev().assertNumber(getLengthNumeral(width)),\n            dev().assertNumber(getLengthNumeral(height))\n          )\n        : `data:image/svg+xml;charset=utf-8,<svg height=\"${height}\" width=\"${width}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`\n    );\n    element.insertBefore(sizer, element.firstChild);\n    element.sizerElement = sizer;\n  } else if (layout == Layout.FILL) {\n    // Do nothing.\n  } else if (layout == Layout.CONTAINER) {\n    // Do nothing. Elements themselves will check whether the supplied\n    // layout value is acceptable. In particular container is only OK\n    // sometimes.\n  } else if (layout == Layout.FLEX_ITEM) {\n    // Set height and width to a flex item if they exist.\n    // The size set to a flex item could be overridden by `display: flex` later.\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    if (height) {\n      setStyle(element, 'height', height);\n    }\n  } else if (layout == Layout.FLUID) {\n    element.classList.add('i-amphtml-layout-awaiting-size');\n    if (width) {\n      setStyle(element, 'width', width);\n    }\n    setStyle(element, 'height', 0);\n  }\n  // Mark the element as having completed static layout, in case it is cloned\n  // in the future.\n  element.setAttribute('i-amphtml-layout', layout);\n  return layout;\n}\n\n/**\n * Whether aspect-ratio CSS can be used to implement responsive layouts.\n *\n * @param {!Window} win\n * @return {boolean}\n */\nfunction shouldUseAspectRatioCss(win) {\n  if (aspectRatioCssCache == null) {\n    aspectRatioCssCache =\n      (isExperimentOn(win, 'layout-aspect-ratio-css') &&\n        win.CSS &&\n        win.CSS.supports &&\n        win.CSS.supports('aspect-ratio: 1/1')) ||\n      false;\n  }\n  return aspectRatioCssCache;\n}\n\n/** @visibleForTesting */\nexport function resetShouldUseAspectRatioCssForTesting() {\n  aspectRatioCssCache = null;\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {!Array<{query: ?MediaQueryList, value: string}>} */\nlet ExprDef;\n\nconst TRUE_VALUE = '1';\n\nexport class MediaQueryProps {\n  /**\n   * @param {!Window} win\n   * @param {function()} callback\n   */\n  constructor(win, callback) {\n    /** @private @const */\n    this.win_ = win;\n\n    /** @private @const */\n    this.callback_ = callback;\n\n    /** @private {!Object<string, !ExprDef>} */\n    this.exprMap_ = {};\n\n    /** @private {?Object<string, !ExprDef>} */\n    this.prevExprMap_ = null;\n  }\n\n  /**\n   * Starts the resolution pass. After the pass is complete the new queries\n   * will be tracked and the old queries will be untracked.\n   */\n  start() {\n    this.prevExprMap_ = this.exprMap_;\n    this.exprMap_ = {};\n  }\n\n  /**\n   * @param {string} queryString\n   * @return {boolean} value\n   */\n  resolveMatchQuery(queryString) {\n    // This will create a list query like this:\n    // `[{query: matchMedia(queryString), value: true}, {query: null, value: false}]`\n    return (\n      this.resolve_(queryString, parseMediaQueryMatchExpr, TRUE_VALUE) ===\n      TRUE_VALUE\n    );\n  }\n\n  /**\n   * @param {string} exprString\n   * @return {string} value\n   */\n  resolveListQuery(exprString) {\n    return this.resolve_(exprString, parseMediaQueryListExpr, '');\n  }\n\n  /**\n   * Completes the resolution pass. The new queries are tracked for changes\n   * and the old queries are untracked.\n   */\n  complete() {\n    for (const k in this.prevExprMap_) {\n      if (!(k in this.exprMap_)) {\n        toggleOnChange(this.prevExprMap_[k], this.callback_, false);\n      }\n    }\n    this.prevExprMap_ = null;\n  }\n\n  /**\n   * Stops tracking of all queries.\n   */\n  dispose() {\n    for (const k in this.exprMap_) {\n      toggleOnChange(this.exprMap_[k], this.callback_, false);\n    }\n    this.exprMap_ = {};\n  }\n\n  /**\n   * @param {string} exprString\n   * @param {function(!Window, string):!ExprDef} parser\n   * @param {string} emptyExprValue\n   * @return {string} value\n   */\n  resolve_(exprString, parser, emptyExprValue) {\n    if (!exprString || !exprString.trim()) {\n      return emptyExprValue;\n    }\n    let expr = this.exprMap_[exprString] || this.prevExprMap_[exprString];\n    if (!expr) {\n      expr = parser(this.win_, exprString);\n      toggleOnChange(expr, this.callback_, true);\n    }\n    this.exprMap_[exprString] = expr;\n    return resolveMediaQueryListExpr(expr);\n  }\n}\n\n/**\n * @param {!Window} win\n * @param {string} queryString\n * @return {!ExprDef}\n */\nfunction parseMediaQueryMatchExpr(win, queryString) {\n  const query = win.matchMedia(queryString);\n  return [\n    {query, value: TRUE_VALUE},\n    {query: null, value: ''},\n  ];\n}\n\n/**\n * @param {!Window} win\n * @param {string} exprString\n * @return {!ExprDef}\n */\nfunction parseMediaQueryListExpr(win, exprString) {\n  return (\n    exprString\n      .split(',')\n      .map((part) => {\n        part = part.replace(/\\s+/g, ' ').trim();\n        if (part.length == 0) {\n          return;\n        }\n\n        let queryString;\n        let value;\n\n        // Process the expression from the end.\n        const lastChar = part.charAt(part.length - 1);\n        let div;\n        if (lastChar == ')') {\n          // Value is the CSS function, e.g. `calc(50vw + 10px)`.\n\n          // First, skip to the opening paren.\n          let parens = 1;\n          div = part.length - 2;\n          for (; div >= 0; div--) {\n            const c = part.charAt(div);\n            if (c == '(') {\n              parens--;\n            } else if (c == ')') {\n              parens++;\n            }\n            if (parens == 0) {\n              break;\n            }\n          }\n\n          // Then, skip to the begining to the function's name.\n          const funcEnd = div - 1;\n          if (div > 0) {\n            div--;\n            for (; div >= 0; div--) {\n              const c = part.charAt(div);\n              if (\n                !(\n                  c == '%' ||\n                  c == '-' ||\n                  c == '_' ||\n                  (c >= 'a' && c <= 'z') ||\n                  (c >= 'A' && c <= 'Z') ||\n                  (c >= '0' && c <= '9')\n                )\n              ) {\n                break;\n              }\n            }\n          }\n          if (div >= funcEnd) {\n            // Invalid condition.\n            return null;\n          }\n        } else {\n          // Value is the length or a percent: accept a wide range of values,\n          // including invalid values - they will be later asserted to conform\n          // to exact CSS length or percent value.\n          div = part.length - 2;\n          for (; div >= 0; div--) {\n            const c = part.charAt(div);\n            if (\n              !(\n                c == '%' ||\n                c == '.' ||\n                (c >= 'a' && c <= 'z') ||\n                (c >= 'A' && c <= 'Z') ||\n                (c >= '0' && c <= '9')\n              )\n            ) {\n              break;\n            }\n          }\n        }\n        if (div >= 0) {\n          queryString = part.substring(0, div + 1).trim();\n          value = part.substring(div + 1).trim();\n        } else {\n          value = part;\n          queryString = undefined;\n        }\n\n        if (!value) {\n          return null;\n        }\n\n        const query = queryString ? win.matchMedia(queryString) : null;\n        return {query, value};\n      })\n      // Remove any items that did not match the regex above and are\n      // undefined as a result.\n      .filter((item) => item)\n  );\n}\n\n/**\n * @param {!ExprDef} expr\n * @return {string} value\n */\nfunction resolveMediaQueryListExpr(expr) {\n  for (let i = 0; i < expr.length; i++) {\n    const {query, value} = expr[i];\n    if (!query || query.matches) {\n      return value;\n    }\n  }\n  return '';\n}\n\n/**\n * @param {!ExprDef} expr\n * @param {function()} callback\n * @param {boolean} on\n */\nfunction toggleOnChange(expr, callback, on) {\n  for (let i = 0; i < expr.length; i++) {\n    const {query} = expr[i];\n    if (query) {\n      // The `onchange` API is preferred, but the IE only supports\n      // the `addListener/removeListener` APIs.\n      if (query.onchange !== undefined) {\n        query.onchange = on ? callback : null;\n      } else {\n        if (on) {\n          query.addListener(callback);\n        } else {\n          query.removeListener(callback);\n        }\n      }\n    }\n  }\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {CanPlay, CanRender, LoadingProp} from '../contextprops';\nimport {dev} from '../log';\nimport {rediscoverChildren, removeProp, setProp} from '../context';\nimport {useAmpContext} from './context';\nimport {useEffect, useLayoutEffect, useRef} from './index';\n\n/**\n * @param {!Element} element\n * @param {string} name\n * @param {!Object|undefined} props\n * @return {!PreactDef.VNode}\n */\nexport function createSlot(element, name, props) {\n  element.setAttribute('slot', name);\n  return <Slot {...(props || {})} name={name} />;\n}\n\n/**\n * Slot component.\n *\n * @param {!JsonObject} props\n * @return {!PreactDef.VNode}\n */\nexport function Slot(props) {\n  const ref = useRef(/** @type {?Element} */ (null));\n\n  useSlotContext(ref);\n\n  useEffect(() => {\n    // Post-rendering cleanup, if any.\n    if (props['postRender']) {\n      props['postRender']();\n    }\n  });\n\n  return <slot {...props} ref={ref} />;\n}\n\n/**\n * @param {{current:?}} ref\n */\nexport function useSlotContext(ref) {\n  const context = useAmpContext();\n  useLayoutEffect(() => {\n    const slot = dev().assertElement(ref.current);\n    setProp(slot, CanRender, Slot, context.renderable);\n    setProp(slot, CanPlay, Slot, context.playable);\n    setProp(\n      slot,\n      LoadingProp,\n      Slot,\n      /** @type {!../loading.Loading} */ (context.loading)\n    );\n    return () => {\n      removeProp(slot, CanRender, Slot);\n      removeProp(slot, CanPlay, Slot);\n      removeProp(slot, LoadingProp, Slot);\n      rediscoverChildren(slot);\n    };\n  }, [ref, context]);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as dom from './dom';\nimport {\n  getAmpdoc,\n  getService,\n  getServiceForDocOrNull,\n  getServicePromise,\n  getServicePromiseForDoc,\n  getServicePromiseOrNull,\n  getServicePromiseOrNullForDoc,\n} from './service';\nimport {userAssert} from './log';\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementService(win, id, extension, opt_element) {\n  return getElementServiceIfAvailable(\n    win,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Window} win\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailable(win, id, extension, opt_element) {\n  const s = getServicePromiseOrNull(win, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  return getElementServicePromiseOrNull(win, id, extension, opt_element);\n}\n\n/**\n * @param {!Window} win\n * @param {string} elementName Name of an extended custom element.\n * @return {boolean} Whether this element is scheduled to be loaded.\n */\nfunction isElementScheduled(win, elementName) {\n  // Set in custom-element.js\n  if (!win.__AMP_EXTENDED_ELEMENTS) {\n    return false;\n  }\n  return !!win.__AMP_EXTENDED_ELEMENTS[elementName];\n}\n\n/**\n * Returns a promise for a service for the given id and window. Also expects an\n * element that has the actual implementation. The promise resolves when the\n * implementation loaded. Users should typically wrap this as a special purpose\n * function (e.g. Services.viewportForDoc(...)) for type safety and because the\n * factory should not be passed around.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an element,\n *     not the extension.\n * @return {!Promise<*>}\n */\nexport function getElementServiceForDoc(element, id, extension, opt_element) {\n  return getElementServiceIfAvailableForDoc(\n    element,\n    id,\n    extension,\n    opt_element\n  ).then((service) => assertService(service, id, extension));\n}\n\n/**\n * Same as getElementService but produces null if the given element is not\n * actually available on the current page.\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom extension that provides the\n *     implementation of this service.\n * @param {boolean=} opt_element Whether this service is provided by an\n *     element, not the extension.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDoc(\n  element,\n  id,\n  extension,\n  opt_element\n) {\n  const s = getServicePromiseOrNullForDoc(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (s);\n  }\n  const ampdoc = getAmpdoc(element);\n  return ampdoc\n    .waitForBodyOpen()\n    .then(() =>\n      waitForExtensionIfPresent(ampdoc.win, extension, ampdoc.win.document.head)\n    )\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNullForDoc(element, id);\n      } else if (isElementScheduled(ampdoc.win, extension)) {\n        return getServicePromiseForDoc(element, id);\n      }\n      return null;\n    });\n}\n\n/**\n * Returns a promise for service for the given id in the embed scope of\n * a given element, if it exists. Falls back to ampdoc scope if the element\n * is not embedded.\n *\n * @param {!Element|!ShadowRoot} element\n * @param {string} id of the service.\n * @param {string} extension Name of the custom element that provides\n *     the implementation of this service.\n * @return {!Promise<?Object>}\n */\nexport function getElementServiceIfAvailableForDocInEmbedScope(\n  element,\n  id,\n  extension\n) {\n  const s = getServiceForDocOrNull(element, id);\n  if (s) {\n    return /** @type {!Promise<?Object>} */ (Promise.resolve(s));\n  }\n  return getElementServiceIfAvailableForDoc(element, id, extension);\n}\n\n/**\n * Throws user error if `service` is null.\n * @param {Object} service\n * @param {string} id\n * @param {string} extension\n * @return {!Object}\n * @private\n * @closurePrimitive {asserts.matchesReturn}\n */\nfunction assertService(service, id, extension) {\n  return /** @type {!Object} */ (userAssert(\n    service,\n    'Service %s was requested to be provided through %s, ' +\n      'but %s is not loaded in the current page. To fix this ' +\n      'problem load the JavaScript file for %s in this page.',\n    id,\n    extension,\n    extension,\n    extension\n  ));\n}\n\n/**\n * Get list of all the extension JS files.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Array<string>}\n */\nexport function extensionScriptsInNode(head) {\n  // ampdoc.getHeadNode() can return null.\n  if (!head) {\n    return [];\n  }\n  const scripts = {};\n  // Note: Some extensions don't have [custom-element] or [custom-template]\n  // e.g. amp-viewer-integration.\n  const list = head.querySelectorAll(\n    'script[custom-element],script[custom-template]'\n  );\n  for (let i = 0; i < list.length; i++) {\n    const script = list[i];\n    const name =\n      script.getAttribute('custom-element') ||\n      script.getAttribute('custom-template');\n    scripts[name] = true;\n  }\n  return Object.keys(scripts);\n}\n\n/**\n * Waits for body to be present then verifies that an extension script is\n * present in head for installation.\n * @param {!./service/ampdoc-impl.AmpDoc} ampdoc\n * @param {string} extensionId\n * @return {!Promise<boolean>}\n */\nexport function isExtensionScriptInNode(ampdoc, extensionId) {\n  return ampdoc.waitForBodyOpen().then(() => {\n    return extensionScriptInNode(ampdoc.getHeadNode(), extensionId);\n  });\n}\n\n/**\n * Verifies that an extension script is present in head for\n * installation.\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @param {string} extensionId\n * @return {boolean}\n * @private\n */\nfunction extensionScriptInNode(head, extensionId) {\n  return extensionScriptsInNode(head).includes(extensionId);\n}\n\n/**\n * Waits for an extension if its script is present\n * @param {!Window} win\n * @param {string} extension\n * @param {HTMLHeadElement|Element|ShadowRoot} head\n * @return {!Promise}\n * @private\n */\nfunction waitForExtensionIfPresent(win, extension, head) {\n  /**\n   * If there is an extension script wait for it to load before trying\n   * to get the service. Prevents a race condition when everything but\n   * the extensions is in cache. If there is no script then it's either\n   * not present, or the service was defined by a test. In those cases\n   * we don't wait around for an extension that does not exist.\n   */\n\n  // TODO(jpettitt) investigate registerExtension to short circuit\n  // the dom call in extensionScriptsInNode()\n  if (!extensionScriptInNode(head, extension)) {\n    return Promise.resolve();\n  }\n\n  const extensions = getService(win, 'extensions');\n  return /** @type {!Promise<?Object>} */ (extensions.waitForExtension(\n    win,\n    extension\n  ));\n}\n\n/**\n * Returns the promise for service with `id` on the given window if available.\n * Otherwise, resolves with null (service was not registered).\n * @param {!Window} win\n * @param {string} id\n * @param {string} extension\n * @param {boolean=} opt_element\n * @return {!Promise<Object>}\n * @private\n */\nfunction getElementServicePromiseOrNull(win, id, extension, opt_element) {\n  return dom\n    .waitForBodyOpenPromise(win.document)\n    .then(() => waitForExtensionIfPresent(win, extension, win.document.head))\n    .then(() => {\n      // If this service is provided by an element, then we can't depend on\n      // the service (they may not use the element).\n      if (opt_element) {\n        return getServicePromiseOrNull(win, id);\n      } else if (isElementScheduled(win, extension)) {\n        return getServicePromise(win, id);\n      }\n      return null;\n    });\n}\n", "/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getAmpdoc,\n  getExistingServiceOrNull,\n  getService,\n  getServiceForDoc,\n  getServiceForDocOrNull,\n  getServiceInEmbedWin,\n  getServicePromiseForDoc,\n} from './service';\nimport {\n  getElementServiceForDoc,\n  getElementServiceIfAvailable,\n  getElementServiceIfAvailableForDoc,\n  getElementServiceIfAvailableForDocInEmbedScope,\n} from './element-service';\n\n/** @typedef {!../extensions/amp-subscriptions/0.1/amp-subscriptions.SubscriptionService} */\nexport let SubscriptionService;\n\nexport class Services {\n  /**\n   * Hint: Add extensions folder path to compile.js with\n   * warnings cannot find modules.\n   */\n\n  /**\n   * Returns a promise for the Access service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Access service or a promise for null if the\n   * service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>}\n   */\n  static accessServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-access/0.1/amp-access.AccessService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'access',\n      'amp-access'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!SubscriptionService>}\n   */\n  static subscriptionsServiceForDoc(element) {\n    return /** @type {!Promise<!SubscriptionService>} */ (getElementServiceForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * Returns a promise for the Subscriptions service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?SubscriptionService>}\n   */\n  static subscriptionsServiceForDocOrNull(element) {\n    return /** @type {!Promise<?SubscriptionService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'subscriptions',\n      'amp-subscriptions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/action-impl.ActionService}\n   */\n  static actionServiceForDoc(element) {\n    return /** @type {!./service/action-impl.ActionService} */ (getServiceForDocOrNull(\n      element,\n      'action'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/standard-actions-impl.StandardActions}\n   */\n  static standardActionsForDoc(element) {\n    return /** @type {!./service/standard-actions-impl.StandardActions} */ (getServiceForDocOrNull(\n      element,\n      'standard-actions'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>}\n   */\n  static activityForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/activity-impl.Activity>} */ (getElementServiceForDoc(\n      element,\n      'activity',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * Returns the global instance of the `AmpDocService` service that can be\n   * used to resolve an ampdoc for any node: either in the single-doc or\n   * shadow-doc environment.\n   * @param {!Window} window\n   * @return {!./service/ampdoc-impl.AmpDocService}\n   */\n  static ampdocServiceFor(window) {\n    return /** @type {!./service/ampdoc-impl.AmpDocService} */ (getService(\n      window,\n      'ampdoc'\n    ));\n  }\n\n  /**\n   * Returns the AmpDoc for the specified context node.\n   * @param {!Node|!./service/ampdoc-impl.AmpDoc} nodeOrAmpDoc\n   * @return {!./service/ampdoc-impl.AmpDoc}\n   */\n  static ampdoc(nodeOrAmpDoc) {\n    return getAmpdoc(nodeOrAmpDoc);\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @param {boolean=} loadAnalytics\n   * @return {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDoc(element, loadAnalytics = false) {\n    if (loadAnalytics) {\n      // Get Extensions service and force load analytics extension.\n      const ampdoc = getAmpdoc(element);\n      Services.extensionsFor(ampdoc.win)./*OK*/ installExtensionForDoc(\n        ampdoc,\n        'amp-analytics'\n      );\n    }\n    return /** @type {!Promise<!../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>}\n   */\n  static analyticsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-analytics/0.1/instrumentation.InstrumentationService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'amp-analytics-instrumentation',\n      'amp-analytics'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/batched-xhr-impl.BatchedXhr}\n   */\n  static batchedXhrFor(window) {\n    return /** @type {!./service/batched-xhr-impl.BatchedXhr} */ (getService(\n      window,\n      'batched-xhr'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>}\n   */\n  static bindForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-bind/0.1/bind-impl.Bind>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'bind',\n      'amp-bind'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>}\n   */\n  static scriptForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-script/0.1/amp-script.AmpScriptService>} */ (getElementServiceIfAvailableForDocInEmbedScope(\n      element,\n      'amp-script',\n      'amp-script'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/cid-impl.CidDef>}\n   */\n  static cidForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/cid-impl.CidDef>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'cid'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/navigation.Navigation}\n   */\n  static navigationForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/navigation.Navigation} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'navigation'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>}\n   */\n  static loaderServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-loader/0.1/amp-loader.LoaderService>} */ (getElementServiceForDoc(\n      element,\n      'loader',\n      'amp-loader'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>}\n   */\n  static standaloneServiceForDoc(element) {\n    return /** @type {!Promise<!../extensions/amp-standalone/0.1/amp-standalone.StandaloneService>} */ (getElementServiceForDoc(\n      element,\n      'standalone',\n      'amp-standalone'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/crypto-impl.Crypto}\n   */\n  static cryptoFor(window) {\n    return /** @type {!./service/crypto-impl.Crypto} */ (getService(\n      window,\n      'crypto'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/document-info-impl.DocumentInfoDef} Info about the doc\n   */\n  static documentInfoForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/document-info-impl.DocInfo} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'documentInfo'\n    )).get();\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/extensions-impl.Extensions}\n   */\n  static extensionsFor(window) {\n    return /** @type {!./service/extensions-impl.Extensions} */ (getService(\n      window,\n      'extensions'\n    ));\n  }\n\n  /**\n   * Returns a service to register callbacks we wish to execute when an\n   * amp-form is submitted.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>}\n   */\n  static formSubmitForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<../extensions/amp-form/0.1/form-submit-service.FormSubmitService>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'form-submit-service'\n    ));\n  }\n\n  /**\n   * Returns service to listen for `hidden` attribute mutations.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/hidden-observer-impl.HiddenObserver}\n   */\n  static hiddenObserverForDoc(element) {\n    return /** @type {!./service/hidden-observer-impl.HiddenObserver} */ (getServiceForDocOrNull(\n      element,\n      'hidden-observer'\n    ));\n  }\n\n  /**\n   * Returns service implemented in service/history-impl.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/history-impl.History}\n   */\n  static historyForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/history-impl.History} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'history'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {!./input.Input}\n   */\n  static inputFor(win) {\n    return getService(win, 'input');\n  }\n\n  /**s\n   * Returns a promise for the Inputmask service.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>}\n   */\n  static inputmaskServiceForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-inputmask/0.1/amp-inputmask.AmpInputmaskService>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'inputmask',\n      'amp-inputmask'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {?./service/loading-indicator.LoadingIndicatorImpl}\n   */\n  static loadingIndicatorOrNull(elementOrAmpDoc) {\n    return /** @type {?./service/loading-indicator.LoadingIndicatorImpl} */ (getServiceForDocOrNull(\n      elementOrAmpDoc,\n      'loadingIndicator'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-next-page/1.0/service.NextPageService}\n   */\n  static nextPageServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-next-page/1.0/service.NextPageService} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'next-page'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/mutator-interface.MutatorInterface}\n   */\n  static mutatorForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/mutator-interface.MutatorInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'mutator'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/owners-interface.OwnersInterface}\n   */\n  static ownersForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/owners-interface.OwnersInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'owners'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceFor(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getService(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/performance-impl.Performance}\n   */\n  static performanceForOrNull(window) {\n    return /** @type {!./service/performance-impl.Performance}*/ (getExistingServiceOrNull(\n      window,\n      'performance'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/platform-impl.Platform}\n   */\n  static platformFor(window) {\n    return /** @type {!./service/platform-impl.Platform} */ (getService(\n      window,\n      'platform'\n    ));\n  }\n\n  /**\n   * Not installed by default; must be installed in extension code before use.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/position-observer/position-observer-impl.PositionObserver}\n   * @throws If the service is not installed.\n   */\n  static positionObserverForDoc(element) {\n    return /** @type {!./service/position-observer/position-observer-impl.PositionObserver} */ (getServiceForDoc(\n      element,\n      'position-observer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./preconnect.PreconnectService}\n   */\n  static preconnectFor(window) {\n    return getService(window, 'preconnect');\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/resources-interface.ResourcesInterface}\n   */\n  static resourcesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/resources-interface.ResourcesInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/resources-interface.ResourcesInterface>}\n   */\n  static resourcesPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/resources-interface.ResourcesInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'resources'\n    ));\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>}\n   */\n  static storyVariableServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService>} */\n      (getElementServiceIfAvailable(win, 'story-variable', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService}\n   */\n  static storyVariableService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/variable-service.AmpStoryVariableService} */\n      (getExistingServiceOrNull(win, 'story-variable'))\n    );\n  }\n\n  /**\n   * Version of the story store service depends on which version of amp-story\n   * the publisher is loading. They all have the same implementation.\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>}\n   */\n  static storyStoreServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService>} */\n      (getElementServiceIfAvailable(win, 'story-store', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService}\n   */\n  static storyStoreService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-store-service.AmpStoryStoreService} */\n      (getExistingServiceOrNull(win, 'story-store'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService}\n   */\n  static storyMediaQueryService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-media-query-service.AmpStoryMediaQueryService} */\n      (getExistingServiceOrNull(win, 'story-media-query'))\n    );\n  }\n\n  /**\n   * Get promise with story request service\n   * @param {!Window} win\n   * @return {?Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>}\n   */\n  static storyRequestServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService>} */\n      (getElementServiceIfAvailable(win, 'story-request', 'amp-story'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService}\n   */\n  static storyRequestService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/amp-story-request-service.AmpStoryRequestService} */\n      (getExistingServiceOrNull(win, 'story-request'))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService}\n   */\n  static mediaPerformanceMetricsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/media-performance-metrics-service.MediaPerformanceMetricsService} */\n      (getExistingServiceOrNull(win, 'media-performance-metrics'))\n    );\n  }\n\n  /**\n   * @param {!Element} el\n   * @return {!Promise<./service/localization.LocalizationService>}\n   */\n  static localizationServiceForOrNull(el) {\n    return /** @type {!Promise<?./service/localization.LocalizationService>} */ (getServicePromiseForDoc(\n      el,\n      'localization'\n    ));\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {?./service/localization.LocalizationService}\n   */\n  static localizationForDoc(element) {\n    return /** @type {?./service/localization.LocalizationService} */ (getServiceForDocOrNull(\n      element,\n      'localization'\n    ));\n  }\n\n  /**\n   * TODO(#14357): Remove this when amp-story:0.1 is deprecated.\n   * @param {!Window} win\n   * @return {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>}\n   */\n  static storyAnalyticsServiceForOrNull(win) {\n    return (\n      /** @type {!Promise<?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService>} */\n      (getElementServiceIfAvailable(win, 'story-analytics', 'amp-story', true))\n    );\n  }\n\n  /**\n   * @param {!Window} win\n   * @return {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService}\n   */\n  static storyAnalyticsService(win) {\n    return (\n      /** @type {?../extensions/amp-story/1.0/story-analytics.StoryAnalyticsService} */\n      (getExistingServiceOrNull(win, 'story-analytics'))\n    );\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>}\n   */\n  static webAnimationServiceFor(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-animation/0.1/web-animation-service.WebAnimationService>} */\n      (getElementServiceForDoc(element, 'web-animation', 'amp-animation'))\n    );\n  }\n\n  /**\n   * @param {!Element|!../service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<RealTimeConfigManager>}\n   */\n  static realTimeConfigForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<RealTimeConfigManager>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'real-time-config'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   */\n  static storageForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/storage-impl.Storage>}\n   * TODO(dmanek): Add tests for this method.\n   */\n  static storageForTopLevelDoc(elementOrAmpDoc) {\n    const thisAmpdoc = Services.ampdoc(elementOrAmpDoc);\n    const ampdocService = Services.ampdocServiceFor(thisAmpdoc.win);\n    const topAmpdoc = ampdocService.isSingleDoc()\n      ? ampdocService.getSingleDoc()\n      : null;\n    // We need to verify that ampdocs are on the same origin, therefore\n    // we compare the windows of both.\n    const ampdoc =\n      topAmpdoc && topAmpdoc.win == thisAmpdoc.win ? topAmpdoc : thisAmpdoc;\n    return /** @type {!Promise<!./service/storage-impl.Storage>} */ (getServicePromiseForDoc(\n      ampdoc,\n      'storage'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/template-impl.Templates}\n   */\n  static templatesForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/template-impl.Templates} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'templates'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/timer-impl.Timer}\n   */\n  static timerFor(window) {\n    // TODO(alabiaga): This will always return the top window's Timer service.\n    return /** @type {!./service/timer-impl.Timer} */ (getServiceInEmbedWin(\n      window,\n      'timer'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-replacements-impl.UrlReplacements}\n   */\n  static urlReplacementsForDoc(element) {\n    return /** @type {!./service/url-replacements-impl.UrlReplacements} */ (getServiceForDocOrNull(\n      element,\n      'url-replace'\n    ));\n  }\n\n  /**\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>}\n   */\n  static userNotificationManagerForDoc(element) {\n    return (\n      /** @type {!Promise<!../extensions/amp-user-notification/0.1/amp-user-notification.UserNotificationManager>} */\n      (getElementServiceForDoc(\n        element,\n        'userNotificationManager',\n        'amp-user-notification'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the consentPolicy Service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>}\n   */\n  static consentPolicyServiceForDocOrNull(element) {\n    return (\n      /** @type {!Promise<?../extensions/amp-consent/0.1/consent-policy-manager.ConsentPolicyManager>} */\n      (getElementServiceIfAvailableForDoc(\n        element,\n        'consentPolicyManager',\n        'amp-consent'\n      ))\n    );\n  }\n\n  /**\n   * Returns a promise for the geo service or a promise for null if\n   * the service is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>}\n   */\n  static geoForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-geo/0.1/amp-geo.GeoDef>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'geo',\n      'amp-geo',\n      true\n    ));\n  }\n\n  /**\n   * Unlike most service getters, passing `Node` is necessary for some FIE-scope\n   * services since sometimes we only have the FIE Document for context.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!./service/url-impl.Url}\n   */\n  static urlForDoc(element) {\n    return /** @type {!./service/url-impl.Url} */ (getServiceForDocOrNull(\n      element,\n      'url'\n    ));\n  }\n\n  /**\n   * Returns a promise for the experiment variants or a promise for null if it\n   * is not available on the current page.\n   * @param {!Element|!ShadowRoot} element\n   * @return {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>}\n   */\n  static variantsForDocOrNull(element) {\n    return /** @type {!Promise<?../extensions/amp-experiment/0.1/variant.Variants>} */ (getElementServiceIfAvailableForDoc(\n      element,\n      'variant',\n      'amp-experiment',\n      true\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/video-manager-impl.VideoManager}\n   */\n  static videoManagerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/video-manager-impl.VideoManager} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'video-manager'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewer-interface.ViewerInterface}\n   */\n  static viewerForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewer-interface.ViewerInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * Returns promise for the viewer. This is an unusual case and necessary only\n   * for services that need reference to the viewer before it has been\n   * initialized. Most of the code, however, just should use `viewerForDoc`.\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!Promise<!./service/viewer-interface.ViewerInterface>}\n   */\n  static viewerPromiseForDoc(elementOrAmpDoc) {\n    return /** @type {!Promise<!./service/viewer-interface.ViewerInterface>} */ (getServicePromiseForDoc(\n      elementOrAmpDoc,\n      'viewer'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/vsync-impl.Vsync}\n   */\n  static vsyncFor(window) {\n    return /** @type {!./service/vsync-impl.Vsync} */ (getService(\n      window,\n      'vsync'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!./service/viewport/viewport-interface.ViewportInterface}\n   */\n  static viewportForDoc(elementOrAmpDoc) {\n    return /** @type {!./service/viewport/viewport-interface.ViewportInterface} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'viewport'\n    ));\n  }\n\n  /**\n   * @param {!Window} window\n   * @return {!./service/xhr-impl.Xhr}\n   */\n  static xhrFor(window) {\n    return /** @type {!./service/xhr-impl.Xhr} */ (getService(window, 'xhr'));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService}\n   */\n  static assistjsFrameServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-assistant-assistjs/0.1/assistjs-frame-service.AssistjsFrameService} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'assistjs-frame-service'\n    ));\n  }\n\n  /**\n   * @param {!Element|!./service/ampdoc-impl.AmpDoc} elementOrAmpDoc\n   * @return {!../extensions/amp-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService}\n   */\n  static assistjsConfigServiceForDoc(elementOrAmpDoc) {\n    return /** @type {!../extensions/amp-assistant-assistjs/0.1/assistjs-config-service.AssistjsConfigService} */ (getServiceForDoc(\n      elementOrAmpDoc,\n      'assistjs-config-service'\n    ));\n  }\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {internalListenImplementation} from './event-helper-listen';\nimport {lastChildElement} from './dom';\nimport {user} from './log';\n\n/** @const {string}  */\nconst LOAD_FAILURE_PREFIX = 'Failed to load:';\n\n/** @const {string} */\nexport const MEDIA_LOAD_FAILURE_SRC_PROPERTY = '__AMP_MEDIA_LOAD_FAILURE_SRC';\n\n/**\n * Returns a CustomEvent with a given type and detail; supports fallback for IE.\n * @param {!Window} win\n * @param {string} type\n * @param {!JsonObject|string|undefined|null} detail\n * @param {EventInit=} opt_eventInit\n * @return {!Event}\n */\nexport function createCustomEvent(win, type, detail, opt_eventInit) {\n  const eventInit = /** @type {!CustomEventInit} */ ({detail});\n  Object.assign(eventInit, opt_eventInit);\n  // win.CustomEvent is a function on Edge, Chrome, FF, Safari but\n  // is an object on IE 11.\n  if (IS_ESM || typeof win.CustomEvent == 'function') {\n    return new win.CustomEvent(type, eventInit);\n  } else {\n    // Deprecated fallback for IE.\n    const e = win.document.createEvent('CustomEvent');\n    e.initCustomEvent(\n      type,\n      !!eventInit.bubbles,\n      !!eventInit.cancelable,\n      detail\n    );\n    return e;\n  }\n}\n\n/**\n * Listens for the specified event on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listen(element, eventType, listener, opt_evtListenerOpts) {\n  return internalListenImplementation(\n    element,\n    eventType,\n    listener,\n    opt_evtListenerOpts\n  );\n}\n\n/**\n * Returns the data property of an event with the correct type.\n * @param {!Event|{data: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getData(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.data);\n}\n\n/**\n * Returns the detail property of an event with the correct type.\n * @param {!Event|{detail: !JsonObject}} event\n * @return {?JsonObject|string|undefined}\n */\nexport function getDetail(event) {\n  return /** @type {?JsonObject|string|undefined} */ (event.detail);\n}\n\n/**\n * Listens for the specified event on the element and removes the listener\n * as soon as event has been received.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {function(!Event)} listener\n * @param {Object=} opt_evtListenerOpts\n * @return {!UnlistenDef}\n */\nexport function listenOnce(element, eventType, listener, opt_evtListenerOpts) {\n  let localListener = listener;\n  const unlisten = internalListenImplementation(\n    element,\n    eventType,\n    (event) => {\n      try {\n        localListener(event);\n      } finally {\n        // Ensure listener is GC'd\n        localListener = null;\n        unlisten();\n      }\n    },\n    opt_evtListenerOpts\n  );\n  return unlisten;\n}\n\n/**\n * Returns  a promise that will resolve as soon as the specified event has\n * fired on the element.\n * @param {!EventTarget} element\n * @param {string} eventType\n * @param {Object=} opt_evtListenerOpts\n * @param {function(!UnlistenDef)=} opt_cancel An optional function that, when\n *     provided, will be called with the unlistener. This gives the caller\n *     access to the unlistener, so it may be called manually when necessary.\n * @return {!Promise<!Event>}\n */\nexport function listenOncePromise(\n  element,\n  eventType,\n  opt_evtListenerOpts,\n  opt_cancel\n) {\n  let unlisten;\n  const eventPromise = new Promise((resolve) => {\n    unlisten = listenOnce(element, eventType, resolve, opt_evtListenerOpts);\n  });\n  eventPromise.then(unlisten, unlisten);\n  if (opt_cancel) {\n    opt_cancel(unlisten);\n  }\n  return eventPromise;\n}\n\n/**\n * Whether the specified element/window has been loaded already.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nexport function isLoaded(eleOrWindow) {\n  return !!(\n    eleOrWindow.complete ||\n    eleOrWindow.readyState == 'complete' ||\n    (isHTMLMediaElement(eleOrWindow) && eleOrWindow.readyState > 0) ||\n    // If the passed in thing is a Window, infer loaded state from\n    //\n    (eleOrWindow.document && eleOrWindow.document.readyState == 'complete')\n  );\n}\n\n/**\n * Returns a promise that will resolve or fail based on the eleOrWindow's 'load'\n * and 'error' events. Optionally this method takes a timeout, which will reject\n * the promise if the resource has not loaded by then.\n * @param {T} eleOrWindow Supports both Elements and as a special case Windows.\n * @return {!Promise<T>}\n * @template T\n */\nexport function loadPromise(eleOrWindow) {\n  let unlistenLoad;\n  let unlistenError;\n  if (isLoaded(eleOrWindow)) {\n    return Promise.resolve(eleOrWindow);\n  }\n  const isMediaElement = isHTMLMediaElement(eleOrWindow);\n  if (\n    isMediaElement &&\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] === eleOrWindow.currentSrc\n  ) {\n    return Promise.reject(eleOrWindow);\n  }\n  const loadingPromise = new Promise((resolve, reject) => {\n    // Listen once since IE 5/6/7 fire the onload event continuously for\n    // animated GIFs.\n    if (isMediaElement) {\n      // The following event can be triggered by the media or one of its\n      // sources. Using capture is required as the media events do not bubble.\n      unlistenLoad = listenOnce(eleOrWindow, 'loadedmetadata', resolve, {\n        capture: true,\n      });\n    } else {\n      unlistenLoad = listenOnce(eleOrWindow, 'load', resolve);\n    }\n    // Don't unlisten on error for Windows.\n    if (!eleOrWindow.tagName) {\n      return;\n    }\n    let errorTarget = eleOrWindow;\n    // If the media element has no `src`, it will try to load the sources in\n    // document order. If the last source errors, then the media element\n    // loading errored.\n    if (isMediaElement && !eleOrWindow.hasAttribute('src')) {\n      errorTarget = lastChildElement(\n        eleOrWindow,\n        (child) => child.tagName === 'SOURCE'\n      );\n      if (!errorTarget) {\n        return reject(new Error('Media has no source.'));\n      }\n    }\n    unlistenError = listenOnce(errorTarget, 'error', reject);\n  });\n\n  return loadingPromise.then(\n    () => {\n      if (unlistenError) {\n        unlistenError();\n      }\n      return eleOrWindow;\n    },\n    () => {\n      if (unlistenLoad) {\n        unlistenLoad();\n      }\n      failedToLoad(eleOrWindow);\n    }\n  );\n}\n\n/**\n * Emit error on load failure.\n * @param {!Element|!Window} eleOrWindow Supports both Elements and as a special\n *     case Windows.\n */\nfunction failedToLoad(eleOrWindow) {\n  // Mark the element as errored since some elements - like HTMLMediaElement\n  // using HTMLSourceElement - do not provide any synchronous way to verify if\n  // they already errored, even though the error event was already dispatched.\n  if (isHTMLMediaElement(eleOrWindow)) {\n    eleOrWindow[MEDIA_LOAD_FAILURE_SRC_PROPERTY] =\n      eleOrWindow.currentSrc || true;\n  }\n\n  // Report failed loads as user errors so that they automatically go\n  // into the \"document error\" bucket.\n  let target = eleOrWindow;\n  if (target && target.src) {\n    target = target.src;\n  }\n  throw user().createError(LOAD_FAILURE_PREFIX, target);\n}\n\n/**\n * Returns true if the parameter is a HTMLMediaElement.\n * @param {!Element|!Window} eleOrWindow\n * @return {boolean}\n */\nfunction isHTMLMediaElement(eleOrWindow) {\n  return eleOrWindow.tagName === 'AUDIO' || eleOrWindow.tagName === 'VIDEO';\n}\n\n/**\n * Returns true if this error message is was created for a load error.\n * @param {string} message An error message\n * @return {boolean}\n */\nexport function isLoadErrorMessage(message) {\n  return message.indexOf(LOAD_FAILURE_PREFIX) != -1;\n}\n", "/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AmpEvents} from './amp-events';\nimport {Services} from './services';\nimport {\n  USER_ERROR_SENTINEL,\n  dev,\n  duplicateErrorIfNecessary,\n  isUserErrorEmbed,\n  isUserErrorMessage,\n} from './log';\nimport {dict} from './utils/object';\nimport {experimentTogglesOrNull, getBinaryType, isCanary} from './experiments';\nimport {exponentialBackoff} from './exponential-backoff';\nimport {getMode} from './mode';\nimport {isLoadErrorMessage} from './event-helper';\nimport {isProxyOrigin} from './url';\nimport {makeBodyVisibleRecovery} from './style-installer';\nimport {triggerAnalyticsEvent} from './analytics';\nimport {urls} from './config';\n\n/**\n * @const {string}\n */\nconst CANCELLED = 'CANCELLED';\n\n/**\n * @const {string}\n */\nconst BLOCK_BY_CONSENT = 'BLOCK_BY_CONSENT';\n\n/**\n * @const {string}\n */\nconst ABORTED = 'AbortError';\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD = 0.001;\n\n/**\n * The threshold for errors throttled because nothing can be done about\n * them, but we'd still like to report the rough number.\n * @const {number}\n */\nconst USER_ERROR_THROTTLE_THRESHOLD = 0.1;\n\n/**\n * Chance to post to the new error reporting endpoint.\n * @const {number}\n */\nconst BETA_ERROR_REPORT_URL_FREQ = 0.1;\n\n/**\n * Collects error messages, so they can be included in subsequent reports.\n * That allows identifying errors that might be caused by previous errors.\n */\nlet accumulatedErrorMessages = self.__AMP_ERRORS || [];\n// Use a true global, to avoid multi-module inclusion issues.\nself.__AMP_ERRORS = accumulatedErrorMessages;\n\n/**\n * Pushes element into array, keeping at most the most recent limit elements\n *\n * @param {!Array<T>} array\n * @param {T} element\n * @param {number} limit\n * @template T\n */\nfunction pushLimit(array, element, limit) {\n  if (array.length >= limit) {\n    array.splice(0, array.length - limit + 1);\n  }\n  array.push(element);\n}\n\n/**\n * A wrapper around our exponentialBackoff, to lazy initialize it to avoid an\n * un-DCE'able side-effect.\n * @param {function()} work the function to execute after backoff\n * @return {number} the setTimeout id\n */\nlet reportingBackoff = function (work) {\n  // Set reportingBackoff as the lazy-created function. JS Vooodoooo.\n  reportingBackoff = exponentialBackoff(1.5);\n  return reportingBackoff(work);\n};\n\n/**\n * Attempts to stringify a value, falling back to String.\n * @param {*} value\n * @return {string}\n */\nfunction tryJsonStringify(value) {\n  try {\n    // Cast is fine, because we really don't care here. Just trying.\n    return JSON.stringify(/** @type {!JsonObject} */ (value));\n  } catch (e) {\n    return String(value);\n  }\n}\n\n/**\n * The true JS engine, as detected by inspecting an Error stack. This should be\n * used with the userAgent to tell definitely. I.e., Chrome on iOS is really a\n * Safari JS engine.\n */\nlet detectedJsEngine;\n\n/**\n * @param {!Window} win\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n */\nexport function reportErrorForWin(win, error, opt_associatedElement) {\n  reportError(error, opt_associatedElement);\n  if (\n    error &&\n    !!win &&\n    isUserErrorMessage(error.message) &&\n    !isUserErrorEmbed(error.message)\n  ) {\n    reportErrorToAnalytics(/** @type {!Error} */ (error), win);\n  }\n}\n\n/**\n * Reports an error. If the error has an \"associatedElement\" property\n * the element is marked with the `i-amphtml-element-error` and displays\n * the message itself. The message is always send to the console.\n * If the error has a \"messageArray\" property, that array is logged.\n * This way one gets the native fidelity of the console for things like\n * elements instead of stringification.\n * @param {*} error\n * @param {!Element=} opt_associatedElement\n * @return {!Error}\n */\nexport function reportError(error, opt_associatedElement) {\n  try {\n    // Convert error to the expected type.\n    let isValidError;\n    if (error) {\n      if (error.message !== undefined) {\n        error = duplicateErrorIfNecessary(/** @type {!Error} */ (error));\n        isValidError = true;\n      } else {\n        const origError = error;\n        error = new Error(tryJsonStringify(origError));\n        error.origError = origError;\n      }\n    } else {\n      error = new Error('Unknown error');\n    }\n    // Report if error is not an expected type.\n    if (!isValidError && getMode().localDev && !getMode().test) {\n      setTimeout(function () {\n        const rethrow = new Error(\n          '_reported_ Error reported incorrectly: ' + error\n        );\n        throw rethrow;\n      });\n    }\n\n    if (error.reported) {\n      return /** @type {!Error} */ (error);\n    }\n    error.reported = true;\n\n    // Update element.\n    const element = opt_associatedElement || error.associatedElement;\n    if (element && element.classList) {\n      element.classList.add('i-amphtml-error');\n      if (getMode().development) {\n        element.classList.add('i-amphtml-element-error');\n        element.setAttribute('error-message', error.message);\n      }\n    }\n\n    // Report to console.\n    if (\n      self.console &&\n      (isUserErrorMessage(error.message) ||\n        !error.expected ||\n        getMode().localDev)\n    ) {\n      const output = console.error || console.log;\n      if (error.messageArray) {\n        output.apply(console, error.messageArray);\n      } else {\n        if (element) {\n          output.call(console, error.message, element);\n        } else if (!getMode().minified) {\n          output.call(console, error.stack);\n        } else {\n          output.call(console, error.message);\n        }\n      }\n    }\n    if (element && element.dispatchCustomEventForTesting) {\n      element.dispatchCustomEventForTesting(AmpEvents.ERROR, error.message);\n    }\n\n    // 'call' to make linter happy. And .call to make compiler happy\n    // that expects some @this.\n    onError['call'](self, undefined, undefined, undefined, undefined, error);\n  } catch (errorReportingError) {\n    setTimeout(function () {\n      throw errorReportingError;\n    });\n  }\n  return /** @type {!Error} */ (error);\n}\n\n/**\n * Returns an error for a cancellation of a promise.\n * @return {!Error}\n */\nexport function cancellation() {\n  return new Error(CANCELLED);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isCancellation(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(CANCELLED);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(CANCELLED);\n  }\n  return false;\n}\n\n/**\n * Returns an error for component blocked by consent\n * @return {!Error}\n */\nexport function blockedByConsentError() {\n  return new Error(BLOCK_BY_CONSENT);\n}\n\n/**\n * @param {*} errorOrMessage\n * @return {boolean}\n */\nexport function isBlockedByConsent(errorOrMessage) {\n  if (!errorOrMessage) {\n    return false;\n  }\n  if (typeof errorOrMessage == 'string') {\n    return errorOrMessage.startsWith(BLOCK_BY_CONSENT);\n  }\n  if (typeof errorOrMessage.message == 'string') {\n    return errorOrMessage.message.startsWith(BLOCK_BY_CONSENT);\n  }\n  return false;\n}\n\n/**\n * Install handling of global unhandled exceptions.\n * @param {!Window} win\n */\nexport function installErrorReporting(win) {\n  win.onerror = /** @type {!Function} */ (onError);\n  win.addEventListener('unhandledrejection', (event) => {\n    if (\n      event.reason &&\n      (event.reason.message === CANCELLED ||\n        event.reason.message === BLOCK_BY_CONSENT ||\n        event.reason.message === ABORTED)\n    ) {\n      event.preventDefault();\n      return;\n    }\n    reportError(event.reason || new Error('rejected promise ' + event));\n  });\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @this {!Window|undefined}\n */\nfunction onError(message, filename, line, col, error) {\n  // Make an attempt to unhide the body but don't if the error is actually expected.\n  // eslint-disable-next-line local/no-invalid-this\n  if (this && this.document && (!error || !error.expected)) {\n    // eslint-disable-next-line local/no-invalid-this\n    makeBodyVisibleRecovery(this.document);\n  }\n  if (getMode().localDev || getMode().development || getMode().test) {\n    return;\n  }\n  let hasNonAmpJs = false;\n  try {\n    hasNonAmpJs = detectNonAmpJs(self);\n  } catch (ignore) {\n    // Ignore errors during error report generation.\n  }\n  if (hasNonAmpJs && Math.random() > 0.01) {\n    // Only report 1% of errors on pages with non-AMP JS.\n    // These errors can almost never be acted upon, but spikes such as\n    // due to buggy browser extensions may be helpful to notify authors.\n    return;\n  }\n  const data = getErrorReportData(\n    message,\n    filename,\n    line,\n    col,\n    error,\n    hasNonAmpJs\n  );\n  if (data) {\n    reportingBackoff(() => {\n      try {\n        return reportErrorToServerOrViewer(\n          // eslint-disable-next-line local/no-invalid-this\n          this,\n          /** @type {!JsonObject} */\n          (data)\n        ).catch(() => {\n          // catch async errors to avoid recursive errors.\n        });\n      } catch (e) {\n        // catch async errors to avoid recursive errors.\n      }\n    });\n  }\n}\n\n/**\n * Determines the error reporting endpoint which should be used.\n * If changing this URL, keep `/spec/amp-errors.md` in sync.\n * @return {string} error reporting endpoint URL.\n */\nfunction chooseReportingUrl_() {\n  return Math.random() < BETA_ERROR_REPORT_URL_FREQ\n    ? urls.betaErrorReporting\n    : urls.errorReporting;\n}\n\n/**\n * Passes the given error data to either server or viewer.\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {Promise<undefined>}\n */\nexport function reportErrorToServerOrViewer(win, data) {\n  // Report the error to viewer if it has the capability. The data passed\n  // to the viewer is exactly the same as the data passed to the server\n  // below.\n\n  // Throttle reports from Stable by 90%.\n  if (data['pt'] && Math.random() < 0.9) {\n    return Promise.resolve();\n  }\n\n  return maybeReportErrorToViewer(win, data).then((reportedErrorToViewer) => {\n    if (!reportedErrorToViewer) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', chooseReportingUrl_(), true);\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n\n/**\n * Passes the given error data to the viewer if the following criteria is met:\n * - The viewer is a trusted viewer\n * - The viewer has the `errorReporter` capability\n * - The AMP doc is in single doc mode\n * - The AMP doc is opted-in for error interception (`<html>` tag has the\n *   `report-errors-to-viewer` attribute)\n *\n * @param {!Window} win\n * @param {!JsonObject} data Data from `getErrorReportData`.\n * @return {!Promise<boolean>} `Promise<True>` if the error was sent to the\n *     viewer, `Promise<False>` otherwise.\n * @visibleForTesting\n */\nexport function maybeReportErrorToViewer(win, data) {\n  const ampdocService = Services.ampdocServiceFor(win);\n  if (!ampdocService.isSingleDoc()) {\n    return Promise.resolve(false);\n  }\n  const ampdocSingle = ampdocService.getSingleDoc();\n  const htmlElement = ampdocSingle.getRootNode().documentElement;\n  const docOptedIn = htmlElement.hasAttribute('report-errors-to-viewer');\n  if (!docOptedIn) {\n    return Promise.resolve(false);\n  }\n  const viewer = Services.viewerForDoc(ampdocSingle);\n  if (!viewer.hasCapability('errorReporter')) {\n    return Promise.resolve(false);\n  }\n  return viewer.isTrustedViewer().then((viewerTrusted) => {\n    if (!viewerTrusted) {\n      return false;\n    }\n    viewer.sendMessage('error', errorReportingDataForViewer(data));\n    return true;\n  });\n}\n\n/**\n * Strips down the error reporting data to a minimal set\n * to be sent to the viewer.\n * @param {!JsonObject} errorReportData\n * @return {!JsonObject}\n * @visibleForTesting\n */\nexport function errorReportingDataForViewer(errorReportData) {\n  return dict({\n    'm': errorReportData['m'], // message\n    'a': errorReportData['a'], // isUserError\n    's': errorReportData['s'], // error stack\n    'el': errorReportData['el'], // tagName\n    'ex': errorReportData['ex'], // expected error?\n    'v': errorReportData['v'], // runtime\n    'pt': errorReportData['pt'], // is pre-throttled\n    'jse': errorReportData['jse'], // detectedJsEngine\n  });\n}\n\n/**\n * @param {string|undefined}  message\n * @param {*|undefined} error\n * @return {string}\n */\nfunction buildErrorMessage_(message, error) {\n  if (error) {\n    if (error.message) {\n      message = error.message;\n    } else {\n      // This should never be a string, but sometimes it is.\n      message = String(error);\n    }\n  }\n  if (!message) {\n    message = 'Unknown error';\n  }\n\n  return message;\n}\n\n/**\n * Signature designed, so it can work with window.onerror\n * @param {string|undefined} message\n * @param {string|undefined} filename\n * @param {string|undefined} line\n * @param {string|undefined} col\n * @param {*|undefined} error\n * @param {boolean} hasNonAmpJs\n * @return {!JsonObject|undefined} The data to post\n * visibleForTesting\n */\nexport function getErrorReportData(\n  message,\n  filename,\n  line,\n  col,\n  error,\n  hasNonAmpJs\n) {\n  message = buildErrorMessage_(message, error);\n  // An \"expected\" error is still an error, i.e. some features are disabled\n  // or not functioning fully because of it. However, it's an expected\n  // error. E.g. as is the case with some browser API missing (storage).\n  // Thus, the error can be classified differently by log aggregators.\n  // The main goal is to monitor that an \"expected\" error doesn't deteriorate\n  // over time. It's impossible to completely eliminate it.\n  let expected = !!(error && error.expected);\n  if (/_reported_/.test(message)) {\n    return;\n  }\n  if (message == CANCELLED) {\n    return;\n  }\n\n  const detachedWindow = !(self && self.window);\n  const throttleBase = Math.random();\n\n  // We throttle load errors and generic \"Script error.\" errors\n  // that have no information and thus cannot be acted upon.\n  if (\n    isLoadErrorMessage(message) ||\n    // See https://github.com/ampproject/amphtml/issues/7353\n    // for context.\n    message == 'Script error.' ||\n    // Window has become detached, really anything can happen\n    // at this point.\n    detachedWindow\n  ) {\n    expected = true;\n\n    if (throttleBase > NON_ACTIONABLE_ERROR_THROTTLE_THRESHOLD) {\n      return;\n    }\n  }\n\n  const isUserError = isUserErrorMessage(message);\n\n  // Only report a subset of user errors.\n  if (isUserError && throttleBase > USER_ERROR_THROTTLE_THRESHOLD) {\n    return;\n  }\n\n  // This is the App Engine app in\n  // https://github.com/ampproject/error-tracker\n  // It stores error reports via https://cloud.google.com/error-reporting/\n  // for analyzing production issues.\n  const data = /** @type {!JsonObject} */ (Object.create(null));\n  data['v'] = getMode().rtvVersion;\n  data['noAmp'] = hasNonAmpJs ? '1' : '0';\n  data['m'] = message.replace(USER_ERROR_SENTINEL, '');\n  data['a'] = isUserError ? '1' : '0';\n\n  // Errors are tagged with \"ex\" (\"expected\") label to allow loggers to\n  // classify these errors as benchmarks and not exceptions.\n  data['ex'] = expected ? '1' : '0';\n  data['dw'] = detachedWindow ? '1' : '0';\n\n  let runtime = '1p';\n  if (IS_SXG) {\n    runtime = 'sxg';\n    data['sxg'] = '1';\n  } else if (IS_ESM) {\n    runtime = 'esm';\n    data['esm'] = '1';\n  } else if (self.context && self.context.location) {\n    data['3p'] = '1';\n    runtime = '3p';\n  } else if (getMode().runtime) {\n    runtime = getMode().runtime;\n  }\n\n  data['rt'] = runtime;\n\n  // Add our a4a id if we are inabox\n  if (runtime === 'inabox') {\n    data['adid'] = getMode().a4aId;\n  }\n\n  // TODO(erwinm): Remove ca when all systems read `bt` instead of `ca` to\n  // identify js binary type.\n  data['ca'] = isCanary(self) ? '1' : '0';\n\n  // Pass binary type.\n  data['bt'] = getBinaryType(self);\n\n  if (self.location.ancestorOrigins && self.location.ancestorOrigins[0]) {\n    data['or'] = self.location.ancestorOrigins[0];\n  }\n  if (self.viewerState) {\n    data['vs'] = self.viewerState;\n  }\n  // Is embedded?\n  if (self.parent && self.parent != self) {\n    data['iem'] = '1';\n  }\n\n  if (self.AMP && self.AMP.viewer) {\n    const resolvedViewerUrl = self.AMP.viewer.getResolvedViewerUrl();\n    const messagingOrigin = self.AMP.viewer.maybeGetMessagingOrigin();\n    if (resolvedViewerUrl) {\n      data['rvu'] = resolvedViewerUrl;\n    }\n    if (messagingOrigin) {\n      data['mso'] = messagingOrigin;\n    }\n  }\n\n  if (!detectedJsEngine) {\n    detectedJsEngine = detectJsEngineFromStack();\n  }\n  data['jse'] = detectedJsEngine;\n\n  const exps = [];\n  const experiments = experimentTogglesOrNull(self);\n  for (const exp in experiments) {\n    const on = experiments[exp];\n    exps.push(`${exp}=${on ? '1' : '0'}`);\n  }\n  data['exps'] = exps.join(',');\n\n  if (error) {\n    const tagName = error.associatedElement\n      ? error.associatedElement.tagName\n      : 'u'; // Unknown\n    data['el'] = tagName;\n\n    if (error.args) {\n      data['args'] = JSON.stringify(error.args);\n    }\n\n    if (!isUserError && !error.ignoreStack && error.stack) {\n      data['s'] = error.stack;\n    }\n\n    // TODO(jridgewell, #18574); Make sure error is always an object.\n    if (error.message) {\n      error.message += ' _reported_';\n    }\n  } else {\n    data['f'] = filename || '';\n    data['l'] = line || '';\n    data['c'] = col || '';\n  }\n  data['r'] = self.document ? self.document.referrer : '';\n  data['ae'] = accumulatedErrorMessages.join(',');\n  data['fr'] = self.location.originalHash || self.location.hash;\n\n  // TODO(https://github.com/ampproject/error-tracker/issues/129): Remove once\n  // all clients are serving a version with pre-throttling.\n  if (data['bt'] === 'production') {\n    // Setting this field allows the error reporting service to know that this\n    // error has already been pre-throttled for Stable, so it doesn't need to\n    // throttle again.\n    data['pt'] = '1';\n  }\n\n  pushLimit(accumulatedErrorMessages, message, 25);\n\n  return data;\n}\n\n/**\n * Returns true if it appears like there is non-AMP JS on the\n * current page.\n * @param {!Window} win\n * @return {boolean}\n * @visibleForTesting\n */\nexport function detectNonAmpJs(win) {\n  if (!win.document) {\n    return false;\n  }\n  const scripts = win.document.querySelectorAll('script[src]');\n  for (let i = 0; i < scripts.length; i++) {\n    if (!isProxyOrigin(scripts[i].src.toLowerCase())) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Resets accumulated error messages for testing\n */\nexport function resetAccumulatedErrorMessagesForTesting() {\n  accumulatedErrorMessages = [];\n}\n\n/**\n * Does a series of checks on the stack of an thrown error to determine the\n * JS engine that is currently running. This gives a bit more information than\n * just the UserAgent, since browsers often allow overriding it to \"emulate\"\n * mobile.\n * @return {string}\n * @visibleForTesting\n */\nexport function detectJsEngineFromStack() {\n  /** @constructor */\n  function Fn() {}\n  Fn.prototype.t = function () {\n    throw new Error('message');\n  };\n  const object = new Fn();\n  try {\n    object.t();\n  } catch (e) {\n    const {stack} = e;\n\n    // Safari 12 and under only mentions the method name.\n    if (stack.startsWith('t@')) {\n      return 'Safari';\n    }\n\n    // Firefox mentions \"prototype\".\n    if (stack.indexOf('.prototype.t@') > -1) {\n      return 'Firefox';\n    }\n\n    // IE looks like Chrome, but includes a context for the base stack line.\n    // Explicitly, we're looking for something like:\n    // \"    at Global code (https://example.com/app.js:1:200)\" or\n    // \"    at Anonymous function (https://example.com/app.js:1:200)\"\n    // vs Chrome which has:\n    // \"    at https://example.com/app.js:1:200\"\n    const last = stack.split('\\n').pop();\n    if (/\\bat .* \\(/i.test(last)) {\n      return 'IE';\n    }\n\n    // Finally, chrome includes the error message in the stack.\n    if (stack.startsWith('Error: message')) {\n      return 'Chrome';\n    }\n  }\n\n  return 'unknown';\n}\n\n/**\n * @param {!Error} error\n * @param {!Window} win\n */\nexport function reportErrorToAnalytics(error, win) {\n  // Currently this can only be executed in a single-doc mode. Otherwise,\n  // it's not clear which ampdoc the event would belong too.\n  if (Services.ampdocServiceFor(win).isSingleDoc()) {\n    const vars = dict({\n      'errorName': error.name,\n      'errorMessage': error.message,\n    });\n    triggerAnalyticsEvent(\n      getRootElement_(win),\n      'user-error',\n      vars,\n      /** enableDataVars */ false\n    );\n  }\n}\n\n/**\n * @param {!Window} win\n * @return {!Element}\n * @private\n */\nfunction getRootElement_(win) {\n  const root = Services.ampdocServiceFor(win).getSingleDoc().getRootNode();\n  return dev().assertElement(root.documentElement || root.body || root);\n}\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  pureDevAssert as devAssert,\n  pureUserAssert as userAssert,\n} from '../assert';\n\n/**\n * Parses the date using the `Date.parse()` rules. Additionally supports the\n * keyword \"now\" that indicates the \"current date/time\". Returns either a\n * valid epoch value or null.\n *\n * @param {?string|undefined} s\n * @return {?number}\n */\nexport function parseDate(s) {\n  if (!s) {\n    return null;\n  }\n  if (s.toLowerCase() === 'now') {\n    return Date.now();\n  }\n  const parsed = Date.parse(s);\n  return isNaN(parsed) ? null : parsed;\n}\n\n/**\n * @param {!Date|number|string|T} value\n * @return {number|T}\n * @template T\n */\nexport function getDate(value) {\n  if (!value) {\n    return null;\n  }\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (typeof value == 'string') {\n    return parseDate(value);\n  }\n  // Must be a `Date` object.\n  return value.getTime();\n}\n\n/** Map from attribute names to their parsers. */\nconst dateAttrParsers = {\n  'datetime': (datetime) =>\n    userAssert(parseDate(datetime), 'Invalid date: %s', datetime),\n  'end-date': (datetime) =>\n    userAssert(parseDate(datetime), 'Invalid date: %s', datetime),\n  'timeleft-ms': (timeleftMs) => Date.now() + Number(timeleftMs),\n  'timestamp-ms': (ms) => Number(ms),\n  'timestamp-seconds': (timestampSeconds) => 1000 * Number(timestampSeconds),\n};\n\n/**\n * @param {!Element} element\n * @param {!Array<string>} dateAttrs list of attribute names\n * @return {?number}\n */\nexport function parseDateAttrs(element, dateAttrs) {\n  const epoch = userAssert(\n    parseEpoch(element, dateAttrs),\n    'One of attributes [%s] is required',\n    dateAttrs.join(', ')\n  );\n\n  const offsetSeconds =\n    (Number(element.getAttribute('offset-seconds')) || 0) * 1000;\n  return epoch + offsetSeconds;\n}\n\n/**\n * Parse epoch from list of possible element attributes, returning the first one\n * that is truthy.\n * @param {!Element} element\n * @param {!Array<string>} dateAttrs list of attribute names\n * @return {?number}\n */\nfunction parseEpoch(element, dateAttrs) {\n  // Validate provided dateAttrs outside the loop so it will fail when an\n  // invalid attr is provided, even if that attribute isn't present on the\n  // element.\n  const parsers = dateAttrs.map((attrName) =>\n    devAssert(\n      dateAttrParsers[attrName],\n      'Invalid date attribute \"%s\"',\n      attrName\n    )\n  );\n\n  for (let i = 0; i < dateAttrs.length; ++i) {\n    const attrVal = element.getAttribute(dateAttrs[i]);\n    if (attrVal) {\n      return parsers[i](attrVal);\n    }\n  }\n\n  return null;\n}\n", "/**\n* @license\n* Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n* Use of this source code is governed by a BSD-style\n* license that can be found in the LICENSE file or at\n* https://developers.google.com/open-source/licenses/bsd */\n\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsultion: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to imlement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\n\nexport const ShadowCSS = {\n  strictStyling: false,\n  // change a selector like 'div' to 'name div'\n  /** @this {ShadowCSS} */\n  scopeRules: function(cssRules, scopeSelector, opt_transformer) {\n    var cssText = '';\n    if (cssRules) {\n      Array.prototype.forEach.call(cssRules, function(rule) {\n        if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n          cssText += this.scopeSelector(rule.selectorText, scopeSelector,\n            this.strictStyling, opt_transformer) + ' {\\n\\t';\n          cssText += this.propertiesFromRule(rule) + '\\n}\\n\\n';\n        } else if (rule.type === CSSRule.MEDIA_RULE) {\n          cssText += '@media ' + rule.media.mediaText + ' {\\n';\n          cssText += this.scopeRules(rule.cssRules, scopeSelector);\n          cssText += '\\n}\\n\\n';\n        } else {\n          // KEYFRAMES_RULE in IE throws when we query cssText\n          // when it contains a -webkit- property.\n          // if this happens, we fallback to constructing the rule\n          // from the CSSRuleSet\n          // https://connect.microsoft.com/IE/feedbackdetail/view/955703/accessing-csstext-of-a-keyframe-rule-that-contains-a-webkit-property-via-cssom-generates-exception\n          try {\n            if (rule.cssText) {\n              cssText += rule.cssText + '\\n\\n';\n            }\n          } catch(x) {\n            if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n              cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n            }\n          }\n        }\n      }, this);\n    }\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  ieSafeCssTextFromKeyFrameRule: function(rule) {\n    var cssText = '@keyframes ' + rule.name + ' {';\n    Array.prototype.forEach.call(rule.cssRules, function(rule) {\n      cssText += ' ' + rule.keyText + ' {' + rule.style.cssText + '}';\n    });\n    cssText += ' }';\n    return cssText;\n  },\n  /** @this {ShadowCSS} */\n  scopeSelector: function(selector, scopeSelector, strict, opt_transformer) {\n    var r = [], parts = selector.split(',');\n    parts.forEach(function(p) {\n      p = p.trim();\n      if (opt_transformer) {\n        p = opt_transformer(p);\n      }\n      if (this.selectorNeedsScoping(p, scopeSelector)) {\n        p = (strict && !p.match(polyfillHostNoCombinator)) ?\n            this.applyStrictSelectorScope(p, scopeSelector) :\n            this.applySelectorScope(p, scopeSelector);\n      }\n      r.push(p);\n    }, this);\n    return r.join(', ');\n  },\n  /** @this {ShadowCSS} */\n  selectorNeedsScoping: function(selector, scopeSelector) {\n    if (Array.isArray(scopeSelector)) {\n      return true;\n    }\n    var re = this.makeScopeMatcher(scopeSelector);\n    return !selector.match(re);\n  },\n  /** @this {ShadowCSS} */\n  makeScopeMatcher: function(scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + selectorReSuffix, 'm');\n  },\n  /** @this {ShadowCSS} */\n  applySelectorScope: function(selector, selectorScope) {\n    return Array.isArray(selectorScope) ?\n        this.applySelectorScopeList(selector, selectorScope) :\n        this.applySimpleSelectorScope(selector, selectorScope);\n  },\n  // apply an array of selectors\n  /** @this {ShadowCSS} */\n  applySelectorScopeList: function(selector, scopeSelectorList) {\n    var r = [];\n    for (var i=0, s; (s=scopeSelectorList[i]); i++) {\n      r.push(this.applySimpleSelectorScope(selector, s));\n    }\n    return r.join(', ');\n  },\n  // scope via name and [is=name]\n  /** @this {ShadowCSS} */\n  applySimpleSelectorScope: function(selector, scopeSelector) {\n    if (selector.match(polyfillHostRe)) {\n      selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n      return selector.replace(polyfillHostRe, scopeSelector + ' ');\n    } else {\n      return scopeSelector + ' ' + selector;\n    }\n  },\n  // return a selector with [name] suffix on each simple selector\n  // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]\n  /** @this {ShadowCSS} */\n  applyStrictSelectorScope: function(selector, scopeSelector) {\n    scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, '$1');\n    var splits = [' ', '>', '+', '~'],\n      scoped = selector,\n      attrName = '[' + scopeSelector + ']';\n    splits.forEach(function(sep) {\n      var parts = scoped.split(sep);\n      scoped = parts.map(function(p) {\n        // remove :host since it should be unnecessary\n        var t = p.trim().replace(polyfillHostRe, '');\n        if (t && (splits.indexOf(t) < 0) && (t.indexOf(attrName) < 0)) {\n          p = t.replace(/([^:]*)(:*)(.*)/, '$1' + attrName + '$2$3');\n        }\n        return p;\n      }).join(sep);\n    });\n    return scoped;\n  },\n  /** @this {ShadowCSS} */\n  propertiesFromRule: function(rule) {\n    var cssText = rule.style.cssText;\n    // TODO(sorvell): Safari cssom incorrectly removes quotes from the content\n    // property. (https://bugs.webkit.org/show_bug.cgi?id=118045)\n    // don't replace attr rules\n    if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n      cssText = cssText.replace(/content:[^;]*;/g, 'content: \\'' +\n          rule.style.content + '\\';');\n    }\n    // TODO(sorvell): we can workaround this issue here, but we need a list\n    // of troublesome properties to fix https://github.com/Polymer/platform/issues/53\n    //\n    // inherit rules can be omitted from cssText\n    // TODO(sorvell): remove when Blink bug is fixed:\n    // https://code.google.com/p/chromium/issues/detail?id=358273\n    var style = rule.style;\n    for (var i in style) {\n      if (style[i] === 'initial') {\n        cssText += i + ': initial; ';\n      }\n    }\n    return cssText;\n  }\n};\n\nvar selectorRe = /([^{]*)({[\\s\\S]*?})/gim,\n    cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim,\n    cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    // TODO(sorvell): remove either content or comment\n    cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim,\n    cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim,\n    cssPseudoRe = /::(x-[^\\s{,(]*)/gim,\n    cssPartRe = /::part\\(([^)]*)\\)/gim,\n    // note: :host pre-processed to -shadowcsshost.\n    polyfillHost = '-shadowcsshost',\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    polyfillHostContext = '-shadowcsscontext',\n    parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var cssColonHostRe = new RegExp('(' + polyfillHost + parenSuffix, 'gim'),\n    cssColonHostContextRe = new RegExp('(' + polyfillHostContext + parenSuffix, 'gim'),\n    selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$',\n    colonHostRe = /\\:host/gim,\n    colonHostContextRe = /\\:host-context/gim,\n    /* host name without combinator */\n    polyfillHostNoCombinator = polyfillHost + '-no-combinator',\n    polyfillHostRe = new RegExp(polyfillHost, 'gim'),\n    polyfillHostContextRe = new RegExp(polyfillHostContext, 'gim'),\n    shadowDOMSelectorsRe = [\n      />>>/g,\n      /::shadow/g,\n      /::content/g,\n      // Deprecated selectors\n      /\\/deep\\//g, // former >>>\n      /\\/shadow\\//g, // former ::shadow\n      /\\/shadow-deep\\//g, // former /deep/\n      /\\^\\^/g,     // former /shadow/\n      /\\^(?!=)/g   // former /shadow-deep/\n    ];\n", "/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomWriterBulk, DomWriterStreamer} from './utils/dom-writer';\nimport {Services} from './services';\nimport {ShadowCSS} from '../third_party/webcomponentsjs/ShadowCSS';\nimport {\n  ShadowDomVersion,\n  getShadowDomSupportedVersion,\n  isShadowCssSupported,\n} from './web-components';\nimport {dev, devAssert} from './log';\nimport {escapeCssSelectorIdent} from './css';\nimport {installCssTransformer} from './style-installer';\nimport {iterateCursor} from './dom';\nimport {setInitialDisplay, setStyle} from './style';\nimport {toArray, toWin} from './types';\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_BEG_REGEX = /[^\\.\\-\\_0-9a-zA-Z]/;\n\n/** @const {!RegExp} */\nconst CSS_SELECTOR_END_REGEX = /[^\\-\\_0-9a-zA-Z]/;\n\nconst SHADOW_CSS_CACHE = '__AMP_SHADOW_CSS';\n\n/**\n * @type {boolean|undefined}\n */\nlet shadowDomStreamingSupported;\n\n/**\n * Creates a shadow root for the specified host and returns it. Polyfills\n * shadow root creation if necessary.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nexport function createShadowRoot(hostElement) {\n  const win = toWin(hostElement.ownerDocument.defaultView);\n\n  const existingRoot = hostElement.shadowRoot || hostElement.__AMP_SHADOW_ROOT;\n  if (existingRoot) {\n    existingRoot./*OK*/ innerHTML = '';\n    return existingRoot;\n  }\n\n  let shadowRoot;\n  const shadowDomSupported = getShadowDomSupportedVersion();\n  if (shadowDomSupported == ShadowDomVersion.V1) {\n    shadowRoot = hostElement.attachShadow({mode: 'open'});\n    if (!shadowRoot.styleSheets) {\n      Object.defineProperty(shadowRoot, 'styleSheets', {\n        get: function () {\n          const items = [];\n          iterateCursor(shadowRoot.childNodes, (child) => {\n            if (child.tagName === 'STYLE') {\n              items.push(child.sheet);\n            }\n          });\n          return items;\n        },\n      });\n    }\n  } else if (shadowDomSupported == ShadowDomVersion.V0) {\n    shadowRoot = hostElement.createShadowRoot();\n  } else {\n    shadowRoot = createShadowRootPolyfill(hostElement);\n  }\n\n  if (!isShadowCssSupported()) {\n    const rootId = `i-amphtml-sd-${win.Math.floor(win.Math.random() * 10000)}`;\n    shadowRoot.id = rootId;\n    shadowRoot.host.classList.add(rootId);\n\n    // CSS isolation.\n    installCssTransformer(shadowRoot, (css) => {\n      return transformShadowCss(shadowRoot, css);\n    });\n  }\n\n  return shadowRoot;\n}\n\n/**\n * Shadow root polyfill.\n * @param {!Element} hostElement\n * @return {!ShadowRoot}\n */\nfunction createShadowRootPolyfill(hostElement) {\n  const doc = hostElement.ownerDocument;\n\n  // Host CSS polyfill.\n  hostElement.classList.add('i-amphtml-shadow-host-polyfill');\n  const hostStyle = doc.createElement('style');\n  hostStyle.textContent =\n    '.i-amphtml-shadow-host-polyfill>:not(i-amphtml-shadow-root)' +\n    '{display:none!important}';\n  hostElement.appendChild(hostStyle);\n\n  // Shadow root.\n  const shadowRoot /** @type {!ShadowRoot} */ =\n    // Cast to ShadowRoot even though it is an Element\n    // TODO(@dvoytenko) Consider to switch to a type union instead.\n    /** @type {?}  */ (doc.createElement('i-amphtml-shadow-root'));\n  hostElement.appendChild(shadowRoot);\n  hostElement.__AMP_SHADOW_ROOT = shadowRoot;\n  Object.defineProperty(hostElement, 'shadowRoot', {\n    enumerable: true,\n    configurable: true,\n    value: shadowRoot,\n  });\n\n  // API: https://www.w3.org/TR/shadow-dom/#the-shadowroot-interface\n\n  shadowRoot.host = hostElement;\n\n  // `getElementById` is resolved via `querySelector('#id')`.\n  shadowRoot.getElementById = function (id) {\n    const escapedId = escapeCssSelectorIdent(id);\n    return /** @type {HTMLElement|null} */ (shadowRoot./*OK*/ querySelector(\n      `#${escapedId}`\n    ));\n  };\n\n  // The styleSheets property should have a list of local styles.\n  Object.defineProperty(shadowRoot, 'styleSheets', {\n    get: () => {\n      if (!doc.styleSheets) {\n        return [];\n      }\n      return toArray(doc.styleSheets).filter((styleSheet) =>\n        shadowRoot.contains(styleSheet.ownerNode)\n      );\n    },\n  });\n\n  return shadowRoot;\n}\n\n/**\n * Imports a body into a shadow root with the workaround for a polyfill case.\n * @param {!ShadowRoot} shadowRoot\n * @param {!Element} body\n * @param {boolean} deep\n * @return {!Element}\n */\nexport function importShadowBody(shadowRoot, body, deep) {\n  const doc = shadowRoot.ownerDocument;\n  let resultBody;\n  if (isShadowCssSupported()) {\n    resultBody = dev().assertElement(doc.importNode(body, deep));\n  } else {\n    resultBody = doc.createElement('amp-body');\n    setInitialDisplay(resultBody, 'block');\n    for (let i = 0; i < body.attributes.length; i++) {\n      resultBody.setAttribute(\n        body.attributes[0].name,\n        body.attributes[0].value\n      );\n    }\n    if (deep) {\n      for (let n = body.firstChild; !!n; n = n.nextSibling) {\n        resultBody.appendChild(doc.importNode(n, true));\n      }\n    }\n  }\n  setStyle(resultBody, 'position', 'relative');\n  const oldBody = shadowRoot.body;\n  if (oldBody) {\n    shadowRoot.removeChild(oldBody);\n  }\n  shadowRoot.appendChild(resultBody);\n  Object.defineProperty(shadowRoot, 'body', {\n    configurable: true,\n    value: resultBody,\n  });\n  return resultBody;\n}\n\n/**\n * If necessary, transforms CSS to isolate AMP CSS within the shaodw root and\n * reduce the possibility of high-level conflicts.\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n */\nexport function transformShadowCss(shadowRoot, css) {\n  return scopeShadowCss(shadowRoot, css);\n}\n\n/**\n * Transforms CSS to isolate AMP CSS within the shadow root and reduce the\n * possibility of high-level conflicts. There are two types of transformations:\n * 1. Root transformation: `body` -> `amp-body`, etc.\n * 2. Scoping: `a {}` -> `.i-amphtml-sd-123 a {}`.\n *\n * @param {!ShadowRoot} shadowRoot\n * @param {string} css\n * @return {string}\n * @visibleForTesting\n */\nexport function scopeShadowCss(shadowRoot, css) {\n  const id = devAssert(shadowRoot.id);\n  const doc = shadowRoot.ownerDocument;\n  let rules = null;\n  // Try to use a separate document.\n  try {\n    rules = getStylesheetRules(doc.implementation.createHTMLDocument(''), css);\n  } catch (e) {\n    // Ignore.\n  }\n  // Try to use the current document.\n  if (!rules) {\n    try {\n      rules = getStylesheetRules(doc, css);\n    } catch (e) {\n      // Ignore.\n    }\n  }\n\n  // No rules could be parsed - return css as is.\n  if (!rules) {\n    return css;\n  }\n\n  // Patch selectors.\n  // Invoke `ShadowCSS.scopeRules` via `call` because the way it uses `this`\n  // internally conflicts with Closure compiler's advanced optimizations.\n  const {scopeRules} = ShadowCSS;\n  return scopeRules.call(ShadowCSS, rules, `.${id}`, transformRootSelectors);\n}\n\n/**\n * Replaces top-level selectors such as `html` and `body` with their polyfill\n * counterparts: `amp-html` and `amp-body`.\n * @param {string} selector\n * @return {string}\n */\nfunction transformRootSelectors(selector) {\n  return selector.replace(/(html|body)/g, rootSelectorPrefixer);\n}\n\n/**\n * See `transformRootSelectors`.\n * @param {string} match\n * @param {string} name\n * @param {number} pos\n * @param {string} selector\n * @return {string}\n * @private\n */\nfunction rootSelectorPrefixer(match, name, pos, selector) {\n  const prev = selector.charAt(pos - 1);\n  const next = selector.charAt(pos + match.length);\n  if (\n    (!prev || CSS_SELECTOR_BEG_REGEX.test(prev)) &&\n    (!next || CSS_SELECTOR_END_REGEX.test(next))\n  ) {\n    return 'amp-' + match;\n  }\n  return match;\n}\n\n/**\n * @param {!Document} doc\n * @param {string} css\n * @return {?CSSRuleList}\n */\nfunction getStylesheetRules(doc, css) {\n  const style = doc.createElement('style');\n  style./*OK*/ textContent = css;\n  try {\n    (doc.head || doc.documentElement).appendChild(style);\n    if (style.sheet) {\n      return style.sheet.cssRules;\n    }\n    return null;\n  } finally {\n    if (style.parentNode) {\n      style.parentNode.removeChild(style);\n    }\n  }\n}\n\n/**\n * @param {!ShadowRoot} shadowRoot\n * @param {string} name\n * @param {string} cssText\n */\nexport function installShadowStyle(shadowRoot, name, cssText) {\n  const doc = shadowRoot.ownerDocument;\n  const win = toWin(doc.defaultView);\n  if (\n    shadowRoot.adoptedStyleSheets !== undefined &&\n    win.CSSStyleSheet.prototype.replaceSync !== undefined\n  ) {\n    const cache = win[SHADOW_CSS_CACHE] || (win[SHADOW_CSS_CACHE] = {});\n    let styleSheet = cache[name];\n    if (!styleSheet) {\n      styleSheet = new win.CSSStyleSheet();\n      styleSheet.replaceSync(cssText);\n      cache[name] = styleSheet;\n    }\n    shadowRoot.adoptedStyleSheets = shadowRoot.adoptedStyleSheets.concat(\n      styleSheet\n    );\n  } else {\n    const styleEl = doc.createElement('style');\n    styleEl.setAttribute('data-name', name);\n    styleEl.textContent = cssText;\n    shadowRoot.appendChild(styleEl);\n  }\n}\n\n/**\n * @param {!Window} win\n * @visibleForTesting\n */\nexport function resetShadowStyleCacheForTesting(win) {\n  win[SHADOW_CSS_CACHE] = null;\n}\n\n/**\n * @param {boolean|undefined} val\n * @visibleForTesting\n */\nexport function setShadowDomStreamingSupportedForTesting(val) {\n  shadowDomStreamingSupported = val;\n}\n\n/**\n * Returns `true` if the Shadow DOM streaming is supported.\n * @param {!Window} win\n * @return {boolean}\n */\nexport function isShadowDomStreamingSupported(win) {\n  if (shadowDomStreamingSupported === undefined) {\n    shadowDomStreamingSupported = calcShadowDomStreamingSupported(win);\n  }\n  return shadowDomStreamingSupported;\n}\n\n/**\n * @param {!Window} win\n * @return {boolean}\n */\nfunction calcShadowDomStreamingSupported(win) {\n  // API must be supported.\n  if (\n    !win.document.implementation ||\n    typeof win.document.implementation.createHTMLDocument != 'function'\n  ) {\n    return false;\n  }\n  // Firefox does not support DOM streaming.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=867102\n  if (Services.platformFor(win).isFirefox()) {\n    return false;\n  }\n  // Assume full streaming support.\n  return true;\n}\n\n/**\n * Creates the Shadow DOM writer available on this platform.\n * @param {!Window} win\n * @return {!./utils/dom-writer.DomWriter}\n */\nexport function createShadowDomWriter(win) {\n  if (isShadowDomStreamingSupported(win)) {\n    return new DomWriterStreamer(win);\n  }\n  return new DomWriterBulk(win);\n}\n", "/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Preact from './index';\nimport {ActionTrust} from '../action-constants';\nimport {AmpEvents} from '../amp-events';\nimport {CanPlay, CanRender, LoadingProp} from '../contextprops';\nimport {Deferred} from '../utils/promise';\nimport {Layout, isLayoutSizeDefined} from '../layout';\nimport {Loading} from '../loading';\nimport {MediaQueryProps} from '../utils/media-query-props';\nimport {Slot, createSlot} from './slot';\nimport {WithAmpContext} from './context';\nimport {\n  addGroup,\n  discover,\n  setGroupProp,\n  setParent,\n  subscribe,\n} from '../context';\nimport {cancellation} from '../error';\nimport {\n  childElementByTag,\n  createElementWithAttributes,\n  dispatchCustomEvent,\n  matches,\n  parseBooleanAttribute,\n} from '../dom';\nimport {dashToCamelCase} from '../string';\nimport {devAssert} from '../log';\nimport {dict, hasOwn, map} from '../utils/object';\nimport {getDate} from '../utils/date';\nimport {getMode} from '../mode';\nimport {hydrate, render} from './index';\nimport {installShadowStyle} from '../shadow-embed';\nimport {sequentialIdGenerator} from '../utils/id-generator';\n\n/**\n * The following combinations are allowed.\n * - `attr` and (optionally) `type` can be specified when an attribute maps to\n *   a component prop 1:1.\n * - `attrs` and `parseAttrs` can be specified when multiple attributes map\n *   to a single prop.\n * - `attrPrefix` can be specified when multiple attributes with the same prefix\n *   map to a single prop object. The prefix cannot equal the attribute name.\n *\n * @typedef {{\n *   attr: (string|undefined),\n *   type: (string|undefined),\n *   attrPrefix: (string|undefined),\n *   attrs: (!Array<string>|undefined),\n *   parseAttrs: ((function(!Element):*)|undefined),\n *   media: (boolean|undefined),\n *   default: *,\n * }}\n */\nlet AmpElementPropDef;\n\n/**\n * @typedef {{\n *   name: string,\n *   selector: string,\n *   single: (boolean|undefined),\n *   clone: (boolean|undefined),\n *   props: (!JsonObject|undefined),\n * }}\n */\nlet ChildDef;\n\n/** @const {!MutationObserverInit} */\nconst CHILDREN_MUTATION_INIT = {\n  childList: true,\n};\n\n/** @const {!MutationObserverInit} */\nconst PASSTHROUGH_MUTATION_INIT = {\n  childList: true,\n  characterData: true,\n};\n\n/** @const {!MutationObserverInit} */\nconst TEMPLATES_MUTATION_INIT = {\n  childList: true,\n};\n\n/** @const {!JsonObject<string, string>} */\nconst SHADOW_CONTAINER_ATTRS = dict({\n  'style': 'display: contents; background: inherit;',\n  'part': 'c',\n});\n\n/** @const {!JsonObject<string, string>} */\nconst SERVICE_SLOT_ATTRS = dict({'name': 'i-amphtml-svc'});\n\n/**\n * The same as `applyFillContent`, but inside the shadow.\n * @const {!Object}\n */\nconst SIZE_DEFINED_STYLE = {\n  'position': 'absolute',\n  'top': '0',\n  'left': '0',\n  'width': '100%',\n  'height': '100%',\n};\n\n/**\n * This is an internal property that marks light DOM nodes that were rendered\n * by AMP/Preact bridge and thus must be ignored by the mutation observer to\n * avoid mutate->rerender->mutate loops.\n */\nconst RENDERED_PROP = '__AMP_RENDERED';\n\nconst UNSLOTTED_GROUP = 'unslotted';\n\n/** @return {boolean} */\nconst MATCH_ANY = () => true;\n\nconst childIdGenerator = sequentialIdGenerator();\n\n/**\n * Wraps a Preact Component in a BaseElement class.\n *\n * Most functionality should be done in Preact. We don't expose the BaseElement\n * subclass on purpose, you're not meant to do work in the subclass! There will\n * be very few exceptions, which is why we allow options to configure the\n * class.\n *\n * @template API_TYPE\n */\nexport class PreactBaseElement extends AMP.BaseElement {\n  /**\n   * @return {boolean}\n   * @nocollapse\n   */\n  static reqiuresShadowDom() {\n    // eslint-disable-next-line local/no-static-this\n    return usesShadowDom(this);\n  }\n\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {!JsonObject} */\n    this.defaultProps_ = dict({\n      'loading': Loading.AUTO,\n      'onLoad': this.onLoad_.bind(this),\n      'onLoadError': this.onLoadError_.bind(this),\n    });\n\n    /** @private {!AmpContextDef.ContextType} */\n    this.context_ = {\n      renderable: false,\n      playable: false,\n      loading: Loading.LAZY,\n      notify: () => this.mutateElement(() => {}),\n    };\n\n    /** @private {?API_TYPE} */\n    this.apiWrapper_ = null;\n\n    /** @private {?API_TYPE} */\n    this.currentRef_ = null;\n\n    /** @param {?API_TYPE|null} current */\n    this.refSetter_ = (current) => {\n      // The API shape **must** be consistent.\n      if (current !== null) {\n        if (this.apiWrapper_) {\n          this.checkApiWrapper_(current);\n        } else {\n          this.initApiWrapper_(current);\n        }\n      }\n      this.currentRef_ = current;\n    };\n\n    /** @type {?Deferred<!API_TYPE>} */\n    this.deferredApi_ = null;\n\n    /** @private {?Array} */\n    this.contextValues_ = null;\n\n    /** @private {?Node} */\n    this.container_ = null;\n\n    /** @private {boolean} */\n    this.scheduledRender_ = false;\n\n    /** @private {?Deferred} */\n    this.renderDeferred_ = null;\n\n    /** @private @const {function()} */\n    this.boundRerender_ = () => {\n      this.scheduledRender_ = false;\n      this.rerender_();\n    };\n\n    /** @private {boolean} */\n    this.hydrationPending_ = false;\n\n    /** @private {boolean} */\n    this.mounted_ = false;\n\n    /** @private {?Deferred} */\n    this.loadDeferred_ = null;\n\n    /** @protected {?MutationObserver} */\n    this.observer = null;\n\n    /** @protected {?MediaQueryProps} */\n    this.mediaQueryProps_ = null;\n  }\n\n  /**\n   * A chance to initialize default Preact props for the element.\n   *\n   * @return {!JsonObject|undefined}\n   */\n  init() {}\n\n  /** @override */\n  isLayoutSupported(layout) {\n    const Ctor = this.constructor;\n    if (Ctor['layoutSizeDefined']) {\n      return (\n        isLayoutSizeDefined(layout) ||\n        // This allows a developer to specify the component's size using the\n        // user stylesheet without the help of AMP's static layout rules.\n        // Bento components use `ContainWrapper` with `contain:strict`, thus\n        // if a user stylesheet doesn't provide for the appropriate size, the\n        // element's size will be 0. The user stylesheet CSS can use\n        // fixed `width`/`height`, `aspect-ratio`, `flex`, `grid`, or any\n        // other CSS layouts coupled with `@media` queries and other CSS tools.\n        // Besides normal benefits of using plain CSS, an important feature of\n        // using this layout is that AMP does not add \"sizer\" elements thus\n        // keeping the user DOM clean.\n        layout == Layout.CONTAINER\n      );\n    }\n    return super.isLayoutSupported(layout);\n  }\n\n  /** @override */\n  buildCallback() {\n    const Ctor = this.constructor;\n\n    this.observer = new MutationObserver(this.checkMutations_.bind(this));\n    const childrenInit = Ctor['children'] ? CHILDREN_MUTATION_INIT : null;\n    const passthroughInit =\n      Ctor['passthrough'] || Ctor['passthroughNonEmpty']\n        ? PASSTHROUGH_MUTATION_INIT\n        : null;\n    const templatesInit = Ctor['usesTemplate'] ? TEMPLATES_MUTATION_INIT : null;\n    this.observer.observe(this.element, {\n      attributes: true,\n      ...childrenInit,\n      ...passthroughInit,\n      ...templatesInit,\n    });\n\n    this.mediaQueryProps_ = hasMediaQueryProps(Ctor)\n      ? new MediaQueryProps(this.win, () => this.scheduleRender_())\n      : null;\n\n    const staticProps = Ctor['staticProps'];\n    const initProps = this.init();\n    Object.assign(\n      /** @type {!Object} */ (this.defaultProps_),\n      staticProps,\n      initProps\n    );\n\n    this.checkPropsPostMutations();\n\n    // Unmount callback.\n    subscribe(this.element, [], () => {\n      return () => {\n        this.mounted_ = false;\n        if (this.container_) {\n          // We have to unmount the component to run all cleanup functions and\n          // release handlers. The only way to unmount right now is by\n          // unrendering the DOM. If the new `unmount` API becomes available, this\n          // code can be changed to `unmount` and the follow up render would\n          // have to execute the fast `hydrate` API.\n          render(null, this.container_);\n        }\n      };\n    });\n\n    // Unblock rendering on first `CanRender` response. And keep the context\n    // in-sync.\n    subscribe(\n      this.element,\n      [CanRender, CanPlay, LoadingProp],\n      (canRender, canPlay, loading) => {\n        this.context_.renderable = canRender;\n        this.context_.playable = canPlay;\n        // TODO(#30283): trust \"loading\" completely from the context once it's\n        // fully supported.\n        this.context_.loading =\n          loading == Loading.AUTO ? Loading.LAZY : loading;\n        this.mounted_ = true;\n        this.scheduleRender_();\n      }\n    );\n\n    const useContexts = Ctor['useContexts'];\n    if (useContexts.length != 0) {\n      subscribe(this.element, useContexts, (...contexts) => {\n        this.contextValues_ = contexts;\n        this.scheduleRender_();\n      });\n    }\n\n    this.renderDeferred_ = new Deferred();\n    this.scheduleRender_();\n    return this.renderDeferred_.promise;\n  }\n\n  /** @override */\n  layoutCallback() {\n    const Ctor = this.constructor;\n    if (!Ctor['loadable']) {\n      return super.layoutCallback();\n    }\n\n    this.mutateProps(dict({'loading': Loading.EAGER}));\n\n    // Check if the element has already been loaded.\n    const api = this.currentRef_;\n    if (api && api['complete']) {\n      return Promise.resolve();\n    }\n\n    // If not, wait for `onLoad` callback.\n    this.loadDeferred_ = new Deferred();\n    return this.loadDeferred_.promise;\n  }\n\n  /** @override */\n  unlayoutCallback() {\n    if (this.mediaQueryProps_) {\n      this.mediaQueryProps_.dispose();\n    }\n    const Ctor = this.constructor;\n    if (!Ctor['loadable']) {\n      return super.unlayoutCallback();\n    }\n    this.mutateProps(dict({'loading': Loading.UNLOAD}));\n    this.onLoadError_(cancellation());\n    return true;\n  }\n\n  /** @override */\n  attachedCallback() {\n    discover(this.element);\n  }\n\n  /** @override */\n  detachedCallback() {\n    discover(this.element);\n  }\n\n  /** @override */\n  mutatedAttributesCallback() {\n    if (this.container_) {\n      this.scheduleRender_();\n    }\n  }\n\n  /**\n   * @protected\n   * @param {!JsonObject} props\n   */\n  mutateProps(props) {\n    Object.assign(/** @type {!Object} */ (this.defaultProps_), props);\n    this.scheduleRender_();\n  }\n\n  /**\n   * @return {!API_TYPE}\n   * @protected\n   */\n  api() {\n    return devAssert(this.currentRef_);\n  }\n\n  /**\n   * @param {string} alias\n   * @param {function(!API_TYPE, !../service/action-impl.ActionInvocation)} handler\n   * @param {../action-constants.ActionTrust} minTrust\n   * @protected\n   */\n  registerApiAction(alias, handler, minTrust = ActionTrust.DEFAULT) {\n    this.registerAction(\n      alias,\n      (invocation) => handler(this.api(), invocation),\n      minTrust\n    );\n  }\n\n  /**\n   * A callback called immediately after mutations have been observed on a\n   * component. This differs from `checkPropsPostMutations` in that it is\n   * called in all cases of mutation.\n   * @param {!Array<MutationRecord>} unusedRecords\n   * @protected\n   */\n  mutationObserverCallback(unusedRecords) {}\n\n  /**\n   * A callback called immediately after mutations have been observed on a\n   * component's defined props. The implementation can verify if any\n   * additional properties need to be mutated via `mutateProps()` API.\n   * @protected\n   */\n  checkPropsPostMutations() {}\n\n  /**\n   * A callback called to compute props before rendering is run. The properties\n   * computed here and ephemeral and thus should not be persisted via a\n   * `mutateProps()` method.\n   * @param {!JsonObject} unusedProps\n   * @protected\n   */\n  updatePropsForRendering(unusedProps) {}\n\n  /**\n   * A callback called to check whether the element is ready for rendering.\n   * @param {!JsonObject} unusedProps\n   * @return {boolean}\n   * @protected\n   */\n  isReady(unusedProps) {\n    return true;\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} records\n   * @private\n   */\n  checkMutations_(records) {\n    const Ctor = this.constructor;\n    this.mutationObserverCallback(records);\n    const rerender = records.some((m) => shouldMutationBeRerendered(Ctor, m));\n    if (rerender) {\n      this.checkPropsPostMutations();\n      this.scheduleRender_();\n    }\n  }\n\n  /** @private */\n  scheduleRender_() {\n    if (!this.scheduledRender_) {\n      this.scheduledRender_ = true;\n      this.mutateElement(this.boundRerender_);\n    }\n  }\n\n  /** @private */\n  onLoad_() {\n    if (this.loadDeferred_) {\n      this.loadDeferred_.resolve();\n      this.loadDeferred_ = null;\n      dispatchCustomEvent(this.element, 'load', null, {bubbles: false});\n    }\n  }\n\n  /**\n   * @param {*} opt_reason\n   * @private\n   */\n  onLoadError_(opt_reason) {\n    if (this.loadDeferred_) {\n      this.loadDeferred_.reject(opt_reason || new Error('load error'));\n      this.loadDeferred_ = null;\n      dispatchCustomEvent(this.element, 'error', null, {bubbles: false});\n    }\n  }\n\n  /** @private */\n  rerender_() {\n    // If the component unmounted before the scheduled render runs, exit\n    // early.\n    if (!this.mounted_) {\n      return;\n    }\n\n    const Ctor = this.constructor;\n    const isShadow = usesShadowDom(Ctor);\n    const lightDomTag = isShadow ? null : Ctor['lightDomTag'];\n    const isDetached = Ctor['detached'];\n\n    if (!this.container_) {\n      const doc = this.win.document;\n      if (isShadow) {\n        devAssert(\n          !isDetached,\n          'The AMP element cannot be rendered in detached mode ' +\n            'when configured with \"children\", \"passthrough\", or ' +\n            '\"passthroughNonEmpty\" properties.'\n        );\n        // Check if there's a pre-constructed shadow DOM.\n        let {shadowRoot} = this.element;\n        let container = shadowRoot && childElementByTag(shadowRoot, 'c');\n        if (container) {\n          this.hydrationPending_ = true;\n        } else {\n          // Create new shadow root.\n          shadowRoot = this.element.attachShadow({\n            mode: 'open',\n            delegatesFocus: Ctor['delegatesFocus'],\n          });\n\n          // The pre-constructed shadow root is required to have the stylesheet\n          // inline. Thus, only the new shadow roots share the stylesheets.\n          const shadowCss = Ctor['shadowCss'];\n          if (shadowCss) {\n            installShadowStyle(shadowRoot, this.element.tagName, shadowCss);\n          }\n\n          // Create container.\n          // The pre-constructed shadow root is required to have this container.\n          container = createElementWithAttributes(\n            doc,\n            'c',\n            SHADOW_CONTAINER_ATTRS\n          );\n          shadowRoot.appendChild(container);\n\n          // Create a slot for internal service elements i.e. \"i-amphtml-sizer\".\n          // The pre-constructed shadow root is required to have this slot.\n          const serviceSlot = createElementWithAttributes(\n            doc,\n            'slot',\n            SERVICE_SLOT_ATTRS\n          );\n          shadowRoot.appendChild(serviceSlot);\n        }\n        this.container_ = container;\n\n        // Connect shadow root to the element's context.\n        setParent(shadowRoot, this.element);\n        // In Shadow DOM, only the children distributed in\n        // slots are displayed. All other children are undisplayed. We need\n        // to create a simple mechanism that would automatically compute\n        // `CanRender = false` on undistributed children.\n        addGroup(this.element, UNSLOTTED_GROUP, MATCH_ANY, /* weight */ -1);\n        setGroupProp(this.element, UNSLOTTED_GROUP, CanRender, this, false);\n      } else if (lightDomTag) {\n        this.container_ = this.element;\n        const replacement =\n          childElementByTag(this.container_, lightDomTag) ||\n          doc.createElement(lightDomTag);\n        replacement[RENDERED_PROP] = true;\n        if (Ctor['layoutSizeDefined']) {\n          replacement.classList.add('i-amphtml-fill-content');\n        }\n        this.container_.appendChild(replacement);\n      } else {\n        const container = doc.createElement('i-amphtml-c');\n        this.container_ = container;\n        this.applyFillContent(container);\n        if (!isDetached) {\n          this.element.appendChild(container);\n        }\n      }\n    }\n\n    // Exit early if contexts are not ready. Optional contexts will yield\n    // right away, even when `null`. The required contexts will block the\n    // `contextValues` until available.\n    const useContexts = Ctor['useContexts'];\n    const contextValues = this.contextValues_;\n    const isContextReady = useContexts.length == 0 || contextValues != null;\n    if (!isContextReady) {\n      return;\n    }\n\n    // Process attributes and children.\n    const props = collectProps(\n      Ctor,\n      this.element,\n      this.refSetter_,\n      this.defaultProps_,\n      this.mediaQueryProps_\n    );\n    this.updatePropsForRendering(props);\n\n    if (!this.isReady(props)) {\n      return;\n    }\n\n    // While this \"creates\" a new element, diffing will not create a second\n    // instance of Component. Instead, the existing one already rendered into\n    // this element will be reused.\n    let comp = Preact.createElement(Ctor['Component'], props);\n\n    // Add contexts.\n    for (let i = 0; i < useContexts.length; i++) {\n      const Context = useContexts[i].type;\n      const value = contextValues[i];\n      if (value) {\n        comp = <Context.Provider value={value}>{comp}</Context.Provider>;\n      }\n    }\n\n    // Add AmpContext with renderable/playable proeprties.\n    const v = <WithAmpContext {...this.context_}>{comp}</WithAmpContext>;\n\n    if (this.hydrationPending_) {\n      this.hydrationPending_ = false;\n      hydrate(v, this.container_);\n    } else {\n      const replacement = lightDomTag\n        ? childElementByTag(this.container_, lightDomTag)\n        : null;\n      if (replacement) {\n        replacement[RENDERED_PROP] = true;\n      }\n      render(v, this.container_, replacement);\n    }\n\n    // Dispatch the DOM_UPDATE event when rendered in the light DOM.\n    if (!isShadow && !isDetached) {\n      this.mutateElement(() =>\n        dispatchCustomEvent(this.element, AmpEvents.DOM_UPDATE, null)\n      );\n    }\n\n    if (this.renderDeferred_) {\n      this.renderDeferred_.resolve();\n      this.renderDeferred_ = null;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {string} prop\n   * @param {*} opt_fallback\n   * @return {*}\n   */\n  getProp(prop, opt_fallback) {\n    if (!hasOwn(this.defaultProps_, prop)) {\n      return opt_fallback;\n    }\n    return this.defaultProps_[prop];\n  }\n\n  /**\n   * Returns reference to upgraded imperative API object, as in React's\n   * useImperativeHandle.\n   *\n   * @return {!Promise<!API_TYPE>}\n   * @override\n   */\n  getApi() {\n    const api = this.apiWrapper_;\n    if (api) {\n      return Promise.resolve(api);\n    }\n    if (!this.deferredApi_) {\n      this.deferredApi_ = new Deferred();\n    }\n    return this.deferredApi_.promise;\n  }\n\n  /**\n   * Creates a wrapper around a Preact ref. The API surface exposed by this ref\n   * **must** be consistent accross all rerenders.\n   *\n   * This wrapper is necessary because every time React rerenders, it creates\n   * (depending on deps checking) a new imperative handle and sets that to\n   * `ref.current`. So if we ever returned `ref.current` directly, it could go\n   * stale by the time its actually used.\n   *\n   * @param {!API_TYPE} current\n   * @private\n   */\n  initApiWrapper_(current) {\n    const api = map();\n    const keys = Object.keys(current);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      wrapRefProperty(this, api, key);\n    }\n    this.apiWrapper_ = api;\n    if (this.deferredApi_) {\n      this.deferredApi_.resolve(api);\n      this.deferredApi_ = null;\n    }\n  }\n\n  /**\n   * Verifies that every Preact render exposes the same API surface as the previous render.\n   * If it does not, the API wrapper is syncrhonized.\n   *\n   * @param {!API_TYPE} current\n   * @private\n   */\n  checkApiWrapper_(current) {\n    if (!getMode().localDev) {\n      return;\n    }\n    const api = this.apiWrapper_;\n    const newKeys = Object.keys(current);\n    for (let i = 0; i < newKeys.length; i++) {\n      const key = newKeys[i];\n      devAssert(\n        hasOwn(api, key),\n        'Inconsistent Bento API shape: imperative API gained a \"%s\" key for %s',\n        key,\n        this.element\n      );\n    }\n    const oldKeys = Object.keys(api);\n    for (let i = 0; i < oldKeys.length; i++) {\n      const key = oldKeys[i];\n      devAssert(\n        hasOwn(current, key),\n        'Inconsistent Bento API shape: imperative API lost a \"%s\" key for %s',\n        key,\n        this.element\n      );\n    }\n  }\n\n  /**\n   * Dispatches an error event. Provided as a method so Preact components can\n   * call into it, while AMP components can override to trigger action services.\n   * @param {!Element} element\n   * @param {string} eventName\n   * @param {!JSONObject|string|undefined|null} detail\n   * @return {!Object}\n   */\n  triggerEvent(element, eventName, detail) {\n    dispatchCustomEvent(element, eventName, detail);\n  }\n}\n\n/**\n * @param {tyepof PreactBaseElement} baseElement\n * @param {!Object} api\n * @param {string} key\n */\nfunction wrapRefProperty(baseElement, api, key) {\n  Object.defineProperty(api, key, {\n    configurable: true,\n\n    get() {\n      return baseElement.currentRef_[key];\n    },\n\n    set(v) {\n      baseElement.currentRef_[key] = v;\n    },\n  });\n}\n\n/**\n * Returns the upgraded imperative API object, once Preact has actually mounted.\n *\n * This technically works with both Bento and Legacy components, returning the\n * BaseElement instance in the later case.\n *\n * @param {!Element} el\n * @return {!Promise<!Object>}\n */\nexport function whenUpgraded(el) {\n  return el.ownerDocument.defaultView.customElements\n    .whenDefined(el.localName)\n    .then(() => el.getImpl())\n    .then((impl) => impl.getApi());\n}\n\n// Ideally, these would be Static Class Fields. But Closure can't even.\n\n/**\n * Override to provide the Component definition.\n *\n * @protected {!PreactDef.FunctionalComponent}\n */\nPreactBaseElement['Component'] = function () {\n  devAssert(false, 'Must provide Component');\n};\n\n/**\n * If default props are static, this can be used instead of init().\n * @protected {!JsonObject|undefined}\n */\nPreactBaseElement['staticProps'] = undefined;\n\n/**\n * @protected {!Array<!ContextProp>}\n */\nPreactBaseElement['useContexts'] = getMode().localDev ? Object.freeze([]) : [];\n\n/**\n * Whether the component implements a loading protocol.\n *\n * @protected {boolean}\n */\nPreactBaseElement['loadable'] = false;\n\n/**\n * An override to specify that the component requires `layoutSizeDefined`.\n * This typically means that the element's `isLayoutSupported()` is\n * implemented via `isLayoutSizeDefined()`, and this is how the default\n * `isLayoutSupported()` is implemented when this flag is set.\n *\n * @protected {string}\n */\nPreactBaseElement['layoutSizeDefined'] = false;\n\n/**\n * The tag name, e.g. \"div\", \"span\", time\" that should be used as a replacement\n * node for Preact rendering. This is the node that Preact will diff with\n * with specified, instead of rendering a new node. Only applicable to light-DOM\n * mapping styles.\n *\n * @protected {string}\n */\nPreactBaseElement['lightDomTag'] = '';\n\n/**\n * An override to specify an exact className prop to Preact.\n *\n * @protected {string}\n */\nPreactBaseElement['className'] = '';\n\n/**\n * Enabling passthrough mode alters the children slotting to use a single\n * `<slot>` element for all children. This is in contrast to children mode,\n * which creates a new named `<slot>` for every child.\n *\n * @protected {boolean}\n */\nPreactBaseElement['passthrough'] = false;\n\n/**\n * Handling children with passthroughNonEmpty mode is similar to passthrough\n * mode except that when there are no children elements, the returned\n * prop['children'] will be null instead of the unnamed <slot>.  This allows\n * the Preact environment to have conditional behavior depending on whether\n * or not there are children.\n *\n * @protected {boolean}\n */\nPreactBaseElement['passthroughNonEmpty'] = false;\n\n/**\n * Whether this element uses \"templates\" system.\n *\n * @protected {boolean}\n */\nPreactBaseElement['usesTemplate'] = false;\n\n/**\n * The CSS for shadow stylesheets.\n *\n * @protected {?string}\n */\nPreactBaseElement['shadowCss'] = null;\n\n/**\n * Enabling detached mode alters the children to be rendered in an\n * unappended container. By default the children will be attached to the DOM.\n *\n * @protected {boolean}\n */\nPreactBaseElement['detached'] = false;\n\n/**\n * This enables the 'delegatesFocus' option when creating the shadow DOM for\n * this component.  A key feature of 'delegatesFocus' set to true is that\n * when elements within the shadow DOM gain focus, the focus is also applied\n * to the host element.\n */\nPreactBaseElement['delegatesFocus'] = false;\n\n/**\n * Provides a mapping of Preact prop to AmpElement DOM attributes.\n *\n * @protected {!Object<string, !AmpElementPropDef>}\n */\nPreactBaseElement['props'] = {};\n\n/**\n * @protected {!Object<string, !ChildDef>|null}\n */\nPreactBaseElement['children'] = null;\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @return {boolean}\n */\nfunction usesShadowDom(Ctor) {\n  return !!(\n    Ctor['children'] ||\n    Ctor['passthrough'] ||\n    Ctor['passthroughNonEmpty']\n  );\n}\n\n/**\n * @param {null|string} attributeName\n * @param {string|undefined} attributePrefix\n * @return {boolean}\n */\nfunction matchesAttrPrefix(attributeName, attributePrefix) {\n  return (\n    attributeName !== null &&\n    attributePrefix !== undefined &&\n    attributeName.startsWith(attributePrefix) &&\n    attributeName !== attributePrefix\n  );\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @param {!AmpElement} element\n * @param {{current: ?}} ref\n * @param {!JsonObject|null|undefined} defaultProps\n * @param {?MediaQueryProps} mediaQueryProps\n * @return {!JsonObject}\n */\nfunction collectProps(Ctor, element, ref, defaultProps, mediaQueryProps) {\n  const {\n    'children': childrenDefs,\n    'className': className,\n    'layoutSizeDefined': layoutSizeDefined,\n    'lightDomTag': lightDomTag,\n    'passthrough': passthrough,\n    'passthroughNonEmpty': passthroughNonEmpty,\n    'props': propDefs,\n  } = Ctor;\n\n  if (mediaQueryProps) {\n    mediaQueryProps.start();\n  }\n\n  const props = /** @type {!JsonObject} */ ({...defaultProps, ref});\n\n  // Light DOM.\n  if (lightDomTag) {\n    props[RENDERED_PROP] = true;\n    props['as'] = lightDomTag;\n  }\n\n  // Class.\n  if (className) {\n    props['className'] = className;\n  }\n\n  // Common styles.\n  if (layoutSizeDefined) {\n    if (usesShadowDom(Ctor)) {\n      props['style'] = SIZE_DEFINED_STYLE;\n    } else {\n      props['className'] =\n        `i-amphtml-fill-content ${className || ''}`.trim() || null;\n    }\n  }\n\n  // Props.\n  parsePropDefs(props, propDefs, element, mediaQueryProps);\n\n  // Children.\n  // There are plain \"children\" and there're slotted children assigned\n  // as separate properties. Thus in a carousel the plain \"children\" are\n  // slides, and the \"arrowNext\" children are passed via a \"arrowNext\"\n  // property.\n  const errorMessage =\n    'only one of \"passthrough\", \"passthroughNonEmpty\"' +\n    ' or \"children\" may be given';\n  if (passthrough) {\n    devAssert(!childrenDefs && !passthroughNonEmpty, errorMessage);\n    props['children'] = [<Slot />];\n  } else if (passthroughNonEmpty) {\n    devAssert(!childrenDefs, errorMessage);\n    // If all children are whitespace text nodes, consider the element as\n    // having no children\n    props['children'] = element\n      .getRealChildNodes()\n      .every(\n        (node) =>\n          node.nodeType === /* TEXT_NODE */ 3 &&\n          node.nodeValue.trim().length === 0\n      )\n      ? null\n      : [<Slot />];\n  } else if (childrenDefs) {\n    const children = [];\n    props['children'] = children;\n\n    const nodes = element.getRealChildNodes();\n    for (let i = 0; i < nodes.length; i++) {\n      const childElement = nodes[i];\n      const def = matchChild(childElement, childrenDefs);\n      if (!def) {\n        continue;\n      }\n\n      const {single, name, clone, props: slotProps = {}} = def;\n      const parsedSlotProps = {};\n      parsePropDefs(parsedSlotProps, slotProps, childElement, mediaQueryProps);\n\n      // TBD: assign keys, reuse slots, etc.\n      if (single) {\n        props[name] = createSlot(\n          childElement,\n          childElement.getAttribute('slot') || `i-amphtml-${name}`,\n          parsedSlotProps\n        );\n      } else {\n        const list =\n          name == 'children' ? children : props[name] || (props[name] = []);\n        list.push(\n          clone\n            ? createShallowVNodeCopy(childElement)\n            : createSlot(\n                childElement,\n                childElement.getAttribute('slot') ||\n                  `i-amphtml-${name}-${childIdGenerator()}`,\n                parsedSlotProps\n              )\n        );\n      }\n    }\n  }\n\n  if (mediaQueryProps) {\n    mediaQueryProps.complete();\n  }\n\n  return props;\n}\n\n/**\n * @param {!Object} props\n * @param {!Object} propDefs\n * @param {!Element} element\n * @param {?MediaQueryProps} mediaQueryProps\n */\nfunction parsePropDefs(props, propDefs, element, mediaQueryProps) {\n  for (const name in propDefs) {\n    const def = /** @type {!AmpElementPropDef} */ (propDefs[name]);\n    let value;\n    if (def.attr) {\n      value = element.getAttribute(def.attr);\n      if (def.media && value != null) {\n        value = mediaQueryProps.resolveListQuery(String(value));\n      }\n    } else if (def.parseAttrs) {\n      devAssert(def.attrs);\n      value = def.parseAttrs(element);\n    } else if (def.attrPrefix) {\n      const currObj = {};\n      let objContains = false;\n      const attrs = element.attributes;\n      for (let i = 0; i < attrs.length; i++) {\n        const attrib = attrs[i];\n        if (matchesAttrPrefix(attrib.name, def.attrPrefix)) {\n          currObj[dashToCamelCase(attrib.name.slice(def.attrPrefix.length))] =\n            attrib.value;\n          objContains = true;\n        }\n      }\n      if (objContains) {\n        value = currObj;\n      }\n    }\n    if (value == null) {\n      if (def.default != null) {\n        props[name] = def.default;\n      }\n    } else {\n      const v =\n        def.type == 'number'\n          ? parseFloat(value)\n          : def.type == 'boolean'\n          ? parseBooleanAttribute(/** @type {string} */ (value))\n          : def.type == 'date'\n          ? getDate(value)\n          : value;\n      props[name] = v;\n    }\n  }\n}\n\n/**\n * Copies an Element into a VNode representation.\n * (Interpretation into VNode is not recursive, so it excludes children.)\n * @param {!Element} element\n * @return {!PreactDef.Renderable}\n */\nfunction createShallowVNodeCopy(element) {\n  const props = {\n    // Setting `key` to an object is fine in Preact, but not React.\n    'key': element,\n  };\n  // We need to read element.attributes and element.attributes.length only once,\n  // since reading a live NamedNodeMap repeatedly is expensive.\n  const {attributes, localName} = element;\n  const {length} = attributes;\n  for (let i = 0; i < length; i++) {\n    const {name, value} = attributes[i];\n    props[name] = value;\n  }\n  return Preact.createElement(localName, props);\n}\n\n/**\n * @param {!Element} element\n * @param {!Object} defs\n * @return {?ChildDef}\n */\nfunction matchChild(element, defs) {\n  // TODO: a little slow to do this repeatedly.\n  for (const match in defs) {\n    const def = defs[match];\n    const selector = typeof def == 'string' ? def : def.selector;\n    if (matches(element, selector)) {\n      return def;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {!NodeList} nodeList\n * @return {boolean}\n */\nfunction shouldMutationForNodeListBeRerendered(nodeList) {\n  for (let i = 0; i < nodeList.length; i++) {\n    const node = nodeList[i];\n    if (node.nodeType == /* ELEMENT */ 1) {\n      // Ignore service elements, e.g. `<i-amphtml-svc>` or\n      // `<x slot=\"i-amphtml-svc\">`.\n      if (\n        node[RENDERED_PROP] ||\n        node.tagName.startsWith('I-') ||\n        node.getAttribute('slot') == 'i-amphtml-svc'\n      ) {\n        continue;\n      }\n      return true;\n    }\n    if (node.nodeType == /* TEXT */ 3) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @param {!MutationRecord} m\n * @return {boolean}\n */\nfunction shouldMutationBeRerendered(Ctor, m) {\n  const {type} = m;\n  if (type == 'attributes') {\n    // Check whether this is a templates attribute.\n    if (Ctor['usesTemplate'] && m.attributeName == 'template') {\n      return true;\n    }\n    // Check if the attribute is mapped to one of the properties.\n    const props = Ctor['props'];\n    for (const name in props) {\n      const def = /** @type {!AmpElementPropDef} */ (props[name]);\n      if (\n        m.attributeName == def.attr ||\n        (def.attrs && def.attrs.includes(devAssert(m.attributeName))) ||\n        matchesAttrPrefix(m.attributeName, def.attrPrefix)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (type == 'childList') {\n    return (\n      shouldMutationForNodeListBeRerendered(m.addedNodes) ||\n      shouldMutationForNodeListBeRerendered(m.removedNodes)\n    );\n  }\n  return false;\n}\n\n/**\n * @param {typeof PreactBaseElement} Ctor\n * @return {boolean}\n */\nfunction hasMediaQueryProps(Ctor) {\n  const props = Ctor['props'];\n  if (props) {\n    for (const name in props) {\n      const def = /** @type {!AmpElementPropDef} */ (props[name]);\n      if (def.media) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", "/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ActionTrust} from '../../../src/action-constants';\nimport {BaseCarousel} from './base-carousel';\nimport {CSS as COMPONENT_CSS} from './base-carousel.jss';\nimport {CSS} from '../../../build/amp-base-carousel-1.0.css';\nimport {CarouselContextProp} from './carousel-props';\nimport {PreactBaseElement} from '../../../src/preact/base-element';\nimport {Services} from '../../../src/services';\nimport {createCustomEvent} from '../../../src/event-helper';\nimport {dict} from '../../../src/utils/object';\nimport {dispatchCustomEvent} from '../../../src/dom';\nimport {isExperimentOn} from '../../../src/experiments';\nimport {userAssert} from '../../../src/log';\n\n/** @const {string} */\nconst TAG = 'amp-base-carousel';\n\n/** @extends {PreactBaseElement<BaseCarouselDef.CarouselApi>} */\nclass AmpBaseCarousel extends PreactBaseElement {\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?number} */\n    this.slide_ = null;\n  }\n\n  /** @override */\n  init() {\n    const {element} = this;\n    this.registerApiAction('prev', (api) => api.prev(), ActionTrust.LOW);\n    this.registerApiAction('next', (api) => api.next(), ActionTrust.LOW);\n    this.registerApiAction(\n      'goToSlide',\n      (api, invocation) => {\n        const {args} = invocation;\n        api.goToSlide(args['index'] || -1);\n      },\n      ActionTrust.LOW\n    );\n\n    this.slide_ = parseInt(element.getAttribute('slide'), 10);\n    return dict({\n      'defaultSlide': this.slide_ || 0,\n      'onSlideChange': (index) => {\n        fireSlideChangeEvent(this.win, element, index, ActionTrust.HIGH);\n      },\n    });\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    userAssert(\n      isExperimentOn(this.win, 'bento') ||\n        isExperimentOn(this.win, 'bento-carousel'),\n      'expected global \"bento\" or specific \"bento-carousel\" experiment to be enabled'\n    );\n    return super.isLayoutSupported(layout);\n  }\n\n  /** @override */\n  mutationObserverCallback() {\n    const slide = parseInt(this.element.getAttribute('slide'), 10);\n    if (slide === this.slide_) {\n      return;\n    }\n    this.slide_ = slide;\n    if (!isNaN(slide)) {\n      this.api().goToSlide(slide);\n    }\n  }\n}\n\n/** @override */\nAmpBaseCarousel['Component'] = BaseCarousel;\n\n/** @override */\nAmpBaseCarousel['layoutSizeDefined'] = true;\n\n/** @override */\nAmpBaseCarousel['children'] = {\n  'arrowPrev': {\n    name: 'arrowPrev',\n    selector: '[slot=\"prev-arrow\"]',\n    single: true,\n  },\n  'arrowNext': {\n    name: 'arrowNext',\n    selector: '[slot=\"next-arrow\"]',\n    single: true,\n  },\n  'children': {\n    name: 'children',\n    props: {\n      'thumbnailSrc': {attr: 'data-thumbnail-src'},\n    },\n    selector: '*', // This should be last as catch-all.\n    single: false,\n  },\n};\n\n/** @override */\nAmpBaseCarousel['props'] = {\n  'advanceCount': {attr: 'advance-count', type: 'number', media: true},\n  'autoAdvance': {attr: 'auto-advance', type: 'boolean', media: true},\n  'autoAdvanceCount': {attr: 'auto-advance-count', type: 'number', media: true},\n  'autoAdvanceInterval': {\n    attr: 'auto-advance-interval',\n    type: 'number',\n    media: true,\n  },\n  'autoAdvanceLoops': {attr: 'auto-advance-loops', type: 'number', media: true},\n  'controls': {attr: 'controls', type: 'string', media: true},\n  'orientation': {\n    attr: 'orientation',\n    type: 'string',\n    media: true,\n    default: 'horizontal',\n  },\n  'loop': {attr: 'loop', type: 'boolean', media: true},\n  'mixedLength': {attr: 'mixed-length', type: 'boolean', media: true},\n  'outsetArrows': {attr: 'outset-arrows', type: 'boolean', media: true},\n  'snap': {attr: 'snap', type: 'boolean', media: true, default: true},\n  'snapBy': {attr: 'snap-by', type: 'number', media: true},\n  'snapAlign': {attr: 'snap-align', type: 'string', media: true},\n  'visibleCount': {attr: 'visible-count', type: 'number', media: true},\n};\n\n/** @override */\nAmpBaseCarousel['shadowCss'] = COMPONENT_CSS;\n\n/** @override */\nAmpBaseCarousel['useContexts'] = [CarouselContextProp];\n\n/**\n * Triggers a 'slideChange' event with one data param:\n * 'index' - index of the current slide.\n * @param {!Window} win\n * @param {!Element} el The element that was selected or deslected.\n * @param {number} index\n * @param {!ActionTrust} trust\n * @private\n */\nfunction fireSlideChangeEvent(win, el, index, trust) {\n  const eventName = 'slideChange';\n  const data = dict({'index': index});\n  const slideChangeEvent = createCustomEvent(\n    win,\n    `amp-base-carousel.${eventName}`,\n    data\n  );\n  Services.actionServiceForDoc(el).trigger(\n    el,\n    eventName,\n    slideChangeEvent,\n    trust\n  );\n  dispatchCustomEvent(el, eventName, data);\n}\n\nAMP.extension(TAG, '1.0', (AMP) => {\n  AMP.registerElement(TAG, AmpBaseCarousel, CSS);\n});\n"],
  "mappings": "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",
  "names": []
}
